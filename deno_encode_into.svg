<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="5574"><g><title>__GI___clock_gettime (3 samples, 0.05%)</title><rect x="0.0000%" y="1157" width="0.0538%" height="15" fill="rgb(200,50,50)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1167.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::RecordSlot&lt;v8::internal::CompressedHeapObjectSlot&gt; (2 samples, 0.04%)</title><rect x="0.0538%" y="1157" width="0.0359%" height="15" fill="rgb(175,175,50)" fg:x="3" fg:w="2"/><text x="0.3038%" y="1167.50"></text></g><g><title>v8::internal::TorqueGeneratedScopeInfo&lt;v8::internal::ScopeInfo, v8::internal::HeapObject&gt;::AllocatedSize (1 samples, 0.02%)</title><rect x="0.0897%" y="1157" width="0.0179%" height="15" fill="rgb(221,221,66)" fg:x="5" fg:w="1"/><text x="0.3397%" y="1167.50"></text></g><g><title>v8::internal::compiler::BytecodeAnalysis::BytecodeAnalysis (1 samples, 0.02%)</title><rect x="0.1076%" y="1157" width="0.0179%" height="15" fill="rgb(225,225,68)" fg:x="6" fg:w="1"/><text x="0.3576%" y="1167.50"></text></g><g><title>[anon] (8 samples, 0.14%)</title><rect x="0.0000%" y="1173" width="0.1435%" height="15" fill="rgb(216,73,73)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1183.50"></text></g><g><title>v8::platform::DefaultPlatform::MonotonicallyIncreasingTime (1 samples, 0.02%)</title><rect x="0.1256%" y="1157" width="0.0179%" height="15" fill="rgb(205,205,61)" fg:x="7" fg:w="1"/><text x="0.3756%" y="1167.50"></text></g><g><title>__GI___prctl (1 samples, 0.02%)</title><rect x="0.1615%" y="1125" width="0.0179%" height="15" fill="rgb(238,105,105)" fg:x="9" fg:w="1"/><text x="0.4115%" y="1135.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.1615%" y="1109" width="0.0179%" height="15" fill="rgb(205,58,58)" fg:x="9" fg:w="1"/><text x="0.4115%" y="1119.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.1615%" y="1093" width="0.0179%" height="15" fill="rgb(207,60,60)" fg:x="9" fg:w="1"/><text x="0.4115%" y="1103.50"></text></g><g><title>v8::internal::LocalIsolate::LocalIsolate (1 samples, 0.02%)</title><rect x="0.1794%" y="1093" width="0.0179%" height="15" fill="rgb(204,204,60)" fg:x="10" fg:w="1"/><text x="0.4294%" y="1103.50"></text></g><g><title>v8::internal::LocalHeap::LocalHeap (1 samples, 0.02%)</title><rect x="0.1794%" y="1077" width="0.0179%" height="15" fill="rgb(229,229,69)" fg:x="10" fg:w="1"/><text x="0.4294%" y="1087.50"></text></g><g><title>operator new (1 samples, 0.02%)</title><rect x="0.1794%" y="1061" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="10" fg:w="1"/><text x="0.4294%" y="1071.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.1794%" y="1045" width="0.0179%" height="15" fill="rgb(204,57,57)" fg:x="10" fg:w="1"/><text x="0.4294%" y="1055.50"></text></g><g><title>tcache_init (1 samples, 0.02%)</title><rect x="0.1794%" y="1029" width="0.0179%" height="15" fill="rgb(244,115,115)" fg:x="10" fg:w="1"/><text x="0.4294%" y="1039.50"></text></g><g><title>tcache_init (1 samples, 0.02%)</title><rect x="0.1794%" y="1013" width="0.0179%" height="15" fill="rgb(249,122,122)" fg:x="10" fg:w="1"/><text x="0.4294%" y="1023.50"></text></g><g><title>arena_get2 (1 samples, 0.02%)</title><rect x="0.1794%" y="997" width="0.0179%" height="15" fill="rgb(217,75,75)" fg:x="10" fg:w="1"/><text x="0.4294%" y="1007.50"></text></g><g><title>arena_get2 (1 samples, 0.02%)</title><rect x="0.1794%" y="981" width="0.0179%" height="15" fill="rgb(204,57,57)" fg:x="10" fg:w="1"/><text x="0.4294%" y="991.50"></text></g><g><title>_int_new_arena (1 samples, 0.02%)</title><rect x="0.1794%" y="965" width="0.0179%" height="15" fill="rgb(207,60,60)" fg:x="10" fg:w="1"/><text x="0.4294%" y="975.50"></text></g><g><title>new_heap (1 samples, 0.02%)</title><rect x="0.1794%" y="949" width="0.0179%" height="15" fill="rgb(247,119,119)" fg:x="10" fg:w="1"/><text x="0.4294%" y="959.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="0.1794%" y="933" width="0.0179%" height="15" fill="rgb(206,59,59)" fg:x="10" fg:w="1"/><text x="0.4294%" y="943.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="0.1794%" y="917" width="0.0179%" height="15" fill="rgb(207,61,61)" fg:x="10" fg:w="1"/><text x="0.4294%" y="927.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LoadEliminationPhase&gt; (1 samples, 0.02%)</title><rect x="0.1973%" y="1029" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="11" fg:w="1"/><text x="0.4473%" y="1039.50"></text></g><g><title>v8::internal::compiler::LoadEliminationPhase::Run (1 samples, 0.02%)</title><rect x="0.1973%" y="1013" width="0.0179%" height="15" fill="rgb(176,176,50)" fg:x="11" fg:w="1"/><text x="0.4473%" y="1023.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.02%)</title><rect x="0.1973%" y="997" width="0.0179%" height="15" fill="rgb(179,179,51)" fg:x="11" fg:w="1"/><text x="0.4473%" y="1007.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.02%)</title><rect x="0.1973%" y="981" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="11" fg:w="1"/><text x="0.4473%" y="991.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.02%)</title><rect x="0.1973%" y="965" width="0.0179%" height="15" fill="rgb(182,182,52)" fg:x="11" fg:w="1"/><text x="0.4473%" y="975.50"></text></g><g><title>v8::internal::compiler::(anonymous namespace)::SourcePositionWrapper::Reduce (1 samples, 0.02%)</title><rect x="0.1973%" y="949" width="0.0179%" height="15" fill="rgb(201,201,59)" fg:x="11" fg:w="1"/><text x="0.4473%" y="959.50"></text></g><g><title>v8::internal::compiler::Reducer::Reduce (1 samples, 0.02%)</title><rect x="0.1973%" y="933" width="0.0179%" height="15" fill="rgb(213,213,63)" fg:x="11" fg:w="1"/><text x="0.4473%" y="943.50"></text></g><g><title>v8::internal::compiler::RedundancyElimination::TakeChecksFromFirstEffect (1 samples, 0.02%)</title><rect x="0.1973%" y="917" width="0.0179%" height="15" fill="rgb(210,210,62)" fg:x="11" fg:w="1"/><text x="0.4473%" y="927.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (3 samples, 0.05%)</title><rect x="0.1794%" y="1109" width="0.0538%" height="15" fill="rgb(183,183,53)" fg:x="10" fg:w="3"/><text x="0.4294%" y="1119.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (2 samples, 0.04%)</title><rect x="0.1973%" y="1093" width="0.0359%" height="15" fill="rgb(199,199,58)" fg:x="11" fg:w="2"/><text x="0.4473%" y="1103.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (2 samples, 0.04%)</title><rect x="0.1973%" y="1077" width="0.0359%" height="15" fill="rgb(196,196,57)" fg:x="11" fg:w="2"/><text x="0.4473%" y="1087.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (2 samples, 0.04%)</title><rect x="0.1973%" y="1061" width="0.0359%" height="15" fill="rgb(218,218,65)" fg:x="11" fg:w="2"/><text x="0.4473%" y="1071.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (2 samples, 0.04%)</title><rect x="0.1973%" y="1045" width="0.0359%" height="15" fill="rgb(220,220,66)" fg:x="11" fg:w="2"/><text x="0.4473%" y="1055.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::MachineOperatorOptimizationPhase&gt; (1 samples, 0.02%)</title><rect x="0.2153%" y="1029" width="0.0179%" height="15" fill="rgb(195,195,57)" fg:x="12" fg:w="1"/><text x="0.4653%" y="1039.50"></text></g><g><title>v8::internal::compiler::MachineOperatorOptimizationPhase::Run (1 samples, 0.02%)</title><rect x="0.2153%" y="1013" width="0.0179%" height="15" fill="rgb(183,183,53)" fg:x="12" fg:w="1"/><text x="0.4653%" y="1023.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.02%)</title><rect x="0.2153%" y="997" width="0.0179%" height="15" fill="rgb(175,175,50)" fg:x="12" fg:w="1"/><text x="0.4653%" y="1007.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.02%)</title><rect x="0.2153%" y="981" width="0.0179%" height="15" fill="rgb(221,221,66)" fg:x="12" fg:w="1"/><text x="0.4653%" y="991.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.02%)</title><rect x="0.2153%" y="965" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="12" fg:w="1"/><text x="0.4653%" y="975.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="0.6638%" y="1061" width="0.0179%" height="15" fill="rgb(243,113,113)" fg:x="37" fg:w="1"/><text x="0.9138%" y="1071.50"></text></g><g><title>get_futex_key (1 samples, 0.02%)</title><rect x="0.6997%" y="933" width="0.0179%" height="15" fill="rgb(214,71,71)" fg:x="39" fg:w="1"/><text x="0.9497%" y="943.50"></text></g><g><title>__GI___pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="0.6817%" y="1061" width="0.0538%" height="15" fill="rgb(216,74,74)" fg:x="38" fg:w="3"/><text x="0.9317%" y="1071.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.05%)</title><rect x="0.6817%" y="1045" width="0.0538%" height="15" fill="rgb(222,82,82)" fg:x="38" fg:w="3"/><text x="0.9317%" y="1055.50"></text></g><g><title>__lll_unlock_wake (3 samples, 0.05%)</title><rect x="0.6817%" y="1029" width="0.0538%" height="15" fill="rgb(227,90,90)" fg:x="38" fg:w="3"/><text x="0.9317%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="0.6817%" y="1013" width="0.0538%" height="15" fill="rgb(249,122,122)" fg:x="38" fg:w="3"/><text x="0.9317%" y="1023.50"></text></g><g><title>do_syscall_64 (3 samples, 0.05%)</title><rect x="0.6817%" y="997" width="0.0538%" height="15" fill="rgb(223,83,83)" fg:x="38" fg:w="3"/><text x="0.9317%" y="1007.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="0.6997%" y="981" width="0.0359%" height="15" fill="rgb(233,98,98)" fg:x="39" fg:w="2"/><text x="0.9497%" y="991.50"></text></g><g><title>do_futex (2 samples, 0.04%)</title><rect x="0.6997%" y="965" width="0.0359%" height="15" fill="rgb(245,116,116)" fg:x="39" fg:w="2"/><text x="0.9497%" y="975.50"></text></g><g><title>futex_wake (2 samples, 0.04%)</title><rect x="0.6997%" y="949" width="0.0359%" height="15" fill="rgb(214,71,71)" fg:x="39" fg:w="2"/><text x="0.9497%" y="959.50"></text></g><g><title>wake_up_q (1 samples, 0.02%)</title><rect x="0.7176%" y="933" width="0.0179%" height="15" fill="rgb(206,59,59)" fg:x="40" fg:w="1"/><text x="0.9676%" y="943.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="0.7176%" y="917" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="40" fg:w="1"/><text x="0.9676%" y="927.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IterateMaybeWeakPointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (1 samples, 0.02%)</title><rect x="0.7356%" y="1061" width="0.0179%" height="15" fill="rgb(226,226,68)" fg:x="41" fg:w="1"/><text x="0.9856%" y="1071.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::RecordSlot&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="0.7356%" y="1045" width="0.0179%" height="15" fill="rgb(204,204,60)" fg:x="41" fg:w="1"/><text x="0.9856%" y="1055.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (8 samples, 0.14%)</title><rect x="0.7535%" y="1061" width="0.1435%" height="15" fill="rgb(208,208,62)" fg:x="42" fg:w="8"/><text x="1.0035%" y="1071.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt; &gt; (4 samples, 0.07%)</title><rect x="0.8970%" y="1061" width="0.0718%" height="15" fill="rgb(209,209,62)" fg:x="50" fg:w="4"/><text x="1.1470%" y="1071.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::RecordSlot&lt;v8::internal::CompressedObjectSlot&gt; (1 samples, 0.02%)</title><rect x="0.9688%" y="1061" width="0.0179%" height="15" fill="rgb(203,203,60)" fg:x="54" fg:w="1"/><text x="1.2188%" y="1071.50"></text></g><g><title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::__1::__unordered_map_hasher&lt;v8::internal::MemoryChunk*, std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, v8::internal::BasicMemoryChunk::Hasher, std::__1::equal_to&lt;v8::internal::MemoryChunk*&gt;, true&gt;, std::__1::__unordered_map_equal&lt;v8::internal::MemoryChunk*, std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::__1::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::internal::BasicMemoryChunk::Hasher, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt; &gt; &gt;::__emplace_unique_key_args&lt;v8::internal::MemoryChunk*, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;v8::internal::MemoryChunk* const&amp;&gt;, std::__1::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="1.1302%" y="1045" width="0.0179%" height="15" fill="rgb(210,210,62)" fg:x="63" fg:w="1"/><text x="1.3802%" y="1055.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (10 samples, 0.18%)</title><rect x="0.9867%" y="1061" width="0.1794%" height="15" fill="rgb(194,194,57)" fg:x="55" fg:w="10"/><text x="1.2367%" y="1071.50"></text></g><g><title>v8::internal::HeapObject::SizeFromMap (1 samples, 0.02%)</title><rect x="1.1482%" y="1045" width="0.0179%" height="15" fill="rgb(177,177,51)" fg:x="64" fg:w="1"/><text x="1.3982%" y="1055.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::VisitLeftTrimmableArray&lt;v8::internal::FixedArray&gt; (9 samples, 0.16%)</title><rect x="1.1661%" y="1061" width="0.1615%" height="15" fill="rgb(175,175,50)" fg:x="65" fg:w="9"/><text x="1.4161%" y="1071.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (9 samples, 0.16%)</title><rect x="1.1661%" y="1045" width="0.1615%" height="15" fill="rgb(186,186,54)" fg:x="65" fg:w="9"/><text x="1.4161%" y="1055.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::RecordSlot&lt;v8::internal::CompressedHeapObjectSlot&gt; (5 samples, 0.09%)</title><rect x="1.2379%" y="1029" width="0.0897%" height="15" fill="rgb(177,177,50)" fg:x="69" fg:w="5"/><text x="1.4879%" y="1039.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::VisitSeqOneByteString (13 samples, 0.23%)</title><rect x="1.3276%" y="1061" width="0.2332%" height="15" fill="rgb(229,229,69)" fg:x="74" fg:w="13"/><text x="1.5776%" y="1071.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (11 samples, 0.20%)</title><rect x="1.3635%" y="1045" width="0.1973%" height="15" fill="rgb(210,210,62)" fg:x="76" fg:w="11"/><text x="1.6135%" y="1055.50"></text></g><g><title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::__1::__unordered_map_hasher&lt;v8::internal::MemoryChunk*, std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, v8::internal::BasicMemoryChunk::Hasher, std::__1::equal_to&lt;v8::internal::MemoryChunk*&gt;, true&gt;, std::__1::__unordered_map_equal&lt;v8::internal::MemoryChunk*, std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::__1::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::internal::BasicMemoryChunk::Hasher, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt; &gt; &gt;::__emplace_unique_key_args&lt;v8::internal::MemoryChunk*, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;v8::internal::MemoryChunk* const&amp;&gt;, std::__1::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="1.5429%" y="1029" width="0.0179%" height="15" fill="rgb(191,191,55)" fg:x="86" fg:w="1"/><text x="1.7929%" y="1039.50"></text></g><g><title>operator new (1 samples, 0.02%)</title><rect x="1.5429%" y="1013" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="86" fg:w="1"/><text x="1.7929%" y="1023.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1.5429%" y="997" width="0.0179%" height="15" fill="rgb(233,98,98)" fg:x="86" fg:w="1"/><text x="1.7929%" y="1007.50"></text></g><g><title>tcache_init (1 samples, 0.02%)</title><rect x="1.5429%" y="981" width="0.0179%" height="15" fill="rgb(218,77,77)" fg:x="86" fg:w="1"/><text x="1.7929%" y="991.50"></text></g><g><title>tcache_init (1 samples, 0.02%)</title><rect x="1.5429%" y="965" width="0.0179%" height="15" fill="rgb(242,111,111)" fg:x="86" fg:w="1"/><text x="1.7929%" y="975.50"></text></g><g><title>arena_get2 (1 samples, 0.02%)</title><rect x="1.5429%" y="949" width="0.0179%" height="15" fill="rgb(215,71,71)" fg:x="86" fg:w="1"/><text x="1.7929%" y="959.50"></text></g><g><title>arena_get2 (1 samples, 0.02%)</title><rect x="1.5429%" y="933" width="0.0179%" height="15" fill="rgb(236,103,103)" fg:x="86" fg:w="1"/><text x="1.7929%" y="943.50"></text></g><g><title>_int_new_arena (1 samples, 0.02%)</title><rect x="1.5429%" y="917" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="86" fg:w="1"/><text x="1.7929%" y="927.50"></text></g><g><title>new_heap (1 samples, 0.02%)</title><rect x="1.5429%" y="901" width="0.0179%" height="15" fill="rgb(227,90,90)" fg:x="86" fg:w="1"/><text x="1.7929%" y="911.50"></text></g><g><title>__GI___mprotect (1 samples, 0.02%)</title><rect x="1.5429%" y="885" width="0.0179%" height="15" fill="rgb(212,68,68)" fg:x="86" fg:w="1"/><text x="1.7929%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1.5429%" y="869" width="0.0179%" height="15" fill="rgb(220,79,79)" fg:x="86" fg:w="1"/><text x="1.7929%" y="879.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1.5429%" y="853" width="0.0179%" height="15" fill="rgb(228,90,90)" fg:x="86" fg:w="1"/><text x="1.7929%" y="863.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="1.5429%" y="837" width="0.0179%" height="15" fill="rgb(210,65,65)" fg:x="86" fg:w="1"/><text x="1.7929%" y="847.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="1.5429%" y="821" width="0.0179%" height="15" fill="rgb(209,63,63)" fg:x="86" fg:w="1"/><text x="1.7929%" y="831.50"></text></g><g><title>down_write_killable (1 samples, 0.02%)</title><rect x="1.5429%" y="805" width="0.0179%" height="15" fill="rgb(250,123,123)" fg:x="86" fg:w="1"/><text x="1.7929%" y="815.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.02%)</title><rect x="1.5429%" y="789" width="0.0179%" height="15" fill="rgb(219,77,77)" fg:x="86" fg:w="1"/><text x="1.7929%" y="799.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.02%)</title><rect x="1.5429%" y="773" width="0.0179%" height="15" fill="rgb(223,83,83)" fg:x="86" fg:w="1"/><text x="1.7929%" y="783.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitorUtility::VisitJSObjectSubclass&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::JSExternalObject, v8::internal::JSExternalObject::BodyDescriptor&gt; (1 samples, 0.02%)</title><rect x="1.5608%" y="1061" width="0.0179%" height="15" fill="rgb(226,226,68)" fg:x="87" fg:w="1"/><text x="1.8108%" y="1071.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (1 samples, 0.02%)</title><rect x="1.5608%" y="1045" width="0.0179%" height="15" fill="rgb(194,194,57)" fg:x="87" fg:w="1"/><text x="1.8108%" y="1055.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (2 samples, 0.04%)</title><rect x="1.5967%" y="1045" width="0.0359%" height="15" fill="rgb(220,220,66)" fg:x="89" fg:w="2"/><text x="1.8467%" y="1055.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (2 samples, 0.04%)</title><rect x="1.6326%" y="1045" width="0.0359%" height="15" fill="rgb(225,225,68)" fg:x="91" fg:w="2"/><text x="1.8826%" y="1055.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitorUtility::VisitJSObjectSubclass&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::JSFunction, v8::internal::JSFunction::BodyDescriptor&gt; (11 samples, 0.20%)</title><rect x="1.5788%" y="1061" width="0.1973%" height="15" fill="rgb(204,204,60)" fg:x="88" fg:w="11"/><text x="1.8288%" y="1071.50"></text></g><g><title>v8::internal::JSFunction::BodyDescriptor::IterateBody&lt;v8::internal::ConcurrentMarkingVisitor&gt; (6 samples, 0.11%)</title><rect x="1.6685%" y="1045" width="0.1076%" height="15" fill="rgb(227,227,69)" fg:x="93" fg:w="6"/><text x="1.9185%" y="1055.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (6 samples, 0.11%)</title><rect x="1.6685%" y="1029" width="0.1076%" height="15" fill="rgb(191,191,55)" fg:x="93" fg:w="6"/><text x="1.9185%" y="1039.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::RecordSlot&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="1.7582%" y="1013" width="0.0179%" height="15" fill="rgb(179,179,51)" fg:x="98" fg:w="1"/><text x="2.0082%" y="1023.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (3 samples, 0.05%)</title><rect x="1.8299%" y="1045" width="0.0538%" height="15" fill="rgb(204,204,60)" fg:x="102" fg:w="3"/><text x="2.0799%" y="1055.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitorUtility::VisitJSObjectSubclass&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::JSObject, v8::internal::JSObject::FastBodyDescriptor&gt; (7 samples, 0.13%)</title><rect x="1.7761%" y="1061" width="0.1256%" height="15" fill="rgb(215,215,64)" fg:x="99" fg:w="7"/><text x="2.0261%" y="1071.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (1 samples, 0.02%)</title><rect x="1.8837%" y="1045" width="0.0179%" height="15" fill="rgb(214,214,64)" fg:x="105" fg:w="1"/><text x="2.1337%" y="1055.50"></text></g><g><title>v8::internal::RelocIterator::RelocIterator (1 samples, 0.02%)</title><rect x="1.9017%" y="1061" width="0.0179%" height="15" fill="rgb(226,226,68)" fg:x="106" fg:w="1"/><text x="2.1517%" y="1071.50"></text></g><g><title>v8::internal::ConcurrentMarking::JobTask::Run (95 samples, 1.70%)</title><rect x="0.2332%" y="1093" width="1.7043%" height="15" fill="rgb(202,202,60)" fg:x="13" fg:w="95"/><text x="0.4832%" y="1103.50"></text></g><g><title>v8::internal::ConcurrentMarking::Run (95 samples, 1.70%)</title><rect x="0.2332%" y="1077" width="1.7043%" height="15" fill="rgb(198,198,58)" fg:x="13" fg:w="95"/><text x="0.4832%" y="1087.50"></text></g><g><title>v8::internal::SharedFunctionInfo::ShouldFlushCode (1 samples, 0.02%)</title><rect x="1.9196%" y="1061" width="0.0179%" height="15" fill="rgb(177,177,50)" fg:x="107" fg:w="1"/><text x="2.1696%" y="1071.50"></text></g><g><title>__GI___mprotect (1 samples, 0.02%)</title><rect x="1.9376%" y="1045" width="0.0179%" height="15" fill="rgb(234,99,99)" fg:x="108" fg:w="1"/><text x="2.1876%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1.9376%" y="1029" width="0.0179%" height="15" fill="rgb(223,83,83)" fg:x="108" fg:w="1"/><text x="2.1876%" y="1039.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1.9376%" y="1013" width="0.0179%" height="15" fill="rgb(249,122,122)" fg:x="108" fg:w="1"/><text x="2.1876%" y="1023.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="1.9376%" y="997" width="0.0179%" height="15" fill="rgb(239,107,107)" fg:x="108" fg:w="1"/><text x="2.1876%" y="1007.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="1.9376%" y="981" width="0.0179%" height="15" fill="rgb(230,94,94)" fg:x="108" fg:w="1"/><text x="2.1876%" y="991.50"></text></g><g><title>mprotect_fixup (1 samples, 0.02%)</title><rect x="1.9376%" y="965" width="0.0179%" height="15" fill="rgb(204,56,56)" fg:x="108" fg:w="1"/><text x="2.1876%" y="975.50"></text></g><g><title>change_protection (1 samples, 0.02%)</title><rect x="1.9376%" y="949" width="0.0179%" height="15" fill="rgb(225,87,87)" fg:x="108" fg:w="1"/><text x="2.1876%" y="959.50"></text></g><g><title>change_protection_range (1 samples, 0.02%)</title><rect x="1.9376%" y="933" width="0.0179%" height="15" fill="rgb(206,60,60)" fg:x="108" fg:w="1"/><text x="2.1876%" y="943.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="1.9376%" y="917" width="0.0179%" height="15" fill="rgb(253,127,127)" fg:x="108" fg:w="1"/><text x="2.1876%" y="927.50"></text></g><g><title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="1.9376%" y="901" width="0.0179%" height="15" fill="rgb(205,57,57)" fg:x="108" fg:w="1"/><text x="2.1876%" y="911.50"></text></g><g><title>on_each_cpu_cond_mask (1 samples, 0.02%)</title><rect x="1.9376%" y="885" width="0.0179%" height="15" fill="rgb(205,58,58)" fg:x="108" fg:w="1"/><text x="2.1876%" y="895.50"></text></g><g><title>zalloc_cpumask_var (1 samples, 0.02%)</title><rect x="1.9376%" y="869" width="0.0179%" height="15" fill="rgb(201,51,51)" fg:x="108" fg:w="1"/><text x="2.1876%" y="879.50"></text></g><g><title>alloc_cpumask_var_node (1 samples, 0.02%)</title><rect x="1.9376%" y="853" width="0.0179%" height="15" fill="rgb(219,78,78)" fg:x="108" fg:w="1"/><text x="2.1876%" y="863.50"></text></g><g><title>__kmalloc_node (1 samples, 0.02%)</title><rect x="1.9376%" y="837" width="0.0179%" height="15" fill="rgb(216,74,74)" fg:x="108" fg:w="1"/><text x="2.1876%" y="847.50"></text></g><g><title>v8::base::OS::SetPermissions (2 samples, 0.04%)</title><rect x="1.9376%" y="1061" width="0.0359%" height="15" fill="rgb(191,191,55)" fg:x="108" fg:w="2"/><text x="2.1876%" y="1071.50"></text></g><g><title>__GI_madvise (1 samples, 0.02%)</title><rect x="1.9555%" y="1045" width="0.0179%" height="15" fill="rgb(244,115,115)" fg:x="109" fg:w="1"/><text x="2.2055%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1.9555%" y="1029" width="0.0179%" height="15" fill="rgb(227,89,89)" fg:x="109" fg:w="1"/><text x="2.2055%" y="1039.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1.9555%" y="1013" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="109" fg:w="1"/><text x="2.2055%" y="1023.50"></text></g><g><title>__x64_sys_madvise (1 samples, 0.02%)</title><rect x="1.9555%" y="997" width="0.0179%" height="15" fill="rgb(225,87,87)" fg:x="109" fg:w="1"/><text x="2.2055%" y="1007.50"></text></g><g><title>__do_sys_madvise (1 samples, 0.02%)</title><rect x="1.9555%" y="981" width="0.0179%" height="15" fill="rgb(241,110,110)" fg:x="109" fg:w="1"/><text x="2.2055%" y="991.50"></text></g><g><title>zap_page_range (1 samples, 0.02%)</title><rect x="1.9555%" y="965" width="0.0179%" height="15" fill="rgb(227,89,89)" fg:x="109" fg:w="1"/><text x="2.2055%" y="975.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="1.9555%" y="949" width="0.0179%" height="15" fill="rgb(238,105,105)" fg:x="109" fg:w="1"/><text x="2.2055%" y="959.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="1.9555%" y="933" width="0.0179%" height="15" fill="rgb(241,110,110)" fg:x="109" fg:w="1"/><text x="2.2055%" y="943.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="1.9555%" y="917" width="0.0179%" height="15" fill="rgb(205,58,58)" fg:x="109" fg:w="1"/><text x="2.2055%" y="927.50"></text></g><g><title>find_next_bit (1 samples, 0.02%)</title><rect x="1.9555%" y="901" width="0.0179%" height="15" fill="rgb(228,91,91)" fg:x="109" fg:w="1"/><text x="2.2055%" y="911.50"></text></g><g><title>operator new (1 samples, 0.02%)</title><rect x="1.9734%" y="1045" width="0.0179%" height="15" fill="rgb(217,75,75)" fg:x="110" fg:w="1"/><text x="2.2234%" y="1055.50"></text></g><g><title>__lll_lock_wait (1 samples, 0.02%)</title><rect x="1.9734%" y="1029" width="0.0179%" height="15" fill="rgb(216,74,74)" fg:x="110" fg:w="1"/><text x="2.2234%" y="1039.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="1.9734%" y="1013" width="0.0179%" height="15" fill="rgb(230,93,93)" fg:x="110" fg:w="1"/><text x="2.2234%" y="1023.50"></text></g><g><title>deactivate_task (2 samples, 0.04%)</title><rect x="2.0093%" y="869" width="0.0359%" height="15" fill="rgb(208,62,62)" fg:x="112" fg:w="2"/><text x="2.2593%" y="879.50"></text></g><g><title>dequeue_task (2 samples, 0.04%)</title><rect x="2.0093%" y="853" width="0.0359%" height="15" fill="rgb(229,93,93)" fg:x="112" fg:w="2"/><text x="2.2593%" y="863.50"></text></g><g><title>psi_task_change (2 samples, 0.04%)</title><rect x="2.0093%" y="837" width="0.0359%" height="15" fill="rgb(203,54,54)" fg:x="112" fg:w="2"/><text x="2.2593%" y="847.50"></text></g><g><title>__perf_event_task_sched_in (42 samples, 0.75%)</title><rect x="2.0632%" y="853" width="0.7535%" height="15" fill="rgb(231,95,95)" fg:x="115" fg:w="42"/><text x="2.3132%" y="863.50"></text></g><g><title>x86_pmu_enable (42 samples, 0.75%)</title><rect x="2.0632%" y="837" width="0.7535%" height="15" fill="rgb(211,67,67)" fg:x="115" fg:w="42"/><text x="2.3132%" y="847.50"></text></g><g><title>intel_tfa_pmu_enable_all (42 samples, 0.75%)</title><rect x="2.0632%" y="821" width="0.7535%" height="15" fill="rgb(243,113,113)" fg:x="115" fg:w="42"/><text x="2.3132%" y="831.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (42 samples, 0.75%)</title><rect x="2.0632%" y="805" width="0.7535%" height="15" fill="rgb(203,54,54)" fg:x="115" fg:w="42"/><text x="2.3132%" y="815.50"></text></g><g><title>native_write_msr (42 samples, 0.75%)</title><rect x="2.0632%" y="789" width="0.7535%" height="15" fill="rgb(254,129,129)" fg:x="115" fg:w="42"/><text x="2.3132%" y="799.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="2.8166%" y="853" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="157" fg:w="1"/><text x="3.0666%" y="863.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="2.8166%" y="837" width="0.0179%" height="15" fill="rgb(202,53,53)" fg:x="157" fg:w="1"/><text x="3.0666%" y="847.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="2.8166%" y="821" width="0.0179%" height="15" fill="rgb(214,70,70)" fg:x="157" fg:w="1"/><text x="3.0666%" y="831.50"></text></g><g><title>finish_task_switch (45 samples, 0.81%)</title><rect x="2.0452%" y="869" width="0.8073%" height="15" fill="rgb(229,92,92)" fg:x="114" fg:w="45"/><text x="2.2952%" y="879.50"></text></g><g><title>call_function_interrupt (1 samples, 0.02%)</title><rect x="2.8346%" y="853" width="0.0179%" height="15" fill="rgb(226,88,88)" fg:x="158" fg:w="1"/><text x="3.0846%" y="863.50"></text></g><g><title>smp_call_function_interrupt (1 samples, 0.02%)</title><rect x="2.8346%" y="837" width="0.0179%" height="15" fill="rgb(204,56,56)" fg:x="158" fg:w="1"/><text x="3.0846%" y="847.50"></text></g><g><title>generic_smp_call_function_single_interrupt (1 samples, 0.02%)</title><rect x="2.8346%" y="821" width="0.0179%" height="15" fill="rgb(209,64,64)" fg:x="158" fg:w="1"/><text x="3.0846%" y="831.50"></text></g><g><title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="2.8346%" y="805" width="0.0179%" height="15" fill="rgb(229,93,93)" fg:x="158" fg:w="1"/><text x="3.0846%" y="815.50"></text></g><g><title>irq_work_run (1 samples, 0.02%)</title><rect x="2.8346%" y="789" width="0.0179%" height="15" fill="rgb(229,93,93)" fg:x="158" fg:w="1"/><text x="3.0846%" y="799.50"></text></g><g><title>irq_work_run_list (1 samples, 0.02%)</title><rect x="2.8346%" y="773" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="158" fg:w="1"/><text x="3.0846%" y="783.50"></text></g><g><title>perf_pending_event (1 samples, 0.02%)</title><rect x="2.8346%" y="757" width="0.0179%" height="15" fill="rgb(244,114,114)" fg:x="158" fg:w="1"/><text x="3.0846%" y="767.50"></text></g><g><title>perf_event_wakeup (1 samples, 0.02%)</title><rect x="2.8346%" y="741" width="0.0179%" height="15" fill="rgb(249,122,122)" fg:x="158" fg:w="1"/><text x="3.0846%" y="751.50"></text></g><g><title>__wake_up (1 samples, 0.02%)</title><rect x="2.8346%" y="725" width="0.0179%" height="15" fill="rgb(247,119,119)" fg:x="158" fg:w="1"/><text x="3.0846%" y="735.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="2.8346%" y="709" width="0.0179%" height="15" fill="rgb(248,119,119)" fg:x="158" fg:w="1"/><text x="3.0846%" y="719.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="2.8346%" y="693" width="0.0179%" height="15" fill="rgb(211,66,66)" fg:x="158" fg:w="1"/><text x="3.0846%" y="703.50"></text></g><g><title>pollwake (1 samples, 0.02%)</title><rect x="2.8346%" y="677" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="158" fg:w="1"/><text x="3.0846%" y="687.50"></text></g><g><title>default_wake_function (1 samples, 0.02%)</title><rect x="2.8346%" y="661" width="0.0179%" height="15" fill="rgb(207,61,61)" fg:x="158" fg:w="1"/><text x="3.0846%" y="671.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="2.8346%" y="645" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="158" fg:w="1"/><text x="3.0846%" y="655.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="2.8346%" y="629" width="0.0179%" height="15" fill="rgb(224,85,85)" fg:x="158" fg:w="1"/><text x="3.0846%" y="639.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="2.8525%" y="869" width="0.0179%" height="15" fill="rgb(226,88,88)" fg:x="159" fg:w="1"/><text x="3.1025%" y="879.50"></text></g><g><title>__update_idle_core (1 samples, 0.02%)</title><rect x="2.8525%" y="853" width="0.0179%" height="15" fill="rgb(217,75,75)" fg:x="159" fg:w="1"/><text x="3.1025%" y="863.50"></text></g><g><title>futex_wait_queue_me (50 samples, 0.90%)</title><rect x="1.9914%" y="917" width="0.8970%" height="15" fill="rgb(223,84,84)" fg:x="111" fg:w="50"/><text x="2.2414%" y="927.50"></text></g><g><title>schedule (50 samples, 0.90%)</title><rect x="1.9914%" y="901" width="0.8970%" height="15" fill="rgb(205,57,57)" fg:x="111" fg:w="50"/><text x="2.2414%" y="911.50"></text></g><g><title>__sched_text_start (50 samples, 0.90%)</title><rect x="1.9914%" y="885" width="0.8970%" height="15" fill="rgb(239,107,107)" fg:x="111" fg:w="50"/><text x="2.2414%" y="895.50"></text></g><g><title>update_rq_clock (1 samples, 0.02%)</title><rect x="2.8705%" y="869" width="0.0179%" height="15" fill="rgb(206,58,58)" fg:x="160" fg:w="1"/><text x="3.1205%" y="879.50"></text></g><g><title>update_rq_clock.part.82 (1 samples, 0.02%)</title><rect x="2.8705%" y="853" width="0.0179%" height="15" fill="rgb(225,86,86)" fg:x="160" fg:w="1"/><text x="3.1205%" y="863.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="2.8705%" y="837" width="0.0179%" height="15" fill="rgb(209,63,63)" fg:x="160" fg:w="1"/><text x="3.1205%" y="847.50"></text></g><g><title>sched_clock (1 samples, 0.02%)</title><rect x="2.8705%" y="821" width="0.0179%" height="15" fill="rgb(216,73,73)" fg:x="160" fg:w="1"/><text x="3.1205%" y="831.50"></text></g><g><title>native_sched_clock (1 samples, 0.02%)</title><rect x="2.8705%" y="805" width="0.0179%" height="15" fill="rgb(201,52,52)" fg:x="160" fg:w="1"/><text x="3.1205%" y="815.50"></text></g><g><title>__GI___pthread_mutex_lock (51 samples, 0.91%)</title><rect x="1.9914%" y="1029" width="0.9150%" height="15" fill="rgb(204,57,57)" fg:x="111" fg:w="51"/><text x="2.2414%" y="1039.50"></text></g><g><title>__lll_lock_wait (51 samples, 0.91%)</title><rect x="1.9914%" y="1013" width="0.9150%" height="15" fill="rgb(219,78,78)" fg:x="111" fg:w="51"/><text x="2.2414%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (51 samples, 0.91%)</title><rect x="1.9914%" y="997" width="0.9150%" height="15" fill="rgb(206,59,59)" fg:x="111" fg:w="51"/><text x="2.2414%" y="1007.50"></text></g><g><title>do_syscall_64 (51 samples, 0.91%)</title><rect x="1.9914%" y="981" width="0.9150%" height="15" fill="rgb(244,114,114)" fg:x="111" fg:w="51"/><text x="2.2414%" y="991.50"></text></g><g><title>__x64_sys_futex (51 samples, 0.91%)</title><rect x="1.9914%" y="965" width="0.9150%" height="15" fill="rgb(241,110,110)" fg:x="111" fg:w="51"/><text x="2.2414%" y="975.50"></text></g><g><title>do_futex (51 samples, 0.91%)</title><rect x="1.9914%" y="949" width="0.9150%" height="15" fill="rgb(248,120,120)" fg:x="111" fg:w="51"/><text x="2.2414%" y="959.50"></text></g><g><title>futex_wait (51 samples, 0.91%)</title><rect x="1.9914%" y="933" width="0.9150%" height="15" fill="rgb(218,77,77)" fg:x="111" fg:w="51"/><text x="2.2414%" y="943.50"></text></g><g><title>futex_wait_setup (1 samples, 0.02%)</title><rect x="2.8884%" y="917" width="0.0179%" height="15" fill="rgb(230,94,94)" fg:x="161" fg:w="1"/><text x="3.1384%" y="927.50"></text></g><g><title>set_task_cpu (1 samples, 0.02%)</title><rect x="2.9243%" y="869" width="0.0179%" height="15" fill="rgb(211,67,67)" fg:x="163" fg:w="1"/><text x="3.1743%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="2.9064%" y="1029" width="0.0538%" height="15" fill="rgb(216,73,73)" fg:x="162" fg:w="3"/><text x="3.1564%" y="1039.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.05%)</title><rect x="2.9064%" y="1013" width="0.0538%" height="15" fill="rgb(220,79,79)" fg:x="162" fg:w="3"/><text x="3.1564%" y="1023.50"></text></g><g><title>__lll_unlock_wake (3 samples, 0.05%)</title><rect x="2.9064%" y="997" width="0.0538%" height="15" fill="rgb(210,65,65)" fg:x="162" fg:w="3"/><text x="3.1564%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="2.9064%" y="981" width="0.0538%" height="15" fill="rgb(237,103,103)" fg:x="162" fg:w="3"/><text x="3.1564%" y="991.50"></text></g><g><title>do_syscall_64 (3 samples, 0.05%)</title><rect x="2.9064%" y="965" width="0.0538%" height="15" fill="rgb(213,69,69)" fg:x="162" fg:w="3"/><text x="3.1564%" y="975.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="2.9243%" y="949" width="0.0359%" height="15" fill="rgb(200,50,50)" fg:x="163" fg:w="2"/><text x="3.1743%" y="959.50"></text></g><g><title>do_futex (2 samples, 0.04%)</title><rect x="2.9243%" y="933" width="0.0359%" height="15" fill="rgb(207,60,60)" fg:x="163" fg:w="2"/><text x="3.1743%" y="943.50"></text></g><g><title>futex_wake (2 samples, 0.04%)</title><rect x="2.9243%" y="917" width="0.0359%" height="15" fill="rgb(218,77,77)" fg:x="163" fg:w="2"/><text x="3.1743%" y="927.50"></text></g><g><title>wake_up_q (2 samples, 0.04%)</title><rect x="2.9243%" y="901" width="0.0359%" height="15" fill="rgb(234,100,100)" fg:x="163" fg:w="2"/><text x="3.1743%" y="911.50"></text></g><g><title>try_to_wake_up (2 samples, 0.04%)</title><rect x="2.9243%" y="885" width="0.0359%" height="15" fill="rgb(205,57,57)" fg:x="163" fg:w="2"/><text x="3.1743%" y="895.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="2.9422%" y="869" width="0.0179%" height="15" fill="rgb(240,108,108)" fg:x="164" fg:w="1"/><text x="3.1922%" y="879.50"></text></g><g><title>activate_task (1 samples, 0.02%)</title><rect x="2.9422%" y="853" width="0.0179%" height="15" fill="rgb(237,103,103)" fg:x="164" fg:w="1"/><text x="3.1922%" y="863.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="2.9422%" y="837" width="0.0179%" height="15" fill="rgb(251,125,125)" fg:x="164" fg:w="1"/><text x="3.1922%" y="847.50"></text></g><g><title>enqueue_entity (1 samples, 0.02%)</title><rect x="2.9422%" y="821" width="0.0179%" height="15" fill="rgb(201,51,51)" fg:x="164" fg:w="1"/><text x="3.1922%" y="831.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="2.9422%" y="805" width="0.0179%" height="15" fill="rgb(224,85,85)" fg:x="164" fg:w="1"/><text x="3.1922%" y="815.50"></text></g><g><title>down_write_killable (1 samples, 0.02%)</title><rect x="2.9602%" y="933" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="165" fg:w="1"/><text x="3.2102%" y="943.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.02%)</title><rect x="2.9602%" y="917" width="0.0179%" height="15" fill="rgb(236,102,102)" fg:x="165" fg:w="1"/><text x="3.2102%" y="927.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.02%)</title><rect x="2.9602%" y="901" width="0.0179%" height="15" fill="rgb(248,119,119)" fg:x="165" fg:w="1"/><text x="3.2102%" y="911.50"></text></g><g><title>rwsem_spin_on_owner (1 samples, 0.02%)</title><rect x="2.9602%" y="885" width="0.0179%" height="15" fill="rgb(205,57,57)" fg:x="165" fg:w="1"/><text x="3.2102%" y="895.50"></text></g><g><title>__ptep_modify_prot_start (1 samples, 0.02%)</title><rect x="2.9781%" y="885" width="0.0179%" height="15" fill="rgb(212,68,68)" fg:x="166" fg:w="1"/><text x="3.2281%" y="895.50"></text></g><g><title>change_protection (2 samples, 0.04%)</title><rect x="2.9781%" y="917" width="0.0359%" height="15" fill="rgb(206,58,58)" fg:x="166" fg:w="2"/><text x="3.2281%" y="927.50"></text></g><g><title>change_protection_range (2 samples, 0.04%)</title><rect x="2.9781%" y="901" width="0.0359%" height="15" fill="rgb(209,64,64)" fg:x="166" fg:w="2"/><text x="3.2281%" y="911.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="2.9961%" y="885" width="0.0179%" height="15" fill="rgb(252,126,126)" fg:x="167" fg:w="1"/><text x="3.2461%" y="895.50"></text></g><g><title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="2.9961%" y="869" width="0.0179%" height="15" fill="rgb(206,59,59)" fg:x="167" fg:w="1"/><text x="3.2461%" y="879.50"></text></g><g><title>on_each_cpu_cond_mask (1 samples, 0.02%)</title><rect x="2.9961%" y="853" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="167" fg:w="1"/><text x="3.2461%" y="863.50"></text></g><g><title>on_each_cpu_mask (1 samples, 0.02%)</title><rect x="2.9961%" y="837" width="0.0179%" height="15" fill="rgb(231,95,95)" fg:x="167" fg:w="1"/><text x="3.2461%" y="847.50"></text></g><g><title>smp_call_function_many (1 samples, 0.02%)</title><rect x="2.9961%" y="821" width="0.0179%" height="15" fill="rgb(250,123,123)" fg:x="167" fg:w="1"/><text x="3.2461%" y="831.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="3.0140%" y="917" width="0.0179%" height="15" fill="rgb(207,61,61)" fg:x="168" fg:w="1"/><text x="3.2640%" y="927.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="3.0140%" y="901" width="0.0179%" height="15" fill="rgb(235,102,102)" fg:x="168" fg:w="1"/><text x="3.2640%" y="911.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="3.0140%" y="885" width="0.0179%" height="15" fill="rgb(237,104,104)" fg:x="168" fg:w="1"/><text x="3.2640%" y="895.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="3.0140%" y="869" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="168" fg:w="1"/><text x="3.2640%" y="879.50"></text></g><g><title>perf_output_begin (1 samples, 0.02%)</title><rect x="3.0140%" y="853" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="168" fg:w="1"/><text x="3.2640%" y="863.50"></text></g><g><title>__GI___mprotect (5 samples, 0.09%)</title><rect x="2.9602%" y="1013" width="0.0897%" height="15" fill="rgb(211,66,66)" fg:x="165" fg:w="5"/><text x="3.2102%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="2.9602%" y="997" width="0.0897%" height="15" fill="rgb(210,64,64)" fg:x="165" fg:w="5"/><text x="3.2102%" y="1007.50"></text></g><g><title>do_syscall_64 (5 samples, 0.09%)</title><rect x="2.9602%" y="981" width="0.0897%" height="15" fill="rgb(203,54,54)" fg:x="165" fg:w="5"/><text x="3.2102%" y="991.50"></text></g><g><title>__x64_sys_mprotect (5 samples, 0.09%)</title><rect x="2.9602%" y="965" width="0.0897%" height="15" fill="rgb(243,113,113)" fg:x="165" fg:w="5"/><text x="3.2102%" y="975.50"></text></g><g><title>do_mprotect_pkey (5 samples, 0.09%)</title><rect x="2.9602%" y="949" width="0.0897%" height="15" fill="rgb(241,110,110)" fg:x="165" fg:w="5"/><text x="3.2102%" y="959.50"></text></g><g><title>mprotect_fixup (4 samples, 0.07%)</title><rect x="2.9781%" y="933" width="0.0718%" height="15" fill="rgb(200,50,50)" fg:x="166" fg:w="4"/><text x="3.2281%" y="943.50"></text></g><g><title>split_vma (1 samples, 0.02%)</title><rect x="3.0319%" y="917" width="0.0179%" height="15" fill="rgb(229,93,93)" fg:x="169" fg:w="1"/><text x="3.2819%" y="927.50"></text></g><g><title>__split_vma (1 samples, 0.02%)</title><rect x="3.0319%" y="901" width="0.0179%" height="15" fill="rgb(205,57,57)" fg:x="169" fg:w="1"/><text x="3.2819%" y="911.50"></text></g><g><title>anon_vma_clone (1 samples, 0.02%)</title><rect x="3.0319%" y="885" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="169" fg:w="1"/><text x="3.2819%" y="895.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="3.0319%" y="869" width="0.0179%" height="15" fill="rgb(214,71,71)" fg:x="169" fg:w="1"/><text x="3.2819%" y="879.50"></text></g><g><title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="3.0319%" y="853" width="0.0179%" height="15" fill="rgb(249,122,122)" fg:x="169" fg:w="1"/><text x="3.2819%" y="863.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="3.0499%" y="885" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="170" fg:w="1"/><text x="3.2999%" y="895.50"></text></g><g><title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="3.0499%" y="869" width="0.0179%" height="15" fill="rgb(218,76,76)" fg:x="170" fg:w="1"/><text x="3.2999%" y="879.50"></text></g><g><title>on_each_cpu_cond_mask (1 samples, 0.02%)</title><rect x="3.0499%" y="853" width="0.0179%" height="15" fill="rgb(229,93,93)" fg:x="170" fg:w="1"/><text x="3.2999%" y="863.50"></text></g><g><title>on_each_cpu_mask (1 samples, 0.02%)</title><rect x="3.0499%" y="837" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="170" fg:w="1"/><text x="3.2999%" y="847.50"></text></g><g><title>smp_call_function_many (1 samples, 0.02%)</title><rect x="3.0499%" y="821" width="0.0179%" height="15" fill="rgb(241,110,110)" fg:x="170" fg:w="1"/><text x="3.2999%" y="831.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="3.0858%" y="853" width="0.0179%" height="15" fill="rgb(248,119,119)" fg:x="172" fg:w="1"/><text x="3.3358%" y="863.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="3.0858%" y="837" width="0.0179%" height="15" fill="rgb(213,70,70)" fg:x="172" fg:w="1"/><text x="3.3358%" y="847.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="3.0858%" y="821" width="0.0179%" height="15" fill="rgb(242,111,111)" fg:x="172" fg:w="1"/><text x="3.3358%" y="831.50"></text></g><g><title>tlb_finish_mmu (4 samples, 0.07%)</title><rect x="3.0499%" y="917" width="0.0718%" height="15" fill="rgb(250,123,123)" fg:x="170" fg:w="4"/><text x="3.2999%" y="927.50"></text></g><g><title>tlb_flush_mmu (4 samples, 0.07%)</title><rect x="3.0499%" y="901" width="0.0718%" height="15" fill="rgb(230,94,94)" fg:x="170" fg:w="4"/><text x="3.2999%" y="911.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.05%)</title><rect x="3.0678%" y="885" width="0.0538%" height="15" fill="rgb(239,107,107)" fg:x="171" fg:w="3"/><text x="3.3178%" y="895.50"></text></g><g><title>release_pages (3 samples, 0.05%)</title><rect x="3.0678%" y="869" width="0.0538%" height="15" fill="rgb(240,108,108)" fg:x="171" fg:w="3"/><text x="3.3178%" y="879.50"></text></g><g><title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="3.1037%" y="853" width="0.0179%" height="15" fill="rgb(234,99,99)" fg:x="173" fg:w="1"/><text x="3.3537%" y="863.50"></text></g><g><title>uncharge_batch (1 samples, 0.02%)</title><rect x="3.1037%" y="837" width="0.0179%" height="15" fill="rgb(235,102,102)" fg:x="173" fg:w="1"/><text x="3.3537%" y="847.50"></text></g><g><title>page_counter_uncharge (1 samples, 0.02%)</title><rect x="3.1037%" y="821" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="173" fg:w="1"/><text x="3.3537%" y="831.50"></text></g><g><title>page_counter_cancel (1 samples, 0.02%)</title><rect x="3.1037%" y="805" width="0.0179%" height="15" fill="rgb(221,81,81)" fg:x="173" fg:w="1"/><text x="3.3537%" y="815.50"></text></g><g><title>__do_sys_madvise (12 samples, 0.22%)</title><rect x="3.0499%" y="949" width="0.2153%" height="15" fill="rgb(251,124,124)" fg:x="170" fg:w="12"/><text x="3.2999%" y="959.50"></text></g><g><title>zap_page_range (12 samples, 0.22%)</title><rect x="3.0499%" y="933" width="0.2153%" height="15" fill="rgb(233,99,99)" fg:x="170" fg:w="12"/><text x="3.2999%" y="943.50"></text></g><g><title>unmap_single_vma (8 samples, 0.14%)</title><rect x="3.1216%" y="917" width="0.1435%" height="15" fill="rgb(240,108,108)" fg:x="174" fg:w="8"/><text x="3.3716%" y="927.50"></text></g><g><title>unmap_page_range (8 samples, 0.14%)</title><rect x="3.1216%" y="901" width="0.1435%" height="15" fill="rgb(251,125,125)" fg:x="174" fg:w="8"/><text x="3.3716%" y="911.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="3.2472%" y="885" width="0.0179%" height="15" fill="rgb(221,80,80)" fg:x="181" fg:w="1"/><text x="3.4972%" y="895.50"></text></g><g><title>v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob::Run (75 samples, 1.35%)</title><rect x="1.9376%" y="1093" width="1.3455%" height="15" fill="rgb(221,221,66)" fg:x="108" fg:w="75"/><text x="2.1876%" y="1103.50"></text></g><g><title>v8::internal::MemoryAllocator::Unmapper::PerformFreeMemoryOnQueuedChunks (75 samples, 1.35%)</title><rect x="1.9376%" y="1077" width="1.3455%" height="15" fill="rgb(196,196,57)" fg:x="108" fg:w="75"/><text x="2.1876%" y="1087.50"></text></g><g><title>v8::internal::VirtualMemory::Free (73 samples, 1.31%)</title><rect x="1.9734%" y="1061" width="1.3097%" height="15" fill="rgb(200,200,59)" fg:x="110" fg:w="73"/><text x="2.2234%" y="1071.50"></text></g><g><title>v8::base::BoundedPageAllocator::FreePages (72 samples, 1.29%)</title><rect x="1.9914%" y="1045" width="1.2917%" height="15" fill="rgb(192,192,56)" fg:x="111" fg:w="72"/><text x="2.2414%" y="1055.50"></text></g><g><title>v8::base::OS::SetPermissions (18 samples, 0.32%)</title><rect x="2.9602%" y="1029" width="0.3229%" height="15" fill="rgb(208,208,62)" fg:x="165" fg:w="18"/><text x="3.2102%" y="1039.50"></text></g><g><title>__GI_madvise (13 samples, 0.23%)</title><rect x="3.0499%" y="1013" width="0.2332%" height="15" fill="rgb(243,113,113)" fg:x="170" fg:w="13"/><text x="3.2999%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.23%)</title><rect x="3.0499%" y="997" width="0.2332%" height="15" fill="rgb(203,55,55)" fg:x="170" fg:w="13"/><text x="3.2999%" y="1007.50"></text></g><g><title>do_syscall_64 (13 samples, 0.23%)</title><rect x="3.0499%" y="981" width="0.2332%" height="15" fill="rgb(202,53,53)" fg:x="170" fg:w="13"/><text x="3.2999%" y="991.50"></text></g><g><title>__x64_sys_madvise (13 samples, 0.23%)</title><rect x="3.0499%" y="965" width="0.2332%" height="15" fill="rgb(207,61,61)" fg:x="170" fg:w="13"/><text x="3.2999%" y="975.50"></text></g><g><title>blk_start_plug (1 samples, 0.02%)</title><rect x="3.2652%" y="949" width="0.0179%" height="15" fill="rgb(213,68,68)" fg:x="182" fg:w="1"/><text x="3.5152%" y="959.50"></text></g><g><title>v8::internal::MemoryChunk::SetCodeModificationPermissions (1 samples, 0.02%)</title><rect x="3.2831%" y="1045" width="0.0179%" height="15" fill="rgb(198,198,58)" fg:x="183" fg:w="1"/><text x="3.5331%" y="1055.50"></text></g><g><title>v8::base::OS::SetPermissions (1 samples, 0.02%)</title><rect x="3.2831%" y="1029" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="183" fg:w="1"/><text x="3.5331%" y="1039.50"></text></g><g><title>__GI___mprotect (1 samples, 0.02%)</title><rect x="3.2831%" y="1013" width="0.0179%" height="15" fill="rgb(211,66,66)" fg:x="183" fg:w="1"/><text x="3.5331%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="3.2831%" y="997" width="0.0179%" height="15" fill="rgb(231,96,96)" fg:x="183" fg:w="1"/><text x="3.5331%" y="1007.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="3.2831%" y="981" width="0.0179%" height="15" fill="rgb(206,59,59)" fg:x="183" fg:w="1"/><text x="3.5331%" y="991.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="3.2831%" y="965" width="0.0179%" height="15" fill="rgb(218,76,76)" fg:x="183" fg:w="1"/><text x="3.5331%" y="975.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="3.2831%" y="949" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="183" fg:w="1"/><text x="3.5331%" y="959.50"></text></g><g><title>mprotect_fixup (1 samples, 0.02%)</title><rect x="3.2831%" y="933" width="0.0179%" height="15" fill="rgb(216,73,73)" fg:x="183" fg:w="1"/><text x="3.5331%" y="943.50"></text></g><g><title>change_protection (1 samples, 0.02%)</title><rect x="3.2831%" y="917" width="0.0179%" height="15" fill="rgb(231,96,96)" fg:x="183" fg:w="1"/><text x="3.5331%" y="927.50"></text></g><g><title>change_protection_range (1 samples, 0.02%)</title><rect x="3.2831%" y="901" width="0.0179%" height="15" fill="rgb(211,66,66)" fg:x="183" fg:w="1"/><text x="3.5331%" y="911.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="3.2831%" y="885" width="0.0179%" height="15" fill="rgb(244,114,114)" fg:x="183" fg:w="1"/><text x="3.5331%" y="895.50"></text></g><g><title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="3.2831%" y="869" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="183" fg:w="1"/><text x="3.5331%" y="879.50"></text></g><g><title>on_each_cpu_cond_mask (1 samples, 0.02%)</title><rect x="3.2831%" y="853" width="0.0179%" height="15" fill="rgb(233,98,98)" fg:x="183" fg:w="1"/><text x="3.5331%" y="863.50"></text></g><g><title>on_each_cpu_mask (1 samples, 0.02%)</title><rect x="3.2831%" y="837" width="0.0179%" height="15" fill="rgb(212,67,67)" fg:x="183" fg:w="1"/><text x="3.5331%" y="847.50"></text></g><g><title>smp_call_function_many (1 samples, 0.02%)</title><rect x="3.2831%" y="821" width="0.0179%" height="15" fill="rgb(253,127,127)" fg:x="183" fg:w="1"/><text x="3.5331%" y="831.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.02%)</title><rect x="3.3010%" y="869" width="0.0179%" height="15" fill="rgb(253,127,127)" fg:x="184" fg:w="1"/><text x="3.5510%" y="879.50"></text></g><g><title>task_ctx_sched_out (1 samples, 0.02%)</title><rect x="3.3010%" y="853" width="0.0179%" height="15" fill="rgb(238,106,106)" fg:x="184" fg:w="1"/><text x="3.5510%" y="863.50"></text></g><g><title>ctx_sched_out (1 samples, 0.02%)</title><rect x="3.3010%" y="837" width="0.0179%" height="15" fill="rgb(222,82,82)" fg:x="184" fg:w="1"/><text x="3.5510%" y="847.50"></text></g><g><title>v8::internal::MemoryChunk::SetDefaultCodePermissions (6 samples, 0.11%)</title><rect x="3.3010%" y="1045" width="0.1076%" height="15" fill="rgb(191,191,55)" fg:x="184" fg:w="6"/><text x="3.5510%" y="1055.50"></text></g><g><title>v8::base::OS::SetPermissions (6 samples, 0.11%)</title><rect x="3.3010%" y="1029" width="0.1076%" height="15" fill="rgb(195,195,57)" fg:x="184" fg:w="6"/><text x="3.5510%" y="1039.50"></text></g><g><title>__GI___mprotect (6 samples, 0.11%)</title><rect x="3.3010%" y="1013" width="0.1076%" height="15" fill="rgb(236,102,102)" fg:x="184" fg:w="6"/><text x="3.5510%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.11%)</title><rect x="3.3010%" y="997" width="0.1076%" height="15" fill="rgb(251,125,125)" fg:x="184" fg:w="6"/><text x="3.5510%" y="1007.50"></text></g><g><title>do_syscall_64 (6 samples, 0.11%)</title><rect x="3.3010%" y="981" width="0.1076%" height="15" fill="rgb(252,126,126)" fg:x="184" fg:w="6"/><text x="3.5510%" y="991.50"></text></g><g><title>__x64_sys_mprotect (6 samples, 0.11%)</title><rect x="3.3010%" y="965" width="0.1076%" height="15" fill="rgb(231,96,96)" fg:x="184" fg:w="6"/><text x="3.5510%" y="975.50"></text></g><g><title>do_mprotect_pkey (6 samples, 0.11%)</title><rect x="3.3010%" y="949" width="0.1076%" height="15" fill="rgb(246,117,117)" fg:x="184" fg:w="6"/><text x="3.5510%" y="959.50"></text></g><g><title>down_write_killable (6 samples, 0.11%)</title><rect x="3.3010%" y="933" width="0.1076%" height="15" fill="rgb(230,94,94)" fg:x="184" fg:w="6"/><text x="3.5510%" y="943.50"></text></g><g><title>rwsem_down_write_slowpath (6 samples, 0.11%)</title><rect x="3.3010%" y="917" width="0.1076%" height="15" fill="rgb(227,89,89)" fg:x="184" fg:w="6"/><text x="3.5510%" y="927.50"></text></g><g><title>schedule (6 samples, 0.11%)</title><rect x="3.3010%" y="901" width="0.1076%" height="15" fill="rgb(253,127,127)" fg:x="184" fg:w="6"/><text x="3.5510%" y="911.50"></text></g><g><title>__sched_text_start (6 samples, 0.11%)</title><rect x="3.3010%" y="885" width="0.1076%" height="15" fill="rgb(253,128,128)" fg:x="184" fg:w="6"/><text x="3.5510%" y="895.50"></text></g><g><title>finish_task_switch (5 samples, 0.09%)</title><rect x="3.3190%" y="869" width="0.0897%" height="15" fill="rgb(226,87,87)" fg:x="185" fg:w="5"/><text x="3.5690%" y="879.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.09%)</title><rect x="3.3190%" y="853" width="0.0897%" height="15" fill="rgb(249,122,122)" fg:x="185" fg:w="5"/><text x="3.5690%" y="863.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.09%)</title><rect x="3.3190%" y="837" width="0.0897%" height="15" fill="rgb(210,65,65)" fg:x="185" fg:w="5"/><text x="3.5690%" y="847.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.09%)</title><rect x="3.3190%" y="821" width="0.0897%" height="15" fill="rgb(229,93,93)" fg:x="185" fg:w="5"/><text x="3.5690%" y="831.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (5 samples, 0.09%)</title><rect x="3.3190%" y="805" width="0.0897%" height="15" fill="rgb(246,117,117)" fg:x="185" fg:w="5"/><text x="3.5690%" y="815.50"></text></g><g><title>native_write_msr (5 samples, 0.09%)</title><rect x="3.3190%" y="789" width="0.0897%" height="15" fill="rgb(219,78,78)" fg:x="185" fg:w="5"/><text x="3.5690%" y="799.50"></text></g><g><title>v8::internal::HeapObject::SizeFromMap (2 samples, 0.04%)</title><rect x="3.4625%" y="1029" width="0.0359%" height="15" fill="rgb(190,190,55)" fg:x="193" fg:w="2"/><text x="3.7125%" y="1039.50"></text></g><g><title>generic_smp_call_function_single_interrupt (1 samples, 0.02%)</title><rect x="3.8213%" y="981" width="0.0179%" height="15" fill="rgb(211,67,67)" fg:x="213" fg:w="1"/><text x="4.0713%" y="991.50"></text></g><g><title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="3.8213%" y="965" width="0.0179%" height="15" fill="rgb(207,61,61)" fg:x="213" fg:w="1"/><text x="4.0713%" y="975.50"></text></g><g><title>call_function_interrupt (2 samples, 0.04%)</title><rect x="3.8213%" y="1013" width="0.0359%" height="15" fill="rgb(233,99,99)" fg:x="213" fg:w="2"/><text x="4.0713%" y="1023.50"></text></g><g><title>smp_call_function_interrupt (2 samples, 0.04%)</title><rect x="3.8213%" y="997" width="0.0359%" height="15" fill="rgb(238,105,105)" fg:x="213" fg:w="2"/><text x="4.0713%" y="1007.50"></text></g><g><title>native_apic_msr_eoi_write (1 samples, 0.02%)</title><rect x="3.8393%" y="981" width="0.0179%" height="15" fill="rgb(253,127,127)" fg:x="214" fg:w="1"/><text x="4.0893%" y="991.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="3.8572%" y="1013" width="0.0179%" height="15" fill="rgb(252,125,125)" fg:x="215" fg:w="1"/><text x="4.1072%" y="1023.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="3.8572%" y="997" width="0.0179%" height="15" fill="rgb(242,111,111)" fg:x="215" fg:w="1"/><text x="4.1072%" y="1007.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (206 samples, 3.70%)</title><rect x="0.2332%" y="1109" width="3.6957%" height="15" fill="rgb(207,207,61)" fg:x="13" fg:w="206"/><text x="0.4832%" y="1119.50">v8::..</text></g><g><title>v8::internal::Sweeper::SweeperJob::Run (36 samples, 0.65%)</title><rect x="3.2831%" y="1093" width="0.6459%" height="15" fill="rgb(222,222,67)" fg:x="183" fg:w="36"/><text x="3.5331%" y="1103.50"></text></g><g><title>v8::internal::Sweeper::SweeperJob::RunImpl (36 samples, 0.65%)</title><rect x="3.2831%" y="1077" width="0.6459%" height="15" fill="rgb(228,228,69)" fg:x="183" fg:w="36"/><text x="3.5331%" y="1087.50"></text></g><g><title>v8::internal::Sweeper::ParallelSweepPage (36 samples, 0.65%)</title><rect x="3.2831%" y="1061" width="0.6459%" height="15" fill="rgb(219,219,66)" fg:x="183" fg:w="36"/><text x="3.5331%" y="1071.50"></text></g><g><title>v8::internal::Sweeper::RawSweep (29 samples, 0.52%)</title><rect x="3.4087%" y="1045" width="0.5203%" height="15" fill="rgb(223,223,67)" fg:x="190" fg:w="29"/><text x="3.6587%" y="1055.50"></text></g><g><title>v8::internal::LiveObjectRange&lt;(v8::internal::LiveObjectIterationMode)0&gt;::iterator::AdvanceToNextValidObject (24 samples, 0.43%)</title><rect x="3.4984%" y="1029" width="0.4306%" height="15" fill="rgb(229,229,69)" fg:x="195" fg:w="24"/><text x="3.7484%" y="1039.50"></text></g><g><title>v8::internal::HeapObject::SizeFromMap (3 samples, 0.05%)</title><rect x="3.8751%" y="1013" width="0.0538%" height="15" fill="rgb(216,216,65)" fg:x="216" fg:w="3"/><text x="4.1251%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.09%)</title><rect x="3.9469%" y="1093" width="0.0897%" height="15" fill="rgb(208,61,61)" fg:x="220" fg:w="5"/><text x="4.1969%" y="1103.50"></text></g><g><title>__lll_lock_wait (5 samples, 0.09%)</title><rect x="3.9469%" y="1077" width="0.0897%" height="15" fill="rgb(213,70,70)" fg:x="220" fg:w="5"/><text x="4.1969%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="3.9469%" y="1061" width="0.0897%" height="15" fill="rgb(216,73,73)" fg:x="220" fg:w="5"/><text x="4.1969%" y="1071.50"></text></g><g><title>do_syscall_64 (5 samples, 0.09%)</title><rect x="3.9469%" y="1045" width="0.0897%" height="15" fill="rgb(254,129,129)" fg:x="220" fg:w="5"/><text x="4.1969%" y="1055.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.09%)</title><rect x="3.9469%" y="1029" width="0.0897%" height="15" fill="rgb(207,60,60)" fg:x="220" fg:w="5"/><text x="4.1969%" y="1039.50"></text></g><g><title>do_futex (5 samples, 0.09%)</title><rect x="3.9469%" y="1013" width="0.0897%" height="15" fill="rgb(238,105,105)" fg:x="220" fg:w="5"/><text x="4.1969%" y="1023.50"></text></g><g><title>futex_wait (5 samples, 0.09%)</title><rect x="3.9469%" y="997" width="0.0897%" height="15" fill="rgb(237,104,104)" fg:x="220" fg:w="5"/><text x="4.1969%" y="1007.50"></text></g><g><title>futex_wait_queue_me (5 samples, 0.09%)</title><rect x="3.9469%" y="981" width="0.0897%" height="15" fill="rgb(200,50,50)" fg:x="220" fg:w="5"/><text x="4.1969%" y="991.50"></text></g><g><title>schedule (5 samples, 0.09%)</title><rect x="3.9469%" y="965" width="0.0897%" height="15" fill="rgb(242,111,111)" fg:x="220" fg:w="5"/><text x="4.1969%" y="975.50"></text></g><g><title>__sched_text_start (5 samples, 0.09%)</title><rect x="3.9469%" y="949" width="0.0897%" height="15" fill="rgb(205,58,58)" fg:x="220" fg:w="5"/><text x="4.1969%" y="959.50"></text></g><g><title>finish_task_switch (5 samples, 0.09%)</title><rect x="3.9469%" y="933" width="0.0897%" height="15" fill="rgb(203,54,54)" fg:x="220" fg:w="5"/><text x="4.1969%" y="943.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.09%)</title><rect x="3.9469%" y="917" width="0.0897%" height="15" fill="rgb(252,126,126)" fg:x="220" fg:w="5"/><text x="4.1969%" y="927.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.09%)</title><rect x="3.9469%" y="901" width="0.0897%" height="15" fill="rgb(247,119,119)" fg:x="220" fg:w="5"/><text x="4.1969%" y="911.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.09%)</title><rect x="3.9469%" y="885" width="0.0897%" height="15" fill="rgb(223,84,84)" fg:x="220" fg:w="5"/><text x="4.1969%" y="895.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (5 samples, 0.09%)</title><rect x="3.9469%" y="869" width="0.0897%" height="15" fill="rgb(226,88,88)" fg:x="220" fg:w="5"/><text x="4.1969%" y="879.50"></text></g><g><title>native_write_msr (5 samples, 0.09%)</title><rect x="3.9469%" y="853" width="0.0897%" height="15" fill="rgb(219,78,78)" fg:x="220" fg:w="5"/><text x="4.1969%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="4.0366%" y="1093" width="0.0179%" height="15" fill="rgb(235,102,102)" fg:x="225" fg:w="1"/><text x="4.2866%" y="1103.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="4.0366%" y="1077" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="225" fg:w="1"/><text x="4.2866%" y="1087.50"></text></g><g><title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="4.0366%" y="1061" width="0.0179%" height="15" fill="rgb(219,77,77)" fg:x="225" fg:w="1"/><text x="4.2866%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="4.0366%" y="1045" width="0.0179%" height="15" fill="rgb(253,127,127)" fg:x="225" fg:w="1"/><text x="4.2866%" y="1055.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="4.0366%" y="1029" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="225" fg:w="1"/><text x="4.2866%" y="1039.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="4.0366%" y="1013" width="0.0179%" height="15" fill="rgb(207,61,61)" fg:x="225" fg:w="1"/><text x="4.2866%" y="1023.50"></text></g><g><title>do_futex (1 samples, 0.02%)</title><rect x="4.0366%" y="997" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="225" fg:w="1"/><text x="4.2866%" y="1007.50"></text></g><g><title>futex_wake (1 samples, 0.02%)</title><rect x="4.0366%" y="981" width="0.0179%" height="15" fill="rgb(220,80,80)" fg:x="225" fg:w="1"/><text x="4.2866%" y="991.50"></text></g><g><title>wake_up_q (1 samples, 0.02%)</title><rect x="4.0366%" y="965" width="0.0179%" height="15" fill="rgb(242,111,111)" fg:x="225" fg:w="1"/><text x="4.2866%" y="975.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="4.0366%" y="949" width="0.0179%" height="15" fill="rgb(215,72,72)" fg:x="225" fg:w="1"/><text x="4.2866%" y="959.50"></text></g><g><title>_cond_resched (1 samples, 0.02%)</title><rect x="4.1442%" y="949" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="231" fg:w="1"/><text x="4.3942%" y="959.50"></text></g><g><title>__perf_event_task_sched_in (56 samples, 1.00%)</title><rect x="4.1801%" y="885" width="1.0047%" height="15" fill="rgb(215,72,72)" fg:x="233" fg:w="56"/><text x="4.4301%" y="895.50"></text></g><g><title>x86_pmu_enable (56 samples, 1.00%)</title><rect x="4.1801%" y="869" width="1.0047%" height="15" fill="rgb(217,76,76)" fg:x="233" fg:w="56"/><text x="4.4301%" y="879.50"></text></g><g><title>intel_tfa_pmu_enable_all (56 samples, 1.00%)</title><rect x="4.1801%" y="853" width="1.0047%" height="15" fill="rgb(221,80,80)" fg:x="233" fg:w="56"/><text x="4.4301%" y="863.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (56 samples, 1.00%)</title><rect x="4.1801%" y="837" width="1.0047%" height="15" fill="rgb(248,121,121)" fg:x="233" fg:w="56"/><text x="4.4301%" y="847.50"></text></g><g><title>native_write_msr (56 samples, 1.00%)</title><rect x="4.1801%" y="821" width="1.0047%" height="15" fill="rgb(218,77,77)" fg:x="233" fg:w="56"/><text x="4.4301%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (63 samples, 1.13%)</title><rect x="4.0725%" y="1029" width="1.1302%" height="15" fill="rgb(218,76,76)" fg:x="227" fg:w="63"/><text x="4.3225%" y="1039.50"></text></g><g><title>do_syscall_64 (63 samples, 1.13%)</title><rect x="4.0725%" y="1013" width="1.1302%" height="15" fill="rgb(233,98,98)" fg:x="227" fg:w="63"/><text x="4.3225%" y="1023.50"></text></g><g><title>__x64_sys_futex (60 samples, 1.08%)</title><rect x="4.1263%" y="997" width="1.0764%" height="15" fill="rgb(232,97,97)" fg:x="230" fg:w="60"/><text x="4.3763%" y="1007.50"></text></g><g><title>do_futex (60 samples, 1.08%)</title><rect x="4.1263%" y="981" width="1.0764%" height="15" fill="rgb(206,59,59)" fg:x="230" fg:w="60"/><text x="4.3763%" y="991.50"></text></g><g><title>futex_wait (60 samples, 1.08%)</title><rect x="4.1263%" y="965" width="1.0764%" height="15" fill="rgb(239,107,107)" fg:x="230" fg:w="60"/><text x="4.3763%" y="975.50"></text></g><g><title>futex_wait_queue_me (58 samples, 1.04%)</title><rect x="4.1622%" y="949" width="1.0405%" height="15" fill="rgb(240,109,109)" fg:x="232" fg:w="58"/><text x="4.4122%" y="959.50"></text></g><g><title>schedule (58 samples, 1.04%)</title><rect x="4.1622%" y="933" width="1.0405%" height="15" fill="rgb(220,79,79)" fg:x="232" fg:w="58"/><text x="4.4122%" y="943.50"></text></g><g><title>__sched_text_start (58 samples, 1.04%)</title><rect x="4.1622%" y="917" width="1.0405%" height="15" fill="rgb(211,67,67)" fg:x="232" fg:w="58"/><text x="4.4122%" y="927.50"></text></g><g><title>finish_task_switch (58 samples, 1.04%)</title><rect x="4.1622%" y="901" width="1.0405%" height="15" fill="rgb(204,56,56)" fg:x="232" fg:w="58"/><text x="4.4122%" y="911.50"></text></g><g><title>call_function_interrupt (1 samples, 0.02%)</title><rect x="5.1848%" y="885" width="0.0179%" height="15" fill="rgb(219,78,78)" fg:x="289" fg:w="1"/><text x="5.4348%" y="895.50"></text></g><g><title>smp_call_function_interrupt (1 samples, 0.02%)</title><rect x="5.1848%" y="869" width="0.0179%" height="15" fill="rgb(247,119,119)" fg:x="289" fg:w="1"/><text x="5.4348%" y="879.50"></text></g><g><title>generic_smp_call_function_single_interrupt (1 samples, 0.02%)</title><rect x="5.1848%" y="853" width="0.0179%" height="15" fill="rgb(245,116,116)" fg:x="289" fg:w="1"/><text x="5.4348%" y="863.50"></text></g><g><title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="5.1848%" y="837" width="0.0179%" height="15" fill="rgb(250,123,123)" fg:x="289" fg:w="1"/><text x="5.4348%" y="847.50"></text></g><g><title>llist_reverse_order (1 samples, 0.02%)</title><rect x="5.1848%" y="821" width="0.0179%" height="15" fill="rgb(238,106,106)" fg:x="289" fg:w="1"/><text x="5.4348%" y="831.50"></text></g><g><title>__pthread_mutex_cond_lock (65 samples, 1.17%)</title><rect x="4.0545%" y="1061" width="1.1661%" height="15" fill="rgb(254,129,129)" fg:x="226" fg:w="65"/><text x="4.3045%" y="1071.50"></text></g><g><title>__lll_lock_wait (65 samples, 1.17%)</title><rect x="4.0545%" y="1045" width="1.1661%" height="15" fill="rgb(220,80,80)" fg:x="226" fg:w="65"/><text x="4.3045%" y="1055.50"></text></g><g><title>interrupt_entry (1 samples, 0.02%)</title><rect x="5.2027%" y="1029" width="0.0179%" height="15" fill="rgb(210,65,65)" fg:x="290" fg:w="1"/><text x="5.4527%" y="1039.50"></text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="5.2207%" y="1045" width="0.0359%" height="15" fill="rgb(242,111,111)" fg:x="291" fg:w="2"/><text x="5.4707%" y="1055.50"></text></g><g><title>__mmdrop (1 samples, 0.02%)</title><rect x="5.3821%" y="901" width="0.0179%" height="15" fill="rgb(242,112,112)" fg:x="300" fg:w="1"/><text x="5.6321%" y="911.50"></text></g><g><title>kmem_cache_free (1 samples, 0.02%)</title><rect x="5.3821%" y="885" width="0.0179%" height="15" fill="rgb(252,126,126)" fg:x="300" fg:w="1"/><text x="5.6321%" y="895.50"></text></g><g><title>__perf_event_task_sched_in (124 samples, 2.22%)</title><rect x="5.4001%" y="901" width="2.2246%" height="15" fill="rgb(240,108,108)" fg:x="301" fg:w="124"/><text x="5.6501%" y="911.50">_..</text></g><g><title>x86_pmu_enable (123 samples, 2.21%)</title><rect x="5.4180%" y="885" width="2.2067%" height="15" fill="rgb(204,56,56)" fg:x="302" fg:w="123"/><text x="5.6680%" y="895.50">x..</text></g><g><title>intel_tfa_pmu_enable_all (123 samples, 2.21%)</title><rect x="5.4180%" y="869" width="2.2067%" height="15" fill="rgb(201,52,52)" fg:x="302" fg:w="123"/><text x="5.6680%" y="879.50">i..</text></g><g><title>__intel_pmu_enable_all.constprop.31 (123 samples, 2.21%)</title><rect x="5.4180%" y="853" width="2.2067%" height="15" fill="rgb(234,100,100)" fg:x="302" fg:w="123"/><text x="5.6680%" y="863.50">_..</text></g><g><title>native_write_msr (123 samples, 2.21%)</title><rect x="5.4180%" y="837" width="2.2067%" height="15" fill="rgb(231,95,95)" fg:x="302" fg:w="123"/><text x="5.6680%" y="847.50">n..</text></g><g><title>flush_tlb_func_remote (2 samples, 0.04%)</title><rect x="7.6247%" y="837" width="0.0359%" height="15" fill="rgb(201,52,52)" fg:x="425" fg:w="2"/><text x="7.8747%" y="847.50"></text></g><g><title>flush_tlb_func_common.constprop.9 (2 samples, 0.04%)</title><rect x="7.6247%" y="821" width="0.0359%" height="15" fill="rgb(223,83,83)" fg:x="425" fg:w="2"/><text x="7.8747%" y="831.50"></text></g><g><title>native_flush_tlb_one_user (2 samples, 0.04%)</title><rect x="7.6247%" y="805" width="0.0359%" height="15" fill="rgb(200,51,51)" fg:x="425" fg:w="2"/><text x="7.8747%" y="815.50"></text></g><g><title>call_function_interrupt (3 samples, 0.05%)</title><rect x="7.6247%" y="901" width="0.0538%" height="15" fill="rgb(250,123,123)" fg:x="425" fg:w="3"/><text x="7.8747%" y="911.50"></text></g><g><title>smp_call_function_interrupt (3 samples, 0.05%)</title><rect x="7.6247%" y="885" width="0.0538%" height="15" fill="rgb(232,97,97)" fg:x="425" fg:w="3"/><text x="7.8747%" y="895.50"></text></g><g><title>generic_smp_call_function_single_interrupt (3 samples, 0.05%)</title><rect x="7.6247%" y="869" width="0.0538%" height="15" fill="rgb(232,97,97)" fg:x="425" fg:w="3"/><text x="7.8747%" y="879.50"></text></g><g><title>flush_smp_call_function_queue (3 samples, 0.05%)</title><rect x="7.6247%" y="853" width="0.0538%" height="15" fill="rgb(204,56,56)" fg:x="425" fg:w="3"/><text x="7.8747%" y="863.50"></text></g><g><title>irq_work_run (1 samples, 0.02%)</title><rect x="7.6606%" y="837" width="0.0179%" height="15" fill="rgb(244,114,114)" fg:x="427" fg:w="1"/><text x="7.9106%" y="847.50"></text></g><g><title>irq_work_run_list (1 samples, 0.02%)</title><rect x="7.6606%" y="821" width="0.0179%" height="15" fill="rgb(252,126,126)" fg:x="427" fg:w="1"/><text x="7.9106%" y="831.50"></text></g><g><title>perf_event_wakeup (1 samples, 0.02%)</title><rect x="7.6606%" y="805" width="0.0179%" height="15" fill="rgb(243,113,113)" fg:x="427" fg:w="1"/><text x="7.9106%" y="815.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="7.6785%" y="709" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="428" fg:w="1"/><text x="7.9285%" y="719.50"></text></g><g><title>update_cfs_rq_h_load (1 samples, 0.02%)</title><rect x="7.6785%" y="693" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="428" fg:w="1"/><text x="7.9285%" y="703.50"></text></g><g><title>finish_task_switch (131 samples, 2.35%)</title><rect x="5.3642%" y="917" width="2.3502%" height="15" fill="rgb(250,122,122)" fg:x="299" fg:w="131"/><text x="5.6142%" y="927.50">f..</text></g><g><title>irq_work_interrupt (2 samples, 0.04%)</title><rect x="7.6785%" y="901" width="0.0359%" height="15" fill="rgb(201,52,52)" fg:x="428" fg:w="2"/><text x="7.9285%" y="911.50"></text></g><g><title>smp_irq_work_interrupt (2 samples, 0.04%)</title><rect x="7.6785%" y="885" width="0.0359%" height="15" fill="rgb(248,120,120)" fg:x="428" fg:w="2"/><text x="7.9285%" y="895.50"></text></g><g><title>irq_work_run (2 samples, 0.04%)</title><rect x="7.6785%" y="869" width="0.0359%" height="15" fill="rgb(249,121,121)" fg:x="428" fg:w="2"/><text x="7.9285%" y="879.50"></text></g><g><title>irq_work_run_list (2 samples, 0.04%)</title><rect x="7.6785%" y="853" width="0.0359%" height="15" fill="rgb(213,69,69)" fg:x="428" fg:w="2"/><text x="7.9285%" y="863.50"></text></g><g><title>perf_pending_event (2 samples, 0.04%)</title><rect x="7.6785%" y="837" width="0.0359%" height="15" fill="rgb(244,114,114)" fg:x="428" fg:w="2"/><text x="7.9285%" y="847.50"></text></g><g><title>perf_event_wakeup (2 samples, 0.04%)</title><rect x="7.6785%" y="821" width="0.0359%" height="15" fill="rgb(226,88,88)" fg:x="428" fg:w="2"/><text x="7.9285%" y="831.50"></text></g><g><title>__wake_up (2 samples, 0.04%)</title><rect x="7.6785%" y="805" width="0.0359%" height="15" fill="rgb(235,101,101)" fg:x="428" fg:w="2"/><text x="7.9285%" y="815.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="7.6785%" y="789" width="0.0359%" height="15" fill="rgb(249,121,121)" fg:x="428" fg:w="2"/><text x="7.9285%" y="799.50"></text></g><g><title>__wake_up_common (2 samples, 0.04%)</title><rect x="7.6785%" y="773" width="0.0359%" height="15" fill="rgb(236,103,103)" fg:x="428" fg:w="2"/><text x="7.9285%" y="783.50"></text></g><g><title>pollwake (2 samples, 0.04%)</title><rect x="7.6785%" y="757" width="0.0359%" height="15" fill="rgb(236,103,103)" fg:x="428" fg:w="2"/><text x="7.9285%" y="767.50"></text></g><g><title>default_wake_function (2 samples, 0.04%)</title><rect x="7.6785%" y="741" width="0.0359%" height="15" fill="rgb(233,98,98)" fg:x="428" fg:w="2"/><text x="7.9285%" y="751.50"></text></g><g><title>try_to_wake_up (2 samples, 0.04%)</title><rect x="7.6785%" y="725" width="0.0359%" height="15" fill="rgb(215,72,72)" fg:x="428" fg:w="2"/><text x="7.9285%" y="735.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="7.6964%" y="709" width="0.0179%" height="15" fill="rgb(211,66,66)" fg:x="429" fg:w="1"/><text x="7.9464%" y="719.50"></text></g><g><title>activate_task (1 samples, 0.02%)</title><rect x="7.6964%" y="693" width="0.0179%" height="15" fill="rgb(217,76,76)" fg:x="429" fg:w="1"/><text x="7.9464%" y="703.50"></text></g><g><title>psi_task_change (1 samples, 0.02%)</title><rect x="7.6964%" y="677" width="0.0179%" height="15" fill="rgb(210,64,64)" fg:x="429" fg:w="1"/><text x="7.9464%" y="687.50"></text></g><g><title>irq_work_interrupt (1 samples, 0.02%)</title><rect x="7.7144%" y="917" width="0.0179%" height="15" fill="rgb(235,102,102)" fg:x="430" fg:w="1"/><text x="7.9644%" y="927.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.04%)</title><rect x="7.7323%" y="917" width="0.0359%" height="15" fill="rgb(206,60,60)" fg:x="431" fg:w="2"/><text x="7.9823%" y="927.50"></text></g><g><title>newidle_balance (2 samples, 0.04%)</title><rect x="7.7323%" y="901" width="0.0359%" height="15" fill="rgb(231,95,95)" fg:x="431" fg:w="2"/><text x="7.9823%" y="911.50"></text></g><g><title>load_balance (1 samples, 0.02%)</title><rect x="7.7503%" y="885" width="0.0179%" height="15" fill="rgb(216,73,73)" fg:x="432" fg:w="1"/><text x="8.0003%" y="895.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="7.7503%" y="869" width="0.0179%" height="15" fill="rgb(216,73,73)" fg:x="432" fg:w="1"/><text x="8.0003%" y="879.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="7.7503%" y="853" width="0.0179%" height="15" fill="rgb(234,99,99)" fg:x="432" fg:w="1"/><text x="8.0003%" y="863.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="7.7682%" y="917" width="0.0179%" height="15" fill="rgb(206,58,58)" fg:x="433" fg:w="1"/><text x="8.0182%" y="927.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.02%)</title><rect x="7.7682%" y="901" width="0.0179%" height="15" fill="rgb(228,91,91)" fg:x="433" fg:w="1"/><text x="8.0182%" y="911.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.02%)</title><rect x="7.7682%" y="885" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="433" fg:w="1"/><text x="8.0182%" y="895.50"></text></g><g><title>futex_wait_queue_me (137 samples, 2.46%)</title><rect x="5.3463%" y="965" width="2.4578%" height="15" fill="rgb(206,59,59)" fg:x="298" fg:w="137"/><text x="5.5963%" y="975.50">fu..</text></g><g><title>schedule (136 samples, 2.44%)</title><rect x="5.3642%" y="949" width="2.4399%" height="15" fill="rgb(234,99,99)" fg:x="299" fg:w="136"/><text x="5.6142%" y="959.50">sc..</text></g><g><title>__sched_text_start (136 samples, 2.44%)</title><rect x="5.3642%" y="933" width="2.4399%" height="15" fill="rgb(220,79,79)" fg:x="299" fg:w="136"/><text x="5.6142%" y="943.50">__..</text></g><g><title>update_rq_clock (1 samples, 0.02%)</title><rect x="7.7861%" y="917" width="0.0179%" height="15" fill="rgb(220,79,79)" fg:x="434" fg:w="1"/><text x="8.0361%" y="927.50"></text></g><g><title>update_rq_clock.part.82 (1 samples, 0.02%)</title><rect x="7.7861%" y="901" width="0.0179%" height="15" fill="rgb(249,121,121)" fg:x="434" fg:w="1"/><text x="8.0361%" y="911.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="7.7861%" y="885" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="434" fg:w="1"/><text x="8.0361%" y="895.50"></text></g><g><title>sched_clock (1 samples, 0.02%)</title><rect x="7.7861%" y="869" width="0.0179%" height="15" fill="rgb(214,70,70)" fg:x="434" fg:w="1"/><text x="8.0361%" y="879.50"></text></g><g><title>native_sched_clock (1 samples, 0.02%)</title><rect x="7.7861%" y="853" width="0.0179%" height="15" fill="rgb(242,112,112)" fg:x="434" fg:w="1"/><text x="8.0361%" y="863.50"></text></g><g><title>do_futex (139 samples, 2.49%)</title><rect x="5.3283%" y="997" width="2.4937%" height="15" fill="rgb(203,55,55)" fg:x="297" fg:w="139"/><text x="5.5783%" y="1007.50">do..</text></g><g><title>futex_wait (139 samples, 2.49%)</title><rect x="5.3283%" y="981" width="2.4937%" height="15" fill="rgb(206,59,59)" fg:x="297" fg:w="139"/><text x="5.5783%" y="991.50">fu..</text></g><g><title>futex_wait_setup (1 samples, 0.02%)</title><rect x="7.8041%" y="965" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="435" fg:w="1"/><text x="8.0541%" y="975.50"></text></g><g><title>__x64_sys_futex (141 samples, 2.53%)</title><rect x="5.3104%" y="1013" width="2.5296%" height="15" fill="rgb(216,73,73)" fg:x="296" fg:w="141"/><text x="5.5604%" y="1023.50">__..</text></g><g><title>futex_wait (1 samples, 0.02%)</title><rect x="7.8220%" y="997" width="0.0179%" height="15" fill="rgb(228,91,91)" fg:x="436" fg:w="1"/><text x="8.0720%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (145 samples, 2.60%)</title><rect x="5.2565%" y="1045" width="2.6014%" height="15" fill="rgb(223,84,84)" fg:x="293" fg:w="145"/><text x="5.5065%" y="1055.50">en..</text></g><g><title>do_syscall_64 (145 samples, 2.60%)</title><rect x="5.2565%" y="1029" width="2.6014%" height="15" fill="rgb(201,52,52)" fg:x="293" fg:w="145"/><text x="5.5065%" y="1039.50">do..</text></g><g><title>switch_fpu_return (1 samples, 0.02%)</title><rect x="7.8400%" y="1013" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="437" fg:w="1"/><text x="8.0900%" y="1023.50"></text></g><g><title>__pthread_cond_wait (214 samples, 3.84%)</title><rect x="4.0545%" y="1093" width="3.8393%" height="15" fill="rgb(201,51,51)" fg:x="226" fg:w="214"/><text x="4.3045%" y="1103.50">__pt..</text></g><g><title>__pthread_cond_wait_common (214 samples, 3.84%)</title><rect x="4.0545%" y="1077" width="3.8393%" height="15" fill="rgb(245,116,116)" fg:x="226" fg:w="214"/><text x="4.3045%" y="1087.50">__pt..</text></g><g><title>futex_wait_cancelable (149 samples, 2.67%)</title><rect x="5.2207%" y="1061" width="2.6731%" height="15" fill="rgb(220,79,79)" fg:x="291" fg:w="149"/><text x="5.4707%" y="1071.50">fu..</text></g><g><title>interrupt_entry (2 samples, 0.04%)</title><rect x="7.8579%" y="1045" width="0.0359%" height="15" fill="rgb(224,85,85)" fg:x="438" fg:w="2"/><text x="8.1079%" y="1055.50"></text></g><g><title>__GI___clone (434 samples, 7.79%)</title><rect x="0.1435%" y="1173" width="7.7861%" height="15" fill="rgb(240,108,108)" fg:x="8" fg:w="434"/><text x="0.3935%" y="1183.50">__GI___clone</text></g><g><title>start_thread (434 samples, 7.79%)</title><rect x="0.1435%" y="1157" width="7.7861%" height="15" fill="rgb(227,89,89)" fg:x="8" fg:w="434"/><text x="0.3935%" y="1167.50">start_thread</text></g><g><title>v8::base::ThreadEntry (434 samples, 7.79%)</title><rect x="0.1435%" y="1141" width="7.7861%" height="15" fill="rgb(219,219,66)" fg:x="8" fg:w="434"/><text x="0.3935%" y="1151.50">v8::base::T..</text></g><g><title>v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (432 samples, 7.75%)</title><rect x="0.1794%" y="1125" width="7.7503%" height="15" fill="rgb(197,197,58)" fg:x="10" fg:w="432"/><text x="0.4294%" y="1135.50">v8::platfor..</text></g><g><title>v8::platform::DelayedTaskQueue::GetNext (223 samples, 4.00%)</title><rect x="3.9290%" y="1109" width="4.0007%" height="15" fill="rgb(220,220,66)" fg:x="219" fg:w="223"/><text x="4.1790%" y="1119.50">v8::..</text></g><g><title>v8::platform::(anonymous namespace)::DefaultTimeFunction (2 samples, 0.04%)</title><rect x="7.8938%" y="1093" width="0.0359%" height="15" fill="rgb(211,211,63)" fg:x="440" fg:w="2"/><text x="8.1438%" y="1103.50"></text></g><g><title>v8::base::TimeTicks::Now (1 samples, 0.02%)</title><rect x="7.9117%" y="1077" width="0.0179%" height="15" fill="rgb(180,180,51)" fg:x="441" fg:w="1"/><text x="8.1617%" y="1087.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="7.9117%" y="1061" width="0.0179%" height="15" fill="rgb(250,122,122)" fg:x="441" fg:w="1"/><text x="8.1617%" y="1071.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="7.9117%" y="1045" width="0.0179%" height="15" fill="rgb(233,98,98)" fg:x="441" fg:w="1"/><text x="8.1617%" y="1055.50"></text></g><g><title>[[vdso]] (1 samples, 0.02%)</title><rect x="7.9117%" y="1029" width="0.0179%" height="15" fill="rgb(222,83,83)" fg:x="441" fg:w="1"/><text x="8.1617%" y="1039.50"></text></g><g><title>call_function_interrupt (1 samples, 0.02%)</title><rect x="7.9297%" y="1173" width="0.0179%" height="15" fill="rgb(242,112,112)" fg:x="442" fg:w="1"/><text x="8.1797%" y="1183.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="7.9476%" y="1141" width="0.0359%" height="15" fill="rgb(239,106,106)" fg:x="443" fg:w="2"/><text x="8.1976%" y="1151.50"></text></g><g><title>do_futex (2 samples, 0.04%)</title><rect x="7.9476%" y="1125" width="0.0359%" height="15" fill="rgb(208,62,62)" fg:x="443" fg:w="2"/><text x="8.1976%" y="1135.50"></text></g><g><title>futex_wait (2 samples, 0.04%)</title><rect x="7.9476%" y="1109" width="0.0359%" height="15" fill="rgb(239,107,107)" fg:x="443" fg:w="2"/><text x="8.1976%" y="1119.50"></text></g><g><title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="7.9476%" y="1093" width="0.0359%" height="15" fill="rgb(249,121,121)" fg:x="443" fg:w="2"/><text x="8.1976%" y="1103.50"></text></g><g><title>schedule (2 samples, 0.04%)</title><rect x="7.9476%" y="1077" width="0.0359%" height="15" fill="rgb(228,90,90)" fg:x="443" fg:w="2"/><text x="8.1976%" y="1087.50"></text></g><g><title>__sched_text_start (2 samples, 0.04%)</title><rect x="7.9476%" y="1061" width="0.0359%" height="15" fill="rgb(225,87,87)" fg:x="443" fg:w="2"/><text x="8.1976%" y="1071.50"></text></g><g><title>finish_task_switch (2 samples, 0.04%)</title><rect x="7.9476%" y="1045" width="0.0359%" height="15" fill="rgb(233,98,98)" fg:x="443" fg:w="2"/><text x="8.1976%" y="1055.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.04%)</title><rect x="7.9476%" y="1029" width="0.0359%" height="15" fill="rgb(220,79,79)" fg:x="443" fg:w="2"/><text x="8.1976%" y="1039.50"></text></g><g><title>x86_pmu_enable (2 samples, 0.04%)</title><rect x="7.9476%" y="1013" width="0.0359%" height="15" fill="rgb(245,115,115)" fg:x="443" fg:w="2"/><text x="8.1976%" y="1023.50"></text></g><g><title>intel_tfa_pmu_enable_all (2 samples, 0.04%)</title><rect x="7.9476%" y="997" width="0.0359%" height="15" fill="rgb(226,89,89)" fg:x="443" fg:w="2"/><text x="8.1976%" y="1007.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (2 samples, 0.04%)</title><rect x="7.9476%" y="981" width="0.0359%" height="15" fill="rgb(220,79,79)" fg:x="443" fg:w="2"/><text x="8.1976%" y="991.50"></text></g><g><title>native_write_msr (2 samples, 0.04%)</title><rect x="7.9476%" y="965" width="0.0359%" height="15" fill="rgb(246,117,117)" fg:x="443" fg:w="2"/><text x="8.1976%" y="975.50"></text></g><g><title>V8_DefaultWorke (447 samples, 8.02%)</title><rect x="0.0000%" y="1189" width="8.0194%" height="15" fill="rgb(206,59,59)" fg:x="0" fg:w="447"/><text x="0.2500%" y="1199.50">V8_DefaultW..</text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="7.9476%" y="1173" width="0.0718%" height="15" fill="rgb(213,69,69)" fg:x="443" fg:w="4"/><text x="8.1976%" y="1183.50"></text></g><g><title>do_syscall_64 (4 samples, 0.07%)</title><rect x="7.9476%" y="1157" width="0.0718%" height="15" fill="rgb(251,125,125)" fg:x="443" fg:w="4"/><text x="8.1976%" y="1167.50"></text></g><g><title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="7.9835%" y="1141" width="0.0359%" height="15" fill="rgb(248,120,120)" fg:x="445" fg:w="2"/><text x="8.2335%" y="1151.50"></text></g><g><title>do_signal (2 samples, 0.04%)</title><rect x="7.9835%" y="1125" width="0.0359%" height="15" fill="rgb(227,90,90)" fg:x="445" fg:w="2"/><text x="8.2335%" y="1135.50"></text></g><g><title>get_signal (2 samples, 0.04%)</title><rect x="7.9835%" y="1109" width="0.0359%" height="15" fill="rgb(217,75,75)" fg:x="445" fg:w="2"/><text x="8.2335%" y="1119.50"></text></g><g><title>do_group_exit (2 samples, 0.04%)</title><rect x="7.9835%" y="1093" width="0.0359%" height="15" fill="rgb(233,98,98)" fg:x="445" fg:w="2"/><text x="8.2335%" y="1103.50"></text></g><g><title>do_exit (2 samples, 0.04%)</title><rect x="7.9835%" y="1077" width="0.0359%" height="15" fill="rgb(204,56,56)" fg:x="445" fg:w="2"/><text x="8.2335%" y="1087.50"></text></g><g><title>mmput (2 samples, 0.04%)</title><rect x="7.9835%" y="1061" width="0.0359%" height="15" fill="rgb(247,119,119)" fg:x="445" fg:w="2"/><text x="8.2335%" y="1071.50"></text></g><g><title>exit_mmap (2 samples, 0.04%)</title><rect x="7.9835%" y="1045" width="0.0359%" height="15" fill="rgb(226,88,88)" fg:x="445" fg:w="2"/><text x="8.2335%" y="1055.50"></text></g><g><title>unmap_vmas (2 samples, 0.04%)</title><rect x="7.9835%" y="1029" width="0.0359%" height="15" fill="rgb(229,92,92)" fg:x="445" fg:w="2"/><text x="8.2335%" y="1039.50"></text></g><g><title>unmap_single_vma (2 samples, 0.04%)</title><rect x="7.9835%" y="1013" width="0.0359%" height="15" fill="rgb(221,81,81)" fg:x="445" fg:w="2"/><text x="8.2335%" y="1023.50"></text></g><g><title>unmap_page_range (2 samples, 0.04%)</title><rect x="7.9835%" y="997" width="0.0359%" height="15" fill="rgb(236,103,103)" fg:x="445" fg:w="2"/><text x="8.2335%" y="1007.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="8.0014%" y="981" width="0.0179%" height="15" fill="rgb(235,101,101)" fg:x="446" fg:w="1"/><text x="8.2514%" y="991.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="8.0014%" y="965" width="0.0179%" height="15" fill="rgb(238,105,105)" fg:x="446" fg:w="1"/><text x="8.2514%" y="975.50"></text></g><g><title>deno_web::op_encoding_encode_into::call (2 samples, 0.04%)</title><rect x="8.0194%" y="1077" width="0.0359%" height="15" fill="rgb(187,187,54)" fg:x="447" fg:w="2"/><text x="8.2694%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.04%)</title><rect x="8.0194%" y="1061" width="0.0359%" height="15" fill="rgb(207,207,61)" fg:x="447" fg:w="2"/><text x="8.2694%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.04%)</title><rect x="8.0194%" y="1045" width="0.0359%" height="15" fill="rgb(194,194,56)" fg:x="447" fg:w="2"/><text x="8.2694%" y="1055.50"></text></g><g><title>&lt;core::str::iter::EncodeUtf16 as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="8.0194%" y="1029" width="0.0359%" height="15" fill="rgb(200,200,59)" fg:x="447" fg:w="2"/><text x="8.2694%" y="1039.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="8.0194%" y="1013" width="0.0359%" height="15" fill="rgb(217,217,65)" fg:x="447" fg:w="2"/><text x="8.2694%" y="1023.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.04%)</title><rect x="8.0194%" y="997" width="0.0359%" height="15" fill="rgb(177,177,50)" fg:x="447" fg:w="2"/><text x="8.2694%" y="1007.50"></text></g><g><title>serde_v8::de::to_utf8 (1 samples, 0.02%)</title><rect x="8.0553%" y="1077" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="449" fg:w="1"/><text x="8.3053%" y="1087.50"></text></g><g><title>serde_v8::de::to_utf8_fast (1 samples, 0.02%)</title><rect x="8.0553%" y="1061" width="0.0179%" height="15" fill="rgb(227,227,69)" fg:x="449" fg:w="1"/><text x="8.3053%" y="1071.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::write_utf8 (1 samples, 0.02%)</title><rect x="8.0553%" y="1045" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="449" fg:w="1"/><text x="8.3053%" y="1055.50"></text></g><g><title>v8::String::WriteUtf8 (1 samples, 0.02%)</title><rect x="8.0553%" y="1029" width="0.0179%" height="15" fill="rgb(212,212,63)" fg:x="449" fg:w="1"/><text x="8.3053%" y="1039.50"></text></g><g><title>v8::internal::BaseNameDictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::New&lt;v8::internal::Isolate&gt; (1 samples, 0.02%)</title><rect x="8.0732%" y="949" width="0.0179%" height="15" fill="rgb(180,180,51)" fg:x="450" fg:w="1"/><text x="8.3232%" y="959.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (1 samples, 0.02%)</title><rect x="8.0732%" y="933" width="0.0179%" height="15" fill="rgb(179,179,51)" fg:x="450" fg:w="1"/><text x="8.3232%" y="943.50"></text></g><g><title>&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::end (2 samples, 0.04%)</title><rect x="8.0732%" y="1045" width="0.0359%" height="15" fill="rgb(185,185,53)" fg:x="450" fg:w="2"/><text x="8.3232%" y="1055.50"></text></g><g><title>&lt;serde_v8::ser::ObjectSerializer as serde::ser::SerializeStruct&gt;::end (2 samples, 0.04%)</title><rect x="8.0732%" y="1029" width="0.0359%" height="15" fill="rgb(199,199,59)" fg:x="450" fg:w="2"/><text x="8.3232%" y="1039.50"></text></g><g><title>v8::object::&lt;impl v8::data::Object&gt;::with_prototype_and_properties (2 samples, 0.04%)</title><rect x="8.0732%" y="1013" width="0.0359%" height="15" fill="rgb(194,194,57)" fg:x="450" fg:w="2"/><text x="8.3232%" y="1023.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (2 samples, 0.04%)</title><rect x="8.0732%" y="997" width="0.0359%" height="15" fill="rgb(183,183,52)" fg:x="450" fg:w="2"/><text x="8.3232%" y="1007.50"></text></g><g><title>v8::object::_&lt;impl v8::data::Object&gt;::with_prototype_and_properties::_{{closure}} (2 samples, 0.04%)</title><rect x="8.0732%" y="981" width="0.0359%" height="15" fill="rgb(225,225,68)" fg:x="450" fg:w="2"/><text x="8.3232%" y="991.50"></text></g><g><title>v8::Object::New (2 samples, 0.04%)</title><rect x="8.0732%" y="965" width="0.0359%" height="15" fill="rgb(211,211,63)" fg:x="450" fg:w="2"/><text x="8.3232%" y="975.50"></text></g><g><title>v8::internal::Factory::NewSlowJSObjectWithPropertiesAndElements (1 samples, 0.02%)</title><rect x="8.0911%" y="949" width="0.0179%" height="15" fill="rgb(190,190,55)" fg:x="451" fg:w="1"/><text x="8.3411%" y="959.50"></text></g><g><title>v8::internal::Map::TransitionToPrototype (1 samples, 0.02%)</title><rect x="8.0911%" y="933" width="0.0179%" height="15" fill="rgb(213,213,64)" fg:x="451" fg:w="1"/><text x="8.3411%" y="943.50"></text></g><g><title>v8::internal::Map::CopyReplaceDescriptors (1 samples, 0.02%)</title><rect x="8.0911%" y="917" width="0.0179%" height="15" fill="rgb(208,208,62)" fg:x="451" fg:w="1"/><text x="8.3411%" y="927.50"></text></g><g><title>v8::internal::Map::RawCopy (1 samples, 0.02%)</title><rect x="8.0911%" y="901" width="0.0179%" height="15" fill="rgb(229,229,69)" fg:x="451" fg:w="1"/><text x="8.3411%" y="911.50"></text></g><g><title>v8::internal::Map::SetPrototype (1 samples, 0.02%)</title><rect x="8.0911%" y="885" width="0.0179%" height="15" fill="rgb(225,225,68)" fg:x="451" fg:w="1"/><text x="8.3411%" y="895.50"></text></g><g><title>JS:* file:///media/andrew/OCZ/source/roll-your-own-javascript-runtime/bench.js:39:11 (6 samples, 0.11%)</title><rect x="8.0194%" y="1173" width="0.1076%" height="15" fill="rgb(92,204,204)" fg:x="447" fg:w="6"/><text x="8.2694%" y="1183.50"></text></g><g><title>Builtins_CallApiCallback (6 samples, 0.11%)</title><rect x="8.0194%" y="1157" width="0.1076%" height="15" fill="rgb(203,55,55)" fg:x="447" fg:w="6"/><text x="8.2694%" y="1167.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (6 samples, 0.11%)</title><rect x="8.0194%" y="1141" width="0.1076%" height="15" fill="rgb(183,183,53)" fg:x="447" fg:w="6"/><text x="8.2694%" y="1151.50"></text></g><g><title>v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}} (6 samples, 0.11%)</title><rect x="8.0194%" y="1125" width="0.1076%" height="15" fill="rgb(218,218,65)" fg:x="447" fg:w="6"/><text x="8.2694%" y="1135.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.11%)</title><rect x="8.0194%" y="1109" width="0.1076%" height="15" fill="rgb(184,184,53)" fg:x="447" fg:w="6"/><text x="8.2694%" y="1119.50"></text></g><g><title>deno_web::op_encoding_encode_into::v8_func (6 samples, 0.11%)</title><rect x="8.0194%" y="1093" width="0.1076%" height="15" fill="rgb(201,201,59)" fg:x="447" fg:w="6"/><text x="8.2694%" y="1103.50"></text></g><g><title>serde_v8::ser::to_v8 (3 samples, 0.05%)</title><rect x="8.0732%" y="1077" width="0.0538%" height="15" fill="rgb(221,221,66)" fg:x="450" fg:w="3"/><text x="8.3232%" y="1087.50"></text></g><g><title>deno_web::_::&lt;impl serde::ser::Serialize for deno_web::EncodeIntoResult&gt;::serialize (3 samples, 0.05%)</title><rect x="8.0732%" y="1061" width="0.0538%" height="15" fill="rgb(200,200,59)" fg:x="450" fg:w="3"/><text x="8.3232%" y="1071.50"></text></g><g><title>&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="8.1091%" y="1045" width="0.0179%" height="15" fill="rgb(228,228,69)" fg:x="452" fg:w="1"/><text x="8.3591%" y="1055.50"></text></g><g><title>&lt;serde_v8::ser::ObjectSerializer as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="8.1091%" y="1029" width="0.0179%" height="15" fill="rgb(229,229,69)" fg:x="452" fg:w="1"/><text x="8.3591%" y="1039.50"></text></g><g><title>serde_v8::keys::v8_struct_key (1 samples, 0.02%)</title><rect x="8.1091%" y="1013" width="0.0179%" height="15" fill="rgb(222,222,67)" fg:x="452" fg:w="1"/><text x="8.3591%" y="1023.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::new_from_utf8 (1 samples, 0.02%)</title><rect x="8.1091%" y="997" width="0.0179%" height="15" fill="rgb(225,225,68)" fg:x="452" fg:w="1"/><text x="8.3591%" y="1007.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (1 samples, 0.02%)</title><rect x="8.1091%" y="981" width="0.0179%" height="15" fill="rgb(221,221,67)" fg:x="452" fg:w="1"/><text x="8.3591%" y="991.50"></text></g><g><title>v8::string::_&lt;impl v8::data::String&gt;::new_from_utf8::_{{closure}} (1 samples, 0.02%)</title><rect x="8.1091%" y="965" width="0.0179%" height="15" fill="rgb(197,197,58)" fg:x="452" fg:w="1"/><text x="8.3591%" y="975.50"></text></g><g><title>v8::String::NewFromUtf8 (1 samples, 0.02%)</title><rect x="8.1091%" y="949" width="0.0179%" height="15" fill="rgb(184,184,53)" fg:x="452" fg:w="1"/><text x="8.3591%" y="959.50"></text></g><g><title>v8::internal::Factory::InternalizeUtf8String (1 samples, 0.02%)</title><rect x="8.1091%" y="933" width="0.0179%" height="15" fill="rgb(201,201,59)" fg:x="452" fg:w="1"/><text x="8.3591%" y="943.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeString (1 samples, 0.02%)</title><rect x="8.1091%" y="917" width="0.0179%" height="15" fill="rgb(210,210,62)" fg:x="452" fg:w="1"/><text x="8.3591%" y="927.50"></text></g><g><title>v8::internal::StringTable::LookupKey&lt;v8::internal::SequentialStringKey&lt;unsigned char&gt;, v8::internal::Isolate&gt; (1 samples, 0.02%)</title><rect x="8.1091%" y="901" width="0.0179%" height="15" fill="rgb(182,182,52)" fg:x="452" fg:w="1"/><text x="8.3591%" y="911.50"></text></g><g><title>v8::internal::Evacuator::Evacuator (1 samples, 0.02%)</title><rect x="8.5396%" y="997" width="0.0179%" height="15" fill="rgb(192,192,56)" fg:x="476" fg:w="1"/><text x="8.7896%" y="1007.50"></text></g><g><title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;v8::internal::AllocationSite, unsigned long&gt;, std::__1::__unordered_map_hasher&lt;v8::internal::AllocationSite, std::__1::__hash_value_type&lt;v8::internal::AllocationSite, unsigned long&gt;, v8::internal::Object::Hasher, std::__1::equal_to&lt;v8::internal::AllocationSite&gt;, true&gt;, std::__1::__unordered_map_equal&lt;v8::internal::AllocationSite, std::__1::__hash_value_type&lt;v8::internal::AllocationSite, unsigned long&gt;, std::__1::equal_to&lt;v8::internal::AllocationSite&gt;, v8::internal::Object::Hasher, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;v8::internal::AllocationSite, unsigned long&gt; &gt; &gt;::__rehash (1 samples, 0.02%)</title><rect x="8.5396%" y="981" width="0.0179%" height="15" fill="rgb(226,226,68)" fg:x="476" fg:w="1"/><text x="8.7896%" y="991.50"></text></g><g><title>operator new (1 samples, 0.02%)</title><rect x="8.5396%" y="965" width="0.0179%" height="15" fill="rgb(226,88,88)" fg:x="476" fg:w="1"/><text x="8.7896%" y="975.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="8.5396%" y="949" width="0.0179%" height="15" fill="rgb(205,57,57)" fg:x="476" fg:w="1"/><text x="8.7896%" y="959.50"></text></g><g><title>v8::internal::MarkCompactCollector::EvacuatePagesInParallel (2 samples, 0.04%)</title><rect x="8.5396%" y="1013" width="0.0359%" height="15" fill="rgb(208,208,62)" fg:x="476" fg:w="2"/><text x="8.7896%" y="1023.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (1 samples, 0.02%)</title><rect x="8.5576%" y="997" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="477" fg:w="1"/><text x="8.8076%" y="1007.50"></text></g><g><title>v8::platform::DefaultJobState::Join (1 samples, 0.02%)</title><rect x="8.5576%" y="981" width="0.0179%" height="15" fill="rgb(203,203,60)" fg:x="477" fg:w="1"/><text x="8.8076%" y="991.50"></text></g><g><title>v8::internal::PageEvacuationJob::Run (1 samples, 0.02%)</title><rect x="8.5576%" y="965" width="0.0179%" height="15" fill="rgb(195,195,57)" fg:x="477" fg:w="1"/><text x="8.8076%" y="975.50"></text></g><g><title>v8::internal::Evacuator::EvacuatePage (1 samples, 0.02%)</title><rect x="8.5576%" y="949" width="0.0179%" height="15" fill="rgb(184,184,53)" fg:x="477" fg:w="1"/><text x="8.8076%" y="959.50"></text></g><g><title>v8::internal::FullEvacuator::RawEvacuatePage (1 samples, 0.02%)</title><rect x="8.5576%" y="933" width="0.0179%" height="15" fill="rgb(203,203,60)" fg:x="477" fg:w="1"/><text x="8.8076%" y="943.50"></text></g><g><title>v8::internal::LiveObjectVisitor::VisitBlackObjectsNoFail&lt;v8::internal::EvacuateNewSpaceVisitor, v8::internal::NonAtomicMarkingState&gt; (1 samples, 0.02%)</title><rect x="8.5576%" y="917" width="0.0179%" height="15" fill="rgb(214,214,64)" fg:x="477" fg:w="1"/><text x="8.8076%" y="927.50"></text></g><g><title>v8::internal::EvacuateNewSpaceVisitor::Visit (1 samples, 0.02%)</title><rect x="8.5576%" y="901" width="0.0179%" height="15" fill="rgb(202,202,59)" fg:x="477" fg:w="1"/><text x="8.8076%" y="911.50"></text></g><g><title>v8::internal::EvacuateVisitorBase::TryEvacuateObject (1 samples, 0.02%)</title><rect x="8.5576%" y="885" width="0.0179%" height="15" fill="rgb(176,176,50)" fg:x="477" fg:w="1"/><text x="8.8076%" y="895.50"></text></g><g><title>v8::internal::EvacuateVisitorBase::RawMigrateObject&lt;(v8::internal::EvacuateVisitorBase::MigrationMode)1&gt; (1 samples, 0.02%)</title><rect x="8.5576%" y="869" width="0.0179%" height="15" fill="rgb(182,182,52)" fg:x="477" fg:w="1"/><text x="8.8076%" y="879.50"></text></g><g><title>v8::internal::BodyDescriptorApply&lt;v8::internal::CallIterateBody, v8::internal::Map&amp;, v8::internal::HeapObject&amp;, int&amp;, v8::internal::RecordMigratedSlotVisitor*&amp;&gt; (1 samples, 0.02%)</title><rect x="8.5576%" y="853" width="0.0179%" height="15" fill="rgb(196,196,57)" fg:x="477" fg:w="1"/><text x="8.8076%" y="863.50"></text></g><g><title>v8::internal::Heap::IterateWeakRoots (2 samples, 0.04%)</title><rect x="8.5755%" y="965" width="0.0359%" height="15" fill="rgb(224,224,68)" fg:x="478" fg:w="2"/><text x="8.8255%" y="975.50"></text></g><g><title>non-virtual thunk to v8::internal::PointersUpdatingVisitor::VisitRootPointers (2 samples, 0.04%)</title><rect x="8.5755%" y="949" width="0.0359%" height="15" fill="rgb(212,212,63)" fg:x="478" fg:w="2"/><text x="8.8255%" y="959.50"></text></g><g><title>v8::internal::MarkCompactCollector::Evacuate (5 samples, 0.09%)</title><rect x="8.5396%" y="1029" width="0.0897%" height="15" fill="rgb(221,221,66)" fg:x="476" fg:w="5"/><text x="8.7896%" y="1039.50"></text></g><g><title>v8::internal::MarkCompactCollector::UpdatePointersAfterEvacuation (3 samples, 0.05%)</title><rect x="8.5755%" y="1013" width="0.0538%" height="15" fill="rgb(201,201,59)" fg:x="478" fg:w="3"/><text x="8.8255%" y="1023.50"></text></g><g><title>v8::internal::Heap::IterateRootsIncludingClients (3 samples, 0.05%)</title><rect x="8.5755%" y="997" width="0.0538%" height="15" fill="rgb(191,191,56)" fg:x="478" fg:w="3"/><text x="8.8255%" y="1007.50"></text></g><g><title>v8::internal::Heap::IterateRoots (3 samples, 0.05%)</title><rect x="8.5755%" y="981" width="0.0538%" height="15" fill="rgb(181,181,52)" fg:x="478" fg:w="3"/><text x="8.8255%" y="991.50"></text></g><g><title>v8::internal::SerializerDeserializer::IterateSharedHeapObjectCache (1 samples, 0.02%)</title><rect x="8.6114%" y="965" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="480" fg:w="1"/><text x="8.8614%" y="975.50"></text></g><g><title>non-virtual thunk to v8::internal::PointersUpdatingVisitor::VisitRootPointer (1 samples, 0.02%)</title><rect x="8.6114%" y="949" width="0.0179%" height="15" fill="rgb(228,228,69)" fg:x="480" fg:w="1"/><text x="8.8614%" y="959.50"></text></g><g><title>v8::internal::Heap::IterateRootsIncludingClients (2 samples, 0.04%)</title><rect x="8.6294%" y="997" width="0.0359%" height="15" fill="rgb(217,217,65)" fg:x="481" fg:w="2"/><text x="8.8794%" y="1007.50"></text></g><g><title>v8::internal::Heap::IterateRoots (2 samples, 0.04%)</title><rect x="8.6294%" y="981" width="0.0359%" height="15" fill="rgb(180,180,52)" fg:x="481" fg:w="2"/><text x="8.8794%" y="991.50"></text></g><g><title>v8::internal::SerializerDeserializer::IterateStartupObjectCache (2 samples, 0.04%)</title><rect x="8.6294%" y="965" width="0.0359%" height="15" fill="rgb(186,186,54)" fg:x="481" fg:w="2"/><text x="8.8794%" y="975.50"></text></g><g><title>v8::internal::MarkCompactCollector::RootMarkingVisitor::VisitRootPointer (2 samples, 0.04%)</title><rect x="8.6294%" y="949" width="0.0359%" height="15" fill="rgb(221,221,67)" fg:x="481" fg:w="2"/><text x="8.8794%" y="959.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkRoots (3 samples, 0.05%)</title><rect x="8.6294%" y="1013" width="0.0538%" height="15" fill="rgb(211,211,63)" fg:x="481" fg:w="3"/><text x="8.8794%" y="1023.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessTopOptimizedFrame (1 samples, 0.02%)</title><rect x="8.6652%" y="997" width="0.0179%" height="15" fill="rgb(210,210,63)" fg:x="483" fg:w="1"/><text x="8.9152%" y="1007.50"></text></g><g><title>v8::internal::StackFrameIterator::Advance (1 samples, 0.02%)</title><rect x="8.6652%" y="981" width="0.0179%" height="15" fill="rgb(223,223,67)" fg:x="483" fg:w="1"/><text x="8.9152%" y="991.50"></text></g><g><title>v8::internal::StackFrame::ComputeType (1 samples, 0.02%)</title><rect x="8.6652%" y="965" width="0.0179%" height="15" fill="rgb(210,210,62)" fg:x="483" fg:w="1"/><text x="8.9152%" y="975.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkLiveObjects (5 samples, 0.09%)</title><rect x="8.6294%" y="1029" width="0.0897%" height="15" fill="rgb(206,206,61)" fg:x="481" fg:w="5"/><text x="8.8794%" y="1039.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkTransitiveClosureUntilFixpoint (2 samples, 0.04%)</title><rect x="8.6832%" y="1013" width="0.0359%" height="15" fill="rgb(195,195,57)" fg:x="484" fg:w="2"/><text x="8.9332%" y="1023.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessEphemerons (2 samples, 0.04%)</title><rect x="8.6832%" y="997" width="0.0359%" height="15" fill="rgb(229,229,69)" fg:x="484" fg:w="2"/><text x="8.9332%" y="1007.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessMarkingWorklist (2 samples, 0.04%)</title><rect x="8.6832%" y="981" width="0.0359%" height="15" fill="rgb(216,216,65)" fg:x="484" fg:w="2"/><text x="8.9332%" y="991.50"></text></g><g><title>v8::internal::MarkingVisitorBase&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;, v8::internal::MarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="8.7011%" y="965" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="485" fg:w="1"/><text x="8.9511%" y="975.50"></text></g><g><title>v8::internal::LogFile::MessageBuilder::operator&lt;&lt; &lt;char const*&gt; (2 samples, 0.04%)</title><rect x="8.7191%" y="965" width="0.0359%" height="15" fill="rgb(215,215,64)" fg:x="486" fg:w="2"/><text x="8.9691%" y="975.50"></text></g><g><title>v8::internal::LogFile::MessageBuilder::AppendString (2 samples, 0.04%)</title><rect x="8.7191%" y="949" width="0.0359%" height="15" fill="rgb(208,208,62)" fg:x="486" fg:w="2"/><text x="8.9691%" y="959.50"></text></g><g><title>std::__1::__put_character_sequence&lt;char, std::__1::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="8.7191%" y="933" width="0.0359%" height="15" fill="rgb(219,219,66)" fg:x="486" fg:w="2"/><text x="8.9691%" y="943.50"></text></g><g><title>std::__1::__pad_and_output&lt;char, std::__1::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="8.7370%" y="917" width="0.0179%" height="15" fill="rgb(190,190,55)" fg:x="487" fg:w="1"/><text x="8.9870%" y="927.50"></text></g><g><title>__GI__IO_fwrite (1 samples, 0.02%)</title><rect x="8.7370%" y="901" width="0.0179%" height="15" fill="rgb(251,125,125)" fg:x="487" fg:w="1"/><text x="8.9870%" y="911.50"></text></g><g><title>v8::internal::MemoryAllocator::Free (3 samples, 0.05%)</title><rect x="8.7191%" y="997" width="0.0538%" height="15" fill="rgb(220,220,66)" fg:x="486" fg:w="3"/><text x="8.9691%" y="1007.50"></text></g><g><title>v8::internal::V8FileLogger::DeleteEvent (3 samples, 0.05%)</title><rect x="8.7191%" y="981" width="0.0538%" height="15" fill="rgb(194,194,56)" fg:x="486" fg:w="3"/><text x="8.9691%" y="991.50"></text></g><g><title>v8::internal::LogFile::MessageBuilder::operator&lt;&lt; &lt;void*&gt; (1 samples, 0.02%)</title><rect x="8.7549%" y="965" width="0.0179%" height="15" fill="rgb(177,177,50)" fg:x="488" fg:w="1"/><text x="9.0049%" y="975.50"></text></g><g><title>std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;::operator&lt;&lt; (1 samples, 0.02%)</title><rect x="8.7549%" y="949" width="0.0179%" height="15" fill="rgb(220,220,66)" fg:x="488" fg:w="1"/><text x="9.0049%" y="959.50"></text></g><g><title>std::__1::num_put&lt;char, std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt;::do_put (1 samples, 0.02%)</title><rect x="8.7549%" y="933" width="0.0179%" height="15" fill="rgb(183,183,53)" fg:x="488" fg:w="1"/><text x="9.0049%" y="943.50"></text></g><g><title>std::__1::__pad_and_output&lt;char, std::__1::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="8.7549%" y="917" width="0.0179%" height="15" fill="rgb(177,177,50)" fg:x="488" fg:w="1"/><text x="9.0049%" y="927.50"></text></g><g><title>v8::internal::MarkCompactCollector::StartSweepSpace (4 samples, 0.07%)</title><rect x="8.7191%" y="1013" width="0.0718%" height="15" fill="rgb(200,200,59)" fg:x="486" fg:w="4"/><text x="8.9691%" y="1023.50"></text></g><g><title>v8::internal::PagedSpaceBase::ReleasePage (1 samples, 0.02%)</title><rect x="8.7729%" y="997" width="0.0179%" height="15" fill="rgb(209,209,62)" fg:x="489" fg:w="1"/><text x="9.0229%" y="1007.50"></text></g><g><title>v8::internal::FreeList::EvictFreeListItems (1 samples, 0.02%)</title><rect x="8.7729%" y="981" width="0.0179%" height="15" fill="rgb(178,178,51)" fg:x="489" fg:w="1"/><text x="9.0229%" y="991.50"></text></g><g><title>v8::internal::MarkCompactCollector::CollectGarbage (15 samples, 0.27%)</title><rect x="8.5396%" y="1045" width="0.2691%" height="15" fill="rgb(200,200,59)" fg:x="476" fg:w="15"/><text x="8.7896%" y="1055.50"></text></g><g><title>v8::internal::MarkCompactCollector::Sweep (5 samples, 0.09%)</title><rect x="8.7191%" y="1029" width="0.0897%" height="15" fill="rgb(207,207,61)" fg:x="486" fg:w="5"/><text x="8.9691%" y="1039.50"></text></g><g><title>v8::internal::MarkCompactCollector::SweepLargeSpace (1 samples, 0.02%)</title><rect x="8.7908%" y="1013" width="0.0179%" height="15" fill="rgb(224,224,67)" fg:x="490" fg:w="1"/><text x="9.0408%" y="1023.50"></text></g><g><title>v8::internal::HeapObject::SizeFromMap (1 samples, 0.02%)</title><rect x="8.7908%" y="997" width="0.0179%" height="15" fill="rgb(194,194,56)" fg:x="490" fg:w="1"/><text x="9.0408%" y="1007.50"></text></g><g><title>v8::internal::PagedSpaceBase::SetCodeModificationPermissions (2 samples, 0.04%)</title><rect x="8.8088%" y="1045" width="0.0359%" height="15" fill="rgb(213,213,63)" fg:x="491" fg:w="2"/><text x="9.0588%" y="1055.50"></text></g><g><title>v8::internal::MemoryChunk::SetCodeModificationPermissions (2 samples, 0.04%)</title><rect x="8.8088%" y="1029" width="0.0359%" height="15" fill="rgb(178,178,51)" fg:x="491" fg:w="2"/><text x="9.0588%" y="1039.50"></text></g><g><title>v8::base::OS::SetPermissions (2 samples, 0.04%)</title><rect x="8.8088%" y="1013" width="0.0359%" height="15" fill="rgb(204,204,60)" fg:x="491" fg:w="2"/><text x="9.0588%" y="1023.50"></text></g><g><title>__GI___mprotect (2 samples, 0.04%)</title><rect x="8.8088%" y="997" width="0.0359%" height="15" fill="rgb(235,100,100)" fg:x="491" fg:w="2"/><text x="9.0588%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="8.8088%" y="981" width="0.0359%" height="15" fill="rgb(242,111,111)" fg:x="491" fg:w="2"/><text x="9.0588%" y="991.50"></text></g><g><title>do_syscall_64 (2 samples, 0.04%)</title><rect x="8.8088%" y="965" width="0.0359%" height="15" fill="rgb(242,112,112)" fg:x="491" fg:w="2"/><text x="9.0588%" y="975.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="8.8267%" y="949" width="0.0179%" height="15" fill="rgb(216,74,74)" fg:x="492" fg:w="1"/><text x="9.0767%" y="959.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="8.8267%" y="933" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="492" fg:w="1"/><text x="9.0767%" y="943.50"></text></g><g><title>mprotect_fixup (1 samples, 0.02%)</title><rect x="8.8267%" y="917" width="0.0179%" height="15" fill="rgb(216,73,73)" fg:x="492" fg:w="1"/><text x="9.0767%" y="927.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="8.8267%" y="901" width="0.0179%" height="15" fill="rgb(245,116,116)" fg:x="492" fg:w="1"/><text x="9.0767%" y="911.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="8.8267%" y="885" width="0.0179%" height="15" fill="rgb(235,101,101)" fg:x="492" fg:w="1"/><text x="9.0767%" y="895.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="8.8267%" y="869" width="0.0179%" height="15" fill="rgb(207,60,60)" fg:x="492" fg:w="1"/><text x="9.0767%" y="879.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="8.8267%" y="853" width="0.0179%" height="15" fill="rgb(245,115,115)" fg:x="492" fg:w="1"/><text x="9.0767%" y="863.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (18 samples, 0.32%)</title><rect x="8.5396%" y="1157" width="0.3229%" height="15" fill="rgb(208,62,62)" fg:x="476" fg:w="18"/><text x="8.7896%" y="1167.50"></text></g><g><title>v8::internal::Runtime_StackGuard (18 samples, 0.32%)</title><rect x="8.5396%" y="1141" width="0.3229%" height="15" fill="rgb(196,196,57)" fg:x="476" fg:w="18"/><text x="8.7896%" y="1151.50"></text></g><g><title>v8::internal::StackGuard::HandleInterrupts (18 samples, 0.32%)</title><rect x="8.5396%" y="1125" width="0.3229%" height="15" fill="rgb(190,190,55)" fg:x="476" fg:w="18"/><text x="8.7896%" y="1135.50"></text></g><g><title>v8::internal::Heap::HandleGCRequest (18 samples, 0.32%)</title><rect x="8.5396%" y="1109" width="0.3229%" height="15" fill="rgb(178,178,51)" fg:x="476" fg:w="18"/><text x="8.7896%" y="1119.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (18 samples, 0.32%)</title><rect x="8.5396%" y="1093" width="0.3229%" height="15" fill="rgb(191,191,55)" fg:x="476" fg:w="18"/><text x="8.7896%" y="1103.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (18 samples, 0.32%)</title><rect x="8.5396%" y="1077" width="0.3229%" height="15" fill="rgb(210,210,62)" fg:x="476" fg:w="18"/><text x="8.7896%" y="1087.50"></text></g><g><title>v8::internal::Heap::MarkCompact (18 samples, 0.32%)</title><rect x="8.5396%" y="1061" width="0.3229%" height="15" fill="rgb(182,182,52)" fg:x="476" fg:w="18"/><text x="8.7896%" y="1071.50"></text></g><g><title>v8::internal::PagedSpaceBase::SetReadAndExecutable (1 samples, 0.02%)</title><rect x="8.8446%" y="1045" width="0.0179%" height="15" fill="rgb(224,224,68)" fg:x="493" fg:w="1"/><text x="9.0946%" y="1055.50"></text></g><g><title>v8::internal::MemoryChunk::SetReadAndExecutable (1 samples, 0.02%)</title><rect x="8.8446%" y="1029" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="493" fg:w="1"/><text x="9.0946%" y="1039.50"></text></g><g><title>v8::base::OS::SetPermissions (1 samples, 0.02%)</title><rect x="8.8446%" y="1013" width="0.0179%" height="15" fill="rgb(193,193,56)" fg:x="493" fg:w="1"/><text x="9.0946%" y="1023.50"></text></g><g><title>__GI___mprotect (1 samples, 0.02%)</title><rect x="8.8446%" y="997" width="0.0179%" height="15" fill="rgb(205,57,57)" fg:x="493" fg:w="1"/><text x="9.0946%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="8.8446%" y="981" width="0.0179%" height="15" fill="rgb(202,53,53)" fg:x="493" fg:w="1"/><text x="9.0946%" y="991.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="8.8446%" y="965" width="0.0179%" height="15" fill="rgb(224,84,84)" fg:x="493" fg:w="1"/><text x="9.0946%" y="975.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="8.8446%" y="949" width="0.0179%" height="15" fill="rgb(206,59,59)" fg:x="493" fg:w="1"/><text x="9.0946%" y="959.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="8.8446%" y="933" width="0.0179%" height="15" fill="rgb(239,107,107)" fg:x="493" fg:w="1"/><text x="9.0946%" y="943.50"></text></g><g><title>mprotect_fixup (1 samples, 0.02%)</title><rect x="8.8446%" y="917" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="493" fg:w="1"/><text x="9.0946%" y="927.50"></text></g><g><title>change_protection (1 samples, 0.02%)</title><rect x="8.8446%" y="901" width="0.0179%" height="15" fill="rgb(251,125,125)" fg:x="493" fg:w="1"/><text x="9.0946%" y="911.50"></text></g><g><title>change_protection_range (1 samples, 0.02%)</title><rect x="8.8446%" y="885" width="0.0179%" height="15" fill="rgb(207,61,61)" fg:x="493" fg:w="1"/><text x="9.0946%" y="895.50"></text></g><g><title>deno_core::bindings::call_console (1 samples, 0.02%)</title><rect x="9.5084%" y="1093" width="0.0179%" height="15" fill="rgb(205,205,61)" fg:x="530" fg:w="1"/><text x="9.7584%" y="1103.50"></text></g><g><title>v8::Function::Call (1 samples, 0.02%)</title><rect x="9.5084%" y="1077" width="0.0179%" height="15" fill="rgb(207,207,61)" fg:x="530" fg:w="1"/><text x="9.7584%" y="1087.50"></text></g><g><title>v8::internal::Execution::Call (1 samples, 0.02%)</title><rect x="9.5084%" y="1061" width="0.0179%" height="15" fill="rgb(191,191,56)" fg:x="530" fg:w="1"/><text x="9.7584%" y="1071.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (1 samples, 0.02%)</title><rect x="9.5084%" y="1045" width="0.0179%" height="15" fill="rgb(193,193,56)" fg:x="530" fg:w="1"/><text x="9.7584%" y="1055.50"></text></g><g><title>Builtins_JSEntry (1 samples, 0.02%)</title><rect x="9.5084%" y="1029" width="0.0179%" height="15" fill="rgb(215,72,72)" fg:x="530" fg:w="1"/><text x="9.7584%" y="1039.50"></text></g><g><title>Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="9.5084%" y="1013" width="0.0179%" height="15" fill="rgb(238,106,106)" fg:x="530" fg:w="1"/><text x="9.7584%" y="1023.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="9.5084%" y="997" width="0.0179%" height="15" fill="rgb(238,105,105)" fg:x="530" fg:w="1"/><text x="9.7584%" y="1007.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="9.5084%" y="981" width="0.0179%" height="15" fill="rgb(239,108,108)" fg:x="530" fg:w="1"/><text x="9.7584%" y="991.50"></text></g><g><title>Builtins_CloneObjectHandler (1 samples, 0.02%)</title><rect x="9.5084%" y="965" width="0.0179%" height="15" fill="rgb(252,126,126)" fg:x="530" fg:w="1"/><text x="9.7584%" y="975.50"></text></g><g><title>Builtins_CloneObjectIC_Slow (1 samples, 0.02%)</title><rect x="9.5084%" y="949" width="0.0179%" height="15" fill="rgb(250,122,122)" fg:x="530" fg:w="1"/><text x="9.7584%" y="959.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="9.5084%" y="933" width="0.0179%" height="15" fill="rgb(210,65,65)" fg:x="530" fg:w="1"/><text x="9.7584%" y="943.50"></text></g><g><title>v8::internal::Runtime_DefineKeyedOwnPropertyInLiteral_Simple (1 samples, 0.02%)</title><rect x="9.5084%" y="917" width="0.0179%" height="15" fill="rgb(213,213,63)" fg:x="530" fg:w="1"/><text x="9.7584%" y="927.50"></text></g><g><title>v8::internal::JSObject::DefineOwnPropertyIgnoreAttributes (1 samples, 0.02%)</title><rect x="9.5084%" y="901" width="0.0179%" height="15" fill="rgb(193,193,56)" fg:x="530" fg:w="1"/><text x="9.7584%" y="911.50"></text></g><g><title>v8::internal::Object::TransitionAndWriteDataProperty (1 samples, 0.02%)</title><rect x="9.5084%" y="885" width="0.0179%" height="15" fill="rgb(191,191,56)" fg:x="530" fg:w="1"/><text x="9.7584%" y="895.50"></text></g><g><title>v8::internal::LookupIterator::PrepareTransitionToDataProperty (1 samples, 0.02%)</title><rect x="9.5084%" y="869" width="0.0179%" height="15" fill="rgb(195,195,57)" fg:x="530" fg:w="1"/><text x="9.7584%" y="879.50"></text></g><g><title>v8::internal::Map::TransitionToDataProperty (1 samples, 0.02%)</title><rect x="9.5084%" y="853" width="0.0179%" height="15" fill="rgb(202,202,59)" fg:x="530" fg:w="1"/><text x="9.7584%" y="863.50"></text></g><g><title>v8::internal::Map::CopyWithField (1 samples, 0.02%)</title><rect x="9.5084%" y="837" width="0.0179%" height="15" fill="rgb(189,189,55)" fg:x="530" fg:w="1"/><text x="9.7584%" y="847.50"></text></g><g><title>v8::internal::Map::CopyAddDescriptor (1 samples, 0.02%)</title><rect x="9.5084%" y="821" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="530" fg:w="1"/><text x="9.7584%" y="831.50"></text></g><g><title>v8::internal::DescriptorArray::CopyUpTo (1 samples, 0.02%)</title><rect x="9.5084%" y="805" width="0.0179%" height="15" fill="rgb(188,188,55)" fg:x="530" fg:w="1"/><text x="9.7584%" y="815.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewDescriptorArray (1 samples, 0.02%)</title><rect x="9.5084%" y="789" width="0.0179%" height="15" fill="rgb(202,202,60)" fg:x="530" fg:w="1"/><text x="9.7584%" y="799.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1 samples, 0.02%)</title><rect x="9.5084%" y="773" width="0.0179%" height="15" fill="rgb(211,211,63)" fg:x="530" fg:w="1"/><text x="9.7584%" y="783.50"></text></g><g><title>v8::array_buffer::BackingStore::byte_length (2 samples, 0.04%)</title><rect x="9.9390%" y="1061" width="0.0359%" height="15" fill="rgb(186,186,54)" fg:x="554" fg:w="2"/><text x="10.1890%" y="1071.50"></text></g><g><title>v8__BackingStore__ByteLength (2 samples, 0.04%)</title><rect x="9.9390%" y="1045" width="0.0359%" height="15" fill="rgb(224,85,85)" fg:x="554" fg:w="2"/><text x="10.1890%" y="1055.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (4 samples, 0.07%)</title><rect x="9.9390%" y="1077" width="0.0718%" height="15" fill="rgb(182,182,52)" fg:x="554" fg:w="4"/><text x="10.1890%" y="1087.50"></text></g><g><title>v8::array_buffer::BackingStore::data (2 samples, 0.04%)</title><rect x="9.9749%" y="1061" width="0.0359%" height="15" fill="rgb(203,203,60)" fg:x="556" fg:w="2"/><text x="10.2249%" y="1071.50"></text></g><g><title>v8__BackingStore__Data (2 samples, 0.04%)</title><rect x="9.9749%" y="1045" width="0.0359%" height="15" fill="rgb(204,57,57)" fg:x="556" fg:w="2"/><text x="10.2249%" y="1055.50"></text></g><g><title>&lt;v8::support::SharedRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.09%)</title><rect x="10.0108%" y="1077" width="0.0897%" height="15" fill="rgb(206,206,61)" fg:x="558" fg:w="5"/><text x="10.2608%" y="1087.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::get (5 samples, 0.09%)</title><rect x="10.0108%" y="1061" width="0.0897%" height="15" fill="rgb(176,176,50)" fg:x="558" fg:w="5"/><text x="10.2608%" y="1071.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (5 samples, 0.09%)</title><rect x="10.0108%" y="1045" width="0.0897%" height="15" fill="rgb(200,50,50)" fg:x="558" fg:w="5"/><text x="10.2608%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.07%)</title><rect x="10.2260%" y="1029" width="0.0718%" height="15" fill="rgb(195,195,57)" fg:x="570" fg:w="4"/><text x="10.4760%" y="1039.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.07%)</title><rect x="10.2260%" y="1013" width="0.0718%" height="15" fill="rgb(201,201,59)" fg:x="570" fg:w="4"/><text x="10.4760%" y="1023.50"></text></g><g><title>core::mem::replace (4 samples, 0.07%)</title><rect x="10.2260%" y="997" width="0.0718%" height="15" fill="rgb(186,186,54)" fg:x="570" fg:w="4"/><text x="10.4760%" y="1007.50"></text></g><g><title>core::ptr::write (4 samples, 0.07%)</title><rect x="10.2260%" y="981" width="0.0718%" height="15" fill="rgb(213,213,63)" fg:x="570" fg:w="4"/><text x="10.4760%" y="991.50"></text></g><g><title>core::cell::is_reading (1 samples, 0.02%)</title><rect x="10.2978%" y="1029" width="0.0179%" height="15" fill="rgb(225,225,68)" fg:x="574" fg:w="1"/><text x="10.5478%" y="1039.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (13 samples, 0.23%)</title><rect x="10.1005%" y="1077" width="0.2332%" height="15" fill="rgb(189,189,55)" fg:x="563" fg:w="13"/><text x="10.3505%" y="1087.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (13 samples, 0.23%)</title><rect x="10.1005%" y="1061" width="0.2332%" height="15" fill="rgb(194,194,57)" fg:x="563" fg:w="13"/><text x="10.3505%" y="1071.50"></text></g><g><title>core::cell::BorrowRef::new (13 samples, 0.23%)</title><rect x="10.1005%" y="1045" width="0.2332%" height="15" fill="rgb(214,214,64)" fg:x="563" fg:w="13"/><text x="10.3505%" y="1055.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="10.3158%" y="1029" width="0.0179%" height="15" fill="rgb(186,186,54)" fg:x="575" fg:w="1"/><text x="10.5658%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;deno_core::ops::OpState&gt;&gt; (8 samples, 0.14%)</title><rect x="10.3337%" y="1077" width="0.1435%" height="15" fill="rgb(205,205,61)" fg:x="576" fg:w="8"/><text x="10.5837%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (8 samples, 0.14%)</title><rect x="10.3337%" y="1061" width="0.1435%" height="15" fill="rgb(220,220,66)" fg:x="576" fg:w="8"/><text x="10.5837%" y="1071.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (8 samples, 0.14%)</title><rect x="10.3337%" y="1045" width="0.1435%" height="15" fill="rgb(208,208,62)" fg:x="576" fg:w="8"/><text x="10.5837%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (8 samples, 0.14%)</title><rect x="10.3337%" y="1029" width="0.1435%" height="15" fill="rgb(180,180,52)" fg:x="576" fg:w="8"/><text x="10.5837%" y="1039.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (8 samples, 0.14%)</title><rect x="10.3337%" y="1013" width="0.1435%" height="15" fill="rgb(177,177,51)" fg:x="576" fg:w="8"/><text x="10.5837%" y="1023.50"></text></g><g><title>core::mem::replace (8 samples, 0.14%)</title><rect x="10.3337%" y="997" width="0.1435%" height="15" fill="rgb(229,229,69)" fg:x="576" fg:w="8"/><text x="10.5837%" y="1007.50"></text></g><g><title>core::ptr::write (8 samples, 0.14%)</title><rect x="10.3337%" y="981" width="0.1435%" height="15" fill="rgb(204,204,60)" fg:x="576" fg:w="8"/><text x="10.5837%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedRef&lt;v8::array_buffer::BackingStore&gt;&gt; (46 samples, 0.83%)</title><rect x="10.4772%" y="1077" width="0.8253%" height="15" fill="rgb(191,191,55)" fg:x="584" fg:w="46"/><text x="10.7272%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedPtrBase&lt;v8::array_buffer::BackingStore&gt;&gt; (46 samples, 0.83%)</title><rect x="10.4772%" y="1061" width="0.8253%" height="15" fill="rgb(205,205,60)" fg:x="584" fg:w="46"/><text x="10.7272%" y="1071.50"></text></g><g><title>&lt;v8::support::SharedPtrBase&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.83%)</title><rect x="10.4772%" y="1045" width="0.8253%" height="15" fill="rgb(198,198,58)" fg:x="584" fg:w="46"/><text x="10.7272%" y="1055.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::reset (46 samples, 0.83%)</title><rect x="10.4772%" y="1029" width="0.8253%" height="15" fill="rgb(199,199,58)" fg:x="584" fg:w="46"/><text x="10.7272%" y="1039.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__reset (46 samples, 0.83%)</title><rect x="10.4772%" y="1013" width="0.8253%" height="15" fill="rgb(224,86,86)" fg:x="584" fg:w="46"/><text x="10.7272%" y="1023.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.11%)</title><rect x="11.3025%" y="1077" width="0.1076%" height="15" fill="rgb(221,221,66)" fg:x="630" fg:w="6"/><text x="11.5525%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.11%)</title><rect x="11.3025%" y="1061" width="0.1076%" height="15" fill="rgb(227,227,68)" fg:x="630" fg:w="6"/><text x="11.5525%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.11%)</title><rect x="11.3025%" y="1045" width="0.1076%" height="15" fill="rgb(209,209,62)" fg:x="630" fg:w="6"/><text x="11.5525%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.11%)</title><rect x="11.3025%" y="1029" width="0.1076%" height="15" fill="rgb(177,177,51)" fg:x="630" fg:w="6"/><text x="11.5525%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (6 samples, 0.11%)</title><rect x="11.3025%" y="1013" width="0.1076%" height="15" fill="rgb(195,195,57)" fg:x="630" fg:w="6"/><text x="11.5525%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;deno_core::ops_metrics::OpMetrics&gt;&gt; (3 samples, 0.05%)</title><rect x="12.2354%" y="1061" width="0.0538%" height="15" fill="rgb(198,198,58)" fg:x="682" fg:w="3"/><text x="12.4854%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (3 samples, 0.05%)</title><rect x="12.2354%" y="1045" width="0.0538%" height="15" fill="rgb(198,198,58)" fg:x="682" fg:w="3"/><text x="12.4854%" y="1055.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="12.2354%" y="1029" width="0.0538%" height="15" fill="rgb(215,215,64)" fg:x="682" fg:w="3"/><text x="12.4854%" y="1039.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.05%)</title><rect x="12.2354%" y="1013" width="0.0538%" height="15" fill="rgb(184,184,53)" fg:x="682" fg:w="3"/><text x="12.4854%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.05%)</title><rect x="12.2354%" y="997" width="0.0538%" height="15" fill="rgb(218,218,65)" fg:x="682" fg:w="3"/><text x="12.4854%" y="1007.50"></text></g><g><title>core::mem::replace (3 samples, 0.05%)</title><rect x="12.2354%" y="981" width="0.0538%" height="15" fill="rgb(217,217,65)" fg:x="682" fg:w="3"/><text x="12.4854%" y="991.50"></text></g><g><title>core::ptr::write (3 samples, 0.05%)</title><rect x="12.2354%" y="965" width="0.0538%" height="15" fill="rgb(208,208,62)" fg:x="682" fg:w="3"/><text x="12.4854%" y="975.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="12.2892%" y="1045" width="0.0179%" height="15" fill="rgb(223,223,67)" fg:x="685" fg:w="1"/><text x="12.5392%" y="1055.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="12.2892%" y="1029" width="0.0179%" height="15" fill="rgb(186,186,54)" fg:x="685" fg:w="1"/><text x="12.5392%" y="1039.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="12.2892%" y="1013" width="0.0179%" height="15" fill="rgb(180,180,52)" fg:x="685" fg:w="1"/><text x="12.5392%" y="1023.50"></text></g><g><title>deno_core::ops_metrics::OpsTracker::track_sync (52 samples, 0.93%)</title><rect x="11.4101%" y="1077" width="0.9329%" height="15" fill="rgb(177,177,50)" fg:x="636" fg:w="52"/><text x="11.6601%" y="1087.50"></text></g><g><title>deno_core::ops_metrics::OpsTracker::metrics_mut (3 samples, 0.05%)</title><rect x="12.2892%" y="1061" width="0.0538%" height="15" fill="rgb(216,216,64)" fg:x="685" fg:w="3"/><text x="12.5392%" y="1071.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (2 samples, 0.04%)</title><rect x="12.3071%" y="1045" width="0.0359%" height="15" fill="rgb(216,216,64)" fg:x="686" fg:w="2"/><text x="12.5571%" y="1055.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (2 samples, 0.04%)</title><rect x="12.3071%" y="1029" width="0.0359%" height="15" fill="rgb(192,192,56)" fg:x="686" fg:w="2"/><text x="12.5571%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::index (4 samples, 0.07%)</title><rect x="12.3430%" y="1061" width="0.0718%" height="15" fill="rgb(216,216,65)" fg:x="688" fg:w="4"/><text x="12.5930%" y="1071.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (4 samples, 0.07%)</title><rect x="12.3430%" y="1045" width="0.0718%" height="15" fill="rgb(196,196,57)" fg:x="688" fg:w="4"/><text x="12.5930%" y="1055.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (4 samples, 0.07%)</title><rect x="12.3430%" y="1029" width="0.0718%" height="15" fill="rgb(224,224,68)" fg:x="688" fg:w="4"/><text x="12.5930%" y="1039.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (4 samples, 0.07%)</title><rect x="12.3430%" y="1013" width="0.0718%" height="15" fill="rgb(185,185,53)" fg:x="688" fg:w="4"/><text x="12.5930%" y="1023.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (4 samples, 0.07%)</title><rect x="12.3430%" y="997" width="0.0718%" height="15" fill="rgb(178,178,51)" fg:x="688" fg:w="4"/><text x="12.5930%" y="1007.50"></text></g><g><title>&lt;core::str::iter::EncodeUtf16 as core::iter::traits::iterator::Iterator&gt;::next (201 samples, 3.61%)</title><rect x="12.4507%" y="1029" width="3.6060%" height="15" fill="rgb(222,222,67)" fg:x="694" fg:w="201"/><text x="12.7007%" y="1039.50">&lt;cor..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (200 samples, 3.59%)</title><rect x="12.4686%" y="1013" width="3.5881%" height="15" fill="rgb(196,196,57)" fg:x="695" fg:w="200"/><text x="12.7186%" y="1023.50">&lt;cor..</text></g><g><title>core::str::validations::next_code_point (200 samples, 3.59%)</title><rect x="12.4686%" y="997" width="3.5881%" height="15" fill="rgb(218,218,65)" fg:x="695" fg:w="200"/><text x="12.7186%" y="1007.50">core..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="16.0208%" y="981" width="0.0359%" height="15" fill="rgb(209,209,62)" fg:x="893" fg:w="2"/><text x="16.2708%" y="991.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="16.0567%" y="1029" width="0.0179%" height="15" fill="rgb(215,72,72)" fg:x="895" fg:w="1"/><text x="16.3067%" y="1039.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="16.0567%" y="1013" width="0.0179%" height="15" fill="rgb(226,88,88)" fg:x="895" fg:w="1"/><text x="16.3067%" y="1023.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="16.0567%" y="997" width="0.0179%" height="15" fill="rgb(228,90,90)" fg:x="895" fg:w="1"/><text x="16.3067%" y="1007.50"></text></g><g><title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="16.0567%" y="981" width="0.0179%" height="15" fill="rgb(206,59,59)" fg:x="895" fg:w="1"/><text x="16.3067%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (381 samples, 6.84%)</title><rect x="12.4148%" y="1061" width="6.8353%" height="15" fill="rgb(197,197,58)" fg:x="692" fg:w="381"/><text x="12.6648%" y="1071.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (381 samples, 6.84%)</title><rect x="12.4148%" y="1045" width="6.8353%" height="15" fill="rgb(225,225,68)" fg:x="692" fg:w="381"/><text x="12.6648%" y="1055.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::count::_{{closure}} (177 samples, 3.18%)</title><rect x="16.0746%" y="1029" width="3.1755%" height="15" fill="rgb(191,191,56)" fg:x="896" fg:w="177"/><text x="16.3246%" y="1039.50">cor..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.61%)</title><rect x="19.2501%" y="997" width="0.6100%" height="15" fill="rgb(209,209,62)" fg:x="1073" fg:w="34"/><text x="19.5001%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.61%)</title><rect x="19.2501%" y="981" width="0.6100%" height="15" fill="rgb(202,202,60)" fg:x="1073" fg:w="34"/><text x="19.5001%" y="991.50"></text></g><g><title>__rdl_dealloc (34 samples, 0.61%)</title><rect x="19.2501%" y="965" width="0.6100%" height="15" fill="rgb(201,51,51)" fg:x="1073" fg:w="34"/><text x="19.5001%" y="975.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (34 samples, 0.61%)</title><rect x="19.2501%" y="949" width="0.6100%" height="15" fill="rgb(213,213,63)" fg:x="1073" fg:w="34"/><text x="19.5001%" y="959.50"></text></g><g><title>__GI___libc_free (34 samples, 0.61%)</title><rect x="19.2501%" y="933" width="0.6100%" height="15" fill="rgb(217,74,74)" fg:x="1073" fg:w="34"/><text x="19.5001%" y="943.50"></text></g><g><title>_int_free (17 samples, 0.30%)</title><rect x="19.5551%" y="917" width="0.3050%" height="15" fill="rgb(228,91,91)" fg:x="1090" fg:w="17"/><text x="19.8051%" y="927.50"></text></g><g><title>tcache_put (4 samples, 0.07%)</title><rect x="19.7883%" y="901" width="0.0718%" height="15" fill="rgb(220,79,79)" fg:x="1103" fg:w="4"/><text x="20.0383%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (35 samples, 0.63%)</title><rect x="19.2501%" y="1061" width="0.6279%" height="15" fill="rgb(175,175,50)" fg:x="1073" fg:w="35"/><text x="19.5001%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (35 samples, 0.63%)</title><rect x="19.2501%" y="1045" width="0.6279%" height="15" fill="rgb(212,212,63)" fg:x="1073" fg:w="35"/><text x="19.5001%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (35 samples, 0.63%)</title><rect x="19.2501%" y="1029" width="0.6279%" height="15" fill="rgb(181,181,52)" fg:x="1073" fg:w="35"/><text x="19.5001%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.63%)</title><rect x="19.2501%" y="1013" width="0.6279%" height="15" fill="rgb(197,197,58)" fg:x="1073" fg:w="35"/><text x="19.5001%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="19.8601%" y="997" width="0.0179%" height="15" fill="rgb(202,202,59)" fg:x="1107" fg:w="1"/><text x="20.1101%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.13%)</title><rect x="19.8780%" y="1061" width="0.1256%" height="15" fill="rgb(175,175,50)" fg:x="1108" fg:w="7"/><text x="20.1280%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.13%)</title><rect x="19.8780%" y="1045" width="0.1256%" height="15" fill="rgb(224,224,68)" fg:x="1108" fg:w="7"/><text x="20.1280%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.13%)</title><rect x="19.8780%" y="1029" width="0.1256%" height="15" fill="rgb(250,123,123)" fg:x="1108" fg:w="7"/><text x="20.1280%" y="1039.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.05%)</title><rect x="20.0036%" y="1061" width="0.0538%" height="15" fill="rgb(195,195,57)" fg:x="1115" fg:w="3"/><text x="20.2536%" y="1071.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.05%)</title><rect x="20.0036%" y="1045" width="0.0538%" height="15" fill="rgb(214,214,64)" fg:x="1115" fg:w="3"/><text x="20.2536%" y="1055.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.05%)</title><rect x="20.0036%" y="1029" width="0.0538%" height="15" fill="rgb(219,219,66)" fg:x="1115" fg:w="3"/><text x="20.2536%" y="1039.50"></text></g><g><title>deno_web::op_encoding_encode_into::call (432 samples, 7.75%)</title><rect x="12.3430%" y="1077" width="7.7503%" height="15" fill="rgb(189,189,55)" fg:x="688" fg:w="432"/><text x="12.5930%" y="1087.50">deno_web::o..</text></g><g><title>core::str::&lt;impl str&gt;::encode_utf16 (2 samples, 0.04%)</title><rect x="20.0574%" y="1061" width="0.0359%" height="15" fill="rgb(193,193,56)" fg:x="1118" fg:w="2"/><text x="20.3074%" y="1071.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.04%)</title><rect x="20.0574%" y="1045" width="0.0359%" height="15" fill="rgb(200,200,59)" fg:x="1118" fg:w="2"/><text x="20.3074%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.04%)</title><rect x="20.0574%" y="1029" width="0.0359%" height="15" fill="rgb(222,222,67)" fg:x="1118" fg:w="2"/><text x="20.3074%" y="1039.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="20.0574%" y="1013" width="0.0359%" height="15" fill="rgb(211,211,63)" fg:x="1118" fg:w="2"/><text x="20.3074%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.04%)</title><rect x="20.0574%" y="997" width="0.0359%" height="15" fill="rgb(202,202,59)" fg:x="1118" fg:w="2"/><text x="20.3074%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.04%)</title><rect x="20.0574%" y="981" width="0.0359%" height="15" fill="rgb(209,209,62)" fg:x="1118" fg:w="2"/><text x="20.3074%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (6 samples, 0.11%)</title><rect x="20.1112%" y="1061" width="0.1076%" height="15" fill="rgb(201,201,59)" fg:x="1121" fg:w="6"/><text x="20.3612%" y="1071.50"></text></g><g><title>v8::scope::data::ScopeData::get_isolate_mut (2 samples, 0.04%)</title><rect x="22.0847%" y="1013" width="0.0359%" height="15" fill="rgb(198,198,58)" fg:x="1231" fg:w="2"/><text x="22.3347%" y="1023.50"></text></g><g><title>&lt;v8::scope::HandleScope&lt;()&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.09%)</title><rect x="22.0847%" y="1045" width="0.0897%" height="15" fill="rgb(217,217,65)" fg:x="1231" fg:w="5"/><text x="22.3347%" y="1055.50"></text></g><g><title>&lt;v8::scope::HandleScope&lt;C&gt; as core::convert::AsMut&lt;v8::isolate::Isolate&gt;&gt;::as_mut (5 samples, 0.09%)</title><rect x="22.0847%" y="1029" width="0.0897%" height="15" fill="rgb(192,192,56)" fg:x="1231" fg:w="5"/><text x="22.3347%" y="1039.50"></text></g><g><title>v8::scope::data::ScopeData::get_mut (3 samples, 0.05%)</title><rect x="22.1206%" y="1013" width="0.0538%" height="15" fill="rgb(191,191,55)" fg:x="1233" fg:w="3"/><text x="22.3706%" y="1023.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (3 samples, 0.05%)</title><rect x="22.1206%" y="997" width="0.0538%" height="15" fill="rgb(197,197,58)" fg:x="1233" fg:w="3"/><text x="22.3706%" y="1007.50"></text></g><g><title>__GI___libc_malloc (57 samples, 1.02%)</title><rect x="22.3000%" y="933" width="1.0226%" height="15" fill="rgb(235,102,102)" fg:x="1243" fg:w="57"/><text x="22.5500%" y="943.50"></text></g><g><title>tcache_get (32 samples, 0.57%)</title><rect x="22.7485%" y="917" width="0.5741%" height="15" fill="rgb(213,69,69)" fg:x="1268" fg:w="32"/><text x="22.9985%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (65 samples, 1.17%)</title><rect x="22.1744%" y="1045" width="1.1661%" height="15" fill="rgb(218,218,65)" fg:x="1236" fg:w="65"/><text x="22.4244%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (65 samples, 1.17%)</title><rect x="22.1744%" y="1029" width="1.1661%" height="15" fill="rgb(215,215,64)" fg:x="1236" fg:w="65"/><text x="22.4244%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62 samples, 1.11%)</title><rect x="22.2282%" y="1013" width="1.1123%" height="15" fill="rgb(192,192,56)" fg:x="1239" fg:w="62"/><text x="22.4782%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (62 samples, 1.11%)</title><rect x="22.2282%" y="997" width="1.1123%" height="15" fill="rgb(223,223,67)" fg:x="1239" fg:w="62"/><text x="22.4782%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 1.04%)</title><rect x="22.3000%" y="981" width="1.0405%" height="15" fill="rgb(222,222,67)" fg:x="1243" fg:w="58"/><text x="22.5500%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 1.04%)</title><rect x="22.3000%" y="965" width="1.0405%" height="15" fill="rgb(198,198,58)" fg:x="1243" fg:w="58"/><text x="22.5500%" y="975.50"></text></g><g><title>alloc::alloc::alloc (58 samples, 1.04%)</title><rect x="22.3000%" y="949" width="1.0405%" height="15" fill="rgb(204,204,60)" fg:x="1243" fg:w="58"/><text x="22.5500%" y="959.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="23.3226%" y="933" width="0.0179%" height="15" fill="rgb(244,114,114)" fg:x="1300" fg:w="1"/><text x="23.5726%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="23.3226%" y="917" width="0.0179%" height="15" fill="rgb(207,207,61)" fg:x="1300" fg:w="1"/><text x="23.5726%" y="927.50"></text></g><g><title>v8::String::Length (3 samples, 0.05%)</title><rect x="23.4302%" y="1029" width="0.0538%" height="15" fill="rgb(226,226,68)" fg:x="1306" fg:w="3"/><text x="23.6802%" y="1039.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::length (11 samples, 0.20%)</title><rect x="23.3405%" y="1045" width="0.1973%" height="15" fill="rgb(202,202,60)" fg:x="1301" fg:w="11"/><text x="23.5905%" y="1055.50"></text></g><g><title>v8__String__Length (3 samples, 0.05%)</title><rect x="23.4840%" y="1029" width="0.0538%" height="15" fill="rgb(254,128,128)" fg:x="1309" fg:w="3"/><text x="23.7340%" y="1039.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (2 samples, 0.04%)</title><rect x="23.6096%" y="1029" width="0.0359%" height="15" fill="rgb(205,205,60)" fg:x="1316" fg:w="2"/><text x="23.8596%" y="1039.50"></text></g><g><title>[deno] (8 samples, 0.14%)</title><rect x="27.4489%" y="1013" width="0.1435%" height="15" fill="rgb(215,73,73)" fg:x="1530" fg:w="8"/><text x="27.6989%" y="1023.50"></text></g><g><title>serde_v8::de::to_utf8 (442 samples, 7.93%)</title><rect x="20.0933%" y="1077" width="7.9297%" height="15" fill="rgb(198,198,58)" fg:x="1120" fg:w="442"/><text x="20.3433%" y="1087.50">serde_v8::d..</text></g><g><title>serde_v8::de::to_utf8_fast (435 samples, 7.80%)</title><rect x="20.2189%" y="1061" width="7.8041%" height="15" fill="rgb(226,226,68)" fg:x="1127" fg:w="435"/><text x="20.4689%" y="1071.50">serde_v8::d..</text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::write_utf8 (250 samples, 4.49%)</title><rect x="23.5379%" y="1045" width="4.4851%" height="15" fill="rgb(215,215,64)" fg:x="1312" fg:w="250"/><text x="23.7879%" y="1055.50">v8::s..</text></g><g><title>v8::String::WriteUtf8 (244 samples, 4.38%)</title><rect x="23.6455%" y="1029" width="4.3775%" height="15" fill="rgb(182,182,52)" fg:x="1318" fg:w="244"/><text x="23.8955%" y="1039.50">v8::S..</text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 0.43%)</title><rect x="27.5924%" y="1013" width="0.4306%" height="15" fill="rgb(241,110,110)" fg:x="1538" fg:w="24"/><text x="27.8424%" y="1023.50"></text></g><g><title>__GI___libc_malloc (40 samples, 0.72%)</title><rect x="29.6914%" y="901" width="0.7176%" height="15" fill="rgb(208,62,62)" fg:x="1655" fg:w="40"/><text x="29.9414%" y="911.50"></text></g><g><title>tcache_get (21 samples, 0.38%)</title><rect x="30.0323%" y="885" width="0.3767%" height="15" fill="rgb(202,53,53)" fg:x="1674" fg:w="21"/><text x="30.2823%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.86%)</title><rect x="29.6376%" y="949" width="0.8611%" height="15" fill="rgb(227,227,69)" fg:x="1652" fg:w="48"/><text x="29.8876%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.86%)</title><rect x="29.6376%" y="933" width="0.8611%" height="15" fill="rgb(203,203,60)" fg:x="1652" fg:w="48"/><text x="29.8876%" y="943.50"></text></g><g><title>alloc::alloc::alloc (48 samples, 0.86%)</title><rect x="29.6376%" y="917" width="0.8611%" height="15" fill="rgb(198,198,58)" fg:x="1652" fg:w="48"/><text x="29.8876%" y="927.50"></text></g><g><title>__rdl_alloc (5 samples, 0.09%)</title><rect x="30.4090%" y="901" width="0.0897%" height="15" fill="rgb(214,70,70)" fg:x="1695" fg:w="5"/><text x="30.6590%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.07%)</title><rect x="30.4270%" y="885" width="0.0718%" height="15" fill="rgb(197,197,58)" fg:x="1696" fg:w="4"/><text x="30.6770%" y="895.50"></text></g><g><title>&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (102 samples, 1.83%)</title><rect x="28.7406%" y="1045" width="1.8299%" height="15" fill="rgb(194,194,57)" fg:x="1602" fg:w="102"/><text x="28.9906%" y="1055.50">&lt;..</text></g><g><title>serde_v8::ser::ObjectSerializer::new (61 samples, 1.09%)</title><rect x="29.4761%" y="1029" width="1.0944%" height="15" fill="rgb(203,203,60)" fg:x="1643" fg:w="61"/><text x="29.7261%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (57 samples, 1.02%)</title><rect x="29.5479%" y="1013" width="1.0226%" height="15" fill="rgb(186,186,54)" fg:x="1647" fg:w="57"/><text x="29.7979%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (57 samples, 1.02%)</title><rect x="29.5479%" y="997" width="1.0226%" height="15" fill="rgb(226,226,68)" fg:x="1647" fg:w="57"/><text x="29.7979%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (54 samples, 0.97%)</title><rect x="29.6017%" y="981" width="0.9688%" height="15" fill="rgb(181,181,52)" fg:x="1650" fg:w="54"/><text x="29.8517%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (54 samples, 0.97%)</title><rect x="29.6017%" y="965" width="0.9688%" height="15" fill="rgb(186,186,54)" fg:x="1650" fg:w="54"/><text x="29.8517%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.07%)</title><rect x="30.4987%" y="949" width="0.0718%" height="15" fill="rgb(213,213,64)" fg:x="1700" fg:w="4"/><text x="30.7487%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3 samples, 0.05%)</title><rect x="30.5167%" y="933" width="0.0538%" height="15" fill="rgb(191,191,55)" fg:x="1701" fg:w="3"/><text x="30.7667%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (3 samples, 0.05%)</title><rect x="30.5167%" y="917" width="0.0538%" height="15" fill="rgb(218,218,65)" fg:x="1701" fg:w="3"/><text x="30.7667%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.04%)</title><rect x="31.6290%" y="1013" width="0.0359%" height="15" fill="rgb(204,204,60)" fg:x="1763" fg:w="2"/><text x="31.8790%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="31.6290%" y="997" width="0.0359%" height="15" fill="rgb(223,223,67)" fg:x="1763" fg:w="2"/><text x="31.8790%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.04%)</title><rect x="31.6290%" y="981" width="0.0359%" height="15" fill="rgb(208,208,62)" fg:x="1763" fg:w="2"/><text x="31.8790%" y="991.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (14 samples, 0.25%)</title><rect x="31.6649%" y="1013" width="0.2512%" height="15" fill="rgb(212,212,63)" fg:x="1765" fg:w="14"/><text x="31.9149%" y="1023.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (14 samples, 0.25%)</title><rect x="31.6649%" y="997" width="0.2512%" height="15" fill="rgb(225,225,68)" fg:x="1765" fg:w="14"/><text x="31.9149%" y="1007.50"></text></g><g><title>core::cell::BorrowRefMut::new (14 samples, 0.25%)</title><rect x="31.6649%" y="981" width="0.2512%" height="15" fill="rgb(202,202,60)" fg:x="1765" fg:w="14"/><text x="31.9149%" y="991.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.8310%" y="853" width="0.0179%" height="15" fill="rgb(202,53,53)" fg:x="1830" fg:w="1"/><text x="33.0810%" y="863.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.8310%" y="837" width="0.0179%" height="15" fill="rgb(217,75,75)" fg:x="1830" fg:w="1"/><text x="33.0810%" y="847.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="32.8310%" y="821" width="0.0179%" height="15" fill="rgb(238,105,105)" fg:x="1830" fg:w="1"/><text x="33.0810%" y="831.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="32.8310%" y="805" width="0.0179%" height="15" fill="rgb(209,63,63)" fg:x="1830" fg:w="1"/><text x="33.0810%" y="815.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="32.8310%" y="789" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="1830" fg:w="1"/><text x="33.0810%" y="799.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="32.8310%" y="773" width="0.0179%" height="15" fill="rgb(204,56,56)" fg:x="1830" fg:w="1"/><text x="33.0810%" y="783.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="32.8310%" y="757" width="0.0179%" height="15" fill="rgb(220,79,79)" fg:x="1830" fg:w="1"/><text x="33.0810%" y="767.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="32.8310%" y="741" width="0.0179%" height="15" fill="rgb(215,72,72)" fg:x="1830" fg:w="1"/><text x="33.0810%" y="751.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="32.8310%" y="725" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="1830" fg:w="1"/><text x="33.0810%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (56 samples, 1.00%)</title><rect x="31.9519%" y="949" width="1.0047%" height="15" fill="rgb(198,198,58)" fg:x="1781" fg:w="56"/><text x="32.2019%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (55 samples, 0.99%)</title><rect x="31.9699%" y="933" width="0.9867%" height="15" fill="rgb(185,185,53)" fg:x="1782" fg:w="55"/><text x="32.2199%" y="943.50"></text></g><g><title>__rdl_dealloc (55 samples, 0.99%)</title><rect x="31.9699%" y="917" width="0.9867%" height="15" fill="rgb(248,120,120)" fg:x="1782" fg:w="55"/><text x="32.2199%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (55 samples, 0.99%)</title><rect x="31.9699%" y="901" width="0.9867%" height="15" fill="rgb(183,183,52)" fg:x="1782" fg:w="55"/><text x="32.2199%" y="911.50"></text></g><g><title>__GI___libc_free (55 samples, 0.99%)</title><rect x="31.9699%" y="885" width="0.9867%" height="15" fill="rgb(207,61,61)" fg:x="1782" fg:w="55"/><text x="32.2199%" y="895.50"></text></g><g><title>_int_free (33 samples, 0.59%)</title><rect x="32.3645%" y="869" width="0.5920%" height="15" fill="rgb(247,119,119)" fg:x="1804" fg:w="33"/><text x="32.6145%" y="879.50"></text></g><g><title>tcache_put (6 samples, 0.11%)</title><rect x="32.8489%" y="853" width="0.1076%" height="15" fill="rgb(205,57,57)" fg:x="1831" fg:w="6"/><text x="33.0989%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;v8::handle::Local&lt;v8::data::Name&gt;&gt;&gt; (59 samples, 1.06%)</title><rect x="31.9160%" y="997" width="1.0585%" height="15" fill="rgb(175,175,50)" fg:x="1779" fg:w="59"/><text x="32.1660%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;v8::handle::Local&lt;v8::data::Name&gt;&gt;&gt; (57 samples, 1.02%)</title><rect x="31.9519%" y="981" width="1.0226%" height="15" fill="rgb(180,180,52)" fg:x="1781" fg:w="57"/><text x="32.2019%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 1.02%)</title><rect x="31.9519%" y="965" width="1.0226%" height="15" fill="rgb(196,196,57)" fg:x="1781" fg:w="57"/><text x="32.2019%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="32.9566%" y="949" width="0.0179%" height="15" fill="rgb(205,205,61)" fg:x="1837" fg:w="1"/><text x="33.2066%" y="959.50"></text></g><g><title>_int_free (16 samples, 0.29%)</title><rect x="33.1180%" y="869" width="0.2870%" height="15" fill="rgb(234,100,100)" fg:x="1846" fg:w="16"/><text x="33.3680%" y="879.50"></text></g><g><title>tcache_put (5 samples, 0.09%)</title><rect x="33.3154%" y="853" width="0.0897%" height="15" fill="rgb(228,90,90)" fg:x="1857" fg:w="5"/><text x="33.5654%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.45%)</title><rect x="32.9745%" y="949" width="0.4485%" height="15" fill="rgb(196,196,57)" fg:x="1838" fg:w="25"/><text x="33.2245%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.45%)</title><rect x="32.9745%" y="933" width="0.4485%" height="15" fill="rgb(214,214,64)" fg:x="1838" fg:w="25"/><text x="33.2245%" y="943.50"></text></g><g><title>__rdl_dealloc (25 samples, 0.45%)</title><rect x="32.9745%" y="917" width="0.4485%" height="15" fill="rgb(215,72,72)" fg:x="1838" fg:w="25"/><text x="33.2245%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (25 samples, 0.45%)</title><rect x="32.9745%" y="901" width="0.4485%" height="15" fill="rgb(198,198,58)" fg:x="1838" fg:w="25"/><text x="33.2245%" y="911.50"></text></g><g><title>__GI___libc_free (24 samples, 0.43%)</title><rect x="32.9925%" y="885" width="0.4306%" height="15" fill="rgb(230,93,93)" fg:x="1839" fg:w="24"/><text x="33.2425%" y="895.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="33.4051%" y="869" width="0.0179%" height="15" fill="rgb(241,110,110)" fg:x="1862" fg:w="1"/><text x="33.6551%" y="879.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.02%)</title><rect x="33.4051%" y="853" width="0.0179%" height="15" fill="rgb(201,52,52)" fg:x="1862" fg:w="1"/><text x="33.6551%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_v8::ser::ObjectSerializer&gt; (85 samples, 1.52%)</title><rect x="31.9160%" y="1013" width="1.5249%" height="15" fill="rgb(186,186,54)" fg:x="1779" fg:w="85"/><text x="32.1660%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt;&gt; (26 samples, 0.47%)</title><rect x="32.9745%" y="997" width="0.4665%" height="15" fill="rgb(226,226,68)" fg:x="1838" fg:w="26"/><text x="33.2245%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt;&gt; (26 samples, 0.47%)</title><rect x="32.9745%" y="981" width="0.4665%" height="15" fill="rgb(200,200,59)" fg:x="1838" fg:w="26"/><text x="33.2245%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.47%)</title><rect x="32.9745%" y="965" width="0.4665%" height="15" fill="rgb(213,213,63)" fg:x="1838" fg:w="26"/><text x="33.2245%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="33.4230%" y="949" width="0.0179%" height="15" fill="rgb(224,224,68)" fg:x="1863" fg:w="1"/><text x="33.6730%" y="959.50"></text></g><g><title>v8::internal::Dictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::SetEntry (58 samples, 1.04%)</title><rect x="39.0384%" y="917" width="1.0405%" height="15" fill="rgb(184,184,53)" fg:x="2176" fg:w="58"/><text x="39.2884%" y="927.50"></text></g><g><title>v8::internal::BaseNameDictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::Add (237 samples, 4.25%)</title><rect x="36.8497%" y="949" width="4.2519%" height="15" fill="rgb(188,188,54)" fg:x="2054" fg:w="237"/><text x="37.0997%" y="959.50">v8::i..</text></g><g><title>v8::internal::Dictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::Add&lt;v8::internal::Isolate&gt; (194 samples, 3.48%)</title><rect x="37.6211%" y="933" width="3.4804%" height="15" fill="rgb(223,223,67)" fg:x="2097" fg:w="194"/><text x="37.8711%" y="943.50">v8:..</text></g><g><title>v8::internal::HashTable&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::EnsureCapacity&lt;v8::internal::Isolate&gt; (57 samples, 1.02%)</title><rect x="40.0789%" y="917" width="1.0226%" height="15" fill="rgb(199,199,58)" fg:x="2234" fg:w="57"/><text x="40.3289%" y="927.50"></text></g><g><title>v8::base::bits::RoundUpToPowerOfTwo32 (6 samples, 0.11%)</title><rect x="41.5142%" y="933" width="0.1076%" height="15" fill="rgb(225,225,68)" fg:x="2314" fg:w="6"/><text x="41.7642%" y="943.50"></text></g><g><title>v8::internal::AllocationCounter::InvokeAllocationObservers (2 samples, 0.04%)</title><rect x="43.5235%" y="901" width="0.0359%" height="15" fill="rgb(200,200,59)" fg:x="2426" fg:w="2"/><text x="43.7735%" y="911.50"></text></g><g><title>v8::internal::IncrementalMarking::Observer::Step (2 samples, 0.04%)</title><rect x="43.5235%" y="885" width="0.0359%" height="15" fill="rgb(192,192,56)" fg:x="2426" fg:w="2"/><text x="43.7735%" y="895.50"></text></g><g><title>v8::internal::IncrementalMarking::AdvanceOnAllocation (2 samples, 0.04%)</title><rect x="43.5235%" y="869" width="0.0359%" height="15" fill="rgb(227,227,68)" fg:x="2426" fg:w="2"/><text x="43.7735%" y="879.50"></text></g><g><title>v8::internal::IncrementalMarking::Step (2 samples, 0.04%)</title><rect x="43.5235%" y="853" width="0.0359%" height="15" fill="rgb(214,214,64)" fg:x="2426" fg:w="2"/><text x="43.7735%" y="863.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessMarkingWorklist (2 samples, 0.04%)</title><rect x="43.5235%" y="837" width="0.0359%" height="15" fill="rgb(196,196,57)" fg:x="2426" fg:w="2"/><text x="43.7735%" y="847.50"></text></g><g><title>v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;::VisitLeftTrimmableArray&lt;v8::internal::FixedArray&gt; (1 samples, 0.02%)</title><rect x="43.5414%" y="821" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="2427" fg:w="1"/><text x="43.7914%" y="831.50"></text></g><g><title>__GI__IO_default_xsputn (1 samples, 0.02%)</title><rect x="43.5953%" y="757" width="0.0179%" height="15" fill="rgb(247,118,118)" fg:x="2430" fg:w="1"/><text x="43.8453%" y="767.50"></text></g><g><title>v8::internal::GCTracer::UpdateStatistics (4 samples, 0.07%)</title><rect x="43.5594%" y="853" width="0.0718%" height="15" fill="rgb(209,209,62)" fg:x="2428" fg:w="4"/><text x="43.8094%" y="863.50"></text></g><g><title>v8::internal::GCTracer::Print (4 samples, 0.07%)</title><rect x="43.5594%" y="837" width="0.0718%" height="15" fill="rgb(201,201,59)" fg:x="2428" fg:w="4"/><text x="43.8094%" y="847.50"></text></g><g><title>v8::internal::GCTracer::Output (4 samples, 0.07%)</title><rect x="43.5594%" y="821" width="0.0718%" height="15" fill="rgb(204,204,60)" fg:x="2428" fg:w="4"/><text x="43.8094%" y="831.50"></text></g><g><title>v8::base::OS::VSNPrintF (4 samples, 0.07%)</title><rect x="43.5594%" y="805" width="0.0718%" height="15" fill="rgb(186,186,54)" fg:x="2428" fg:w="4"/><text x="43.8094%" y="815.50"></text></g><g><title>___vsnprintf_chk (4 samples, 0.07%)</title><rect x="43.5594%" y="789" width="0.0718%" height="15" fill="rgb(244,114,114)" fg:x="2428" fg:w="4"/><text x="43.8094%" y="799.50"></text></g><g><title>_IO_vfprintf_internal (4 samples, 0.07%)</title><rect x="43.5594%" y="773" width="0.0718%" height="15" fill="rgb(200,50,50)" fg:x="2428" fg:w="4"/><text x="43.8094%" y="783.50"></text></g><g><title>__GI___printf_fp_l (1 samples, 0.02%)</title><rect x="43.6132%" y="757" width="0.0179%" height="15" fill="rgb(227,90,90)" fg:x="2431" fg:w="1"/><text x="43.8632%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="43.6850%" y="805" width="0.0179%" height="15" fill="rgb(222,83,83)" fg:x="2435" fg:w="1"/><text x="43.9350%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="43.6850%" y="789" width="0.0179%" height="15" fill="rgb(211,66,66)" fg:x="2435" fg:w="1"/><text x="43.9350%" y="799.50"></text></g><g><title>operator new (3 samples, 0.05%)</title><rect x="43.7029%" y="805" width="0.0538%" height="15" fill="rgb(227,89,89)" fg:x="2436" fg:w="3"/><text x="43.9529%" y="815.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.05%)</title><rect x="43.7029%" y="789" width="0.0538%" height="15" fill="rgb(230,94,94)" fg:x="2436" fg:w="3"/><text x="43.9529%" y="799.50"></text></g><g><title>_int_malloc (3 samples, 0.05%)</title><rect x="43.7029%" y="773" width="0.0538%" height="15" fill="rgb(238,106,106)" fg:x="2436" fg:w="3"/><text x="43.9529%" y="783.50"></text></g><g><title>malloc_consolidate (2 samples, 0.04%)</title><rect x="43.7208%" y="757" width="0.0359%" height="15" fill="rgb(203,54,54)" fg:x="2437" fg:w="2"/><text x="43.9708%" y="767.50"></text></g><g><title>v8::base::TimeTicks::Now (1 samples, 0.02%)</title><rect x="43.7567%" y="805" width="0.0179%" height="15" fill="rgb(227,227,69)" fg:x="2439" fg:w="1"/><text x="44.0067%" y="815.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="43.7567%" y="789" width="0.0179%" height="15" fill="rgb(249,122,122)" fg:x="2439" fg:w="1"/><text x="44.0067%" y="799.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="43.7567%" y="773" width="0.0179%" height="15" fill="rgb(242,111,111)" fg:x="2439" fg:w="1"/><text x="44.0067%" y="783.50"></text></g><g><title>[[vdso]] (1 samples, 0.02%)</title><rect x="43.7567%" y="757" width="0.0179%" height="15" fill="rgb(212,68,68)" fg:x="2439" fg:w="1"/><text x="44.0067%" y="767.50"></text></g><g><title>v8::internal::ExitFrame::Iterate (1 samples, 0.02%)</title><rect x="43.7747%" y="773" width="0.0179%" height="15" fill="rgb(208,208,62)" fg:x="2440" fg:w="1"/><text x="44.0247%" y="783.50"></text></g><g><title>v8::internal::StackFrame::LookupCodeT (1 samples, 0.02%)</title><rect x="43.7747%" y="757" width="0.0179%" height="15" fill="rgb(180,180,51)" fg:x="2440" fg:w="1"/><text x="44.0247%" y="767.50"></text></g><g><title>v8::internal::OffHeapInstructionStream::TryGetAddressForHashing (1 samples, 0.02%)</title><rect x="43.7747%" y="741" width="0.0179%" height="15" fill="rgb(189,189,55)" fg:x="2440" fg:w="1"/><text x="44.0247%" y="751.50"></text></g><g><title>v8::internal::Isolate::embedded_blob_code (1 samples, 0.02%)</title><rect x="43.7747%" y="725" width="0.0179%" height="15" fill="rgb(229,229,69)" fg:x="2440" fg:w="1"/><text x="44.0247%" y="735.50"></text></g><g><title>v8::internal::TurbofanFrame::Iterate (2 samples, 0.04%)</title><rect x="43.7926%" y="773" width="0.0359%" height="15" fill="rgb(227,227,69)" fg:x="2441" fg:w="2"/><text x="44.0426%" y="783.50"></text></g><g><title>v8::internal::OffHeapStackSlots (2 samples, 0.04%)</title><rect x="43.7926%" y="757" width="0.0359%" height="15" fill="rgb(216,216,65)" fg:x="2441" fg:w="2"/><text x="44.0426%" y="767.50"></text></g><g><title>v8::internal::CodeRange::GetProcessWideCodeRange (2 samples, 0.04%)</title><rect x="43.7926%" y="741" width="0.0359%" height="15" fill="rgb(194,194,57)" fg:x="2441" fg:w="2"/><text x="44.0426%" y="751.50"></text></g><g><title>std::__1::__shared_weak_count::lock (2 samples, 0.04%)</title><rect x="43.7926%" y="725" width="0.0359%" height="15" fill="rgb(221,221,67)" fg:x="2441" fg:w="2"/><text x="44.0426%" y="735.50"></text></g><g><title>v8::internal::Isolate::Iterate (4 samples, 0.07%)</title><rect x="43.7747%" y="789" width="0.0718%" height="15" fill="rgb(220,220,66)" fg:x="2440" fg:w="4"/><text x="44.0247%" y="799.50"></text></g><g><title>v8::internal::TypedFrame::Iterate (1 samples, 0.02%)</title><rect x="43.8285%" y="773" width="0.0179%" height="15" fill="rgb(204,204,60)" fg:x="2443" fg:w="1"/><text x="44.0785%" y="783.50"></text></g><g><title>v8::internal::OffHeapStackSlots (1 samples, 0.02%)</title><rect x="43.8285%" y="757" width="0.0179%" height="15" fill="rgb(182,182,52)" fg:x="2443" fg:w="1"/><text x="44.0785%" y="767.50"></text></g><g><title>v8::internal::SerializerDeserializer::IterateSharedHeapObjectCache (10 samples, 0.18%)</title><rect x="43.8464%" y="789" width="0.1794%" height="15" fill="rgb(225,225,68)" fg:x="2444" fg:w="10"/><text x="44.0964%" y="799.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (5 samples, 0.09%)</title><rect x="43.9361%" y="773" width="0.0897%" height="15" fill="rgb(177,177,50)" fg:x="2449" fg:w="5"/><text x="44.1861%" y="783.50"></text></g><g><title>v8::internal::Heap::IterateRoots (20 samples, 0.36%)</title><rect x="43.7747%" y="805" width="0.3588%" height="15" fill="rgb(198,198,58)" fg:x="2440" fg:w="20"/><text x="44.0247%" y="815.50"></text></g><g><title>v8::internal::SerializerDeserializer::IterateStartupObjectCache (6 samples, 0.11%)</title><rect x="44.0258%" y="789" width="0.1076%" height="15" fill="rgb(197,197,58)" fg:x="2454" fg:w="6"/><text x="44.2758%" y="799.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (2 samples, 0.04%)</title><rect x="44.0976%" y="773" width="0.0359%" height="15" fill="rgb(201,201,59)" fg:x="2458" fg:w="2"/><text x="44.3476%" y="783.50"></text></g><g><title>v8::internal::Scavenger::Scavenger (1 samples, 0.02%)</title><rect x="44.1335%" y="805" width="0.0179%" height="15" fill="rgb(220,220,66)" fg:x="2460" fg:w="1"/><text x="44.3835%" y="815.50"></text></g><g><title>v8::internal::CompactionSpaceCollection::CompactionSpaceCollection (1 samples, 0.02%)</title><rect x="44.1335%" y="789" width="0.0179%" height="15" fill="rgb(216,216,64)" fg:x="2460" fg:w="1"/><text x="44.3835%" y="799.50"></text></g><g><title>v8::internal::FreeList::CreateFreeList (1 samples, 0.02%)</title><rect x="44.1335%" y="773" width="0.0179%" height="15" fill="rgb(189,189,55)" fg:x="2460" fg:w="1"/><text x="44.3835%" y="783.50"></text></g><g><title>v8::internal::FreeListManyCached::FreeListManyCached (1 samples, 0.02%)</title><rect x="44.1335%" y="757" width="0.0179%" height="15" fill="rgb(202,202,59)" fg:x="2460" fg:w="1"/><text x="44.3835%" y="767.50"></text></g><g><title>v8::internal::Scavenger::~Scavenger (1 samples, 0.02%)</title><rect x="44.1514%" y="805" width="0.0179%" height="15" fill="rgb(203,203,60)" fg:x="2461" fg:w="1"/><text x="44.4014%" y="815.50"></text></g><g><title>v8::internal::PagedSpace::~PagedSpace (1 samples, 0.02%)</title><rect x="44.1514%" y="789" width="0.0179%" height="15" fill="rgb(203,203,60)" fg:x="2461" fg:w="1"/><text x="44.4014%" y="799.50"></text></g><g><title>v8::internal::ScavengerCollector::ClearYoungEphemerons (1 samples, 0.02%)</title><rect x="44.1694%" y="805" width="0.0179%" height="15" fill="rgb(217,217,65)" fg:x="2462" fg:w="1"/><text x="44.4194%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="44.1694%" y="789" width="0.0179%" height="15" fill="rgb(250,122,122)" fg:x="2462" fg:w="1"/><text x="44.4194%" y="799.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="44.1694%" y="773" width="0.0179%" height="15" fill="rgb(215,72,72)" fg:x="2462" fg:w="1"/><text x="44.4194%" y="783.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (32 samples, 0.57%)</title><rect x="43.6311%" y="853" width="0.5741%" height="15" fill="rgb(228,228,69)" fg:x="2432" fg:w="32"/><text x="43.8811%" y="863.50"></text></g><g><title>v8::internal::Heap::Scavenge (32 samples, 0.57%)</title><rect x="43.6311%" y="837" width="0.5741%" height="15" fill="rgb(207,207,61)" fg:x="2432" fg:w="32"/><text x="43.8811%" y="847.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (32 samples, 0.57%)</title><rect x="43.6311%" y="821" width="0.5741%" height="15" fill="rgb(199,199,58)" fg:x="2432" fg:w="32"/><text x="43.8811%" y="831.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (1 samples, 0.02%)</title><rect x="44.1873%" y="805" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="2463" fg:w="1"/><text x="44.4373%" y="815.50"></text></g><g><title>v8::platform::DefaultJobState::Join (1 samples, 0.02%)</title><rect x="44.1873%" y="789" width="0.0179%" height="15" fill="rgb(199,199,58)" fg:x="2463" fg:w="1"/><text x="44.4373%" y="799.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (1 samples, 0.02%)</title><rect x="44.1873%" y="773" width="0.0179%" height="15" fill="rgb(210,210,62)" fg:x="2463" fg:w="1"/><text x="44.4373%" y="783.50"></text></g><g><title>v8::internal::Scavenger::Process (1 samples, 0.02%)</title><rect x="44.1873%" y="757" width="0.0179%" height="15" fill="rgb(177,177,50)" fg:x="2463" fg:w="1"/><text x="44.4373%" y="767.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (145 samples, 2.60%)</title><rect x="41.6218%" y="933" width="2.6014%" height="15" fill="rgb(207,207,61)" fg:x="2320" fg:w="145"/><text x="41.8718%" y="943.50">v8..</text></g><g><title>v8::internal::Factory::AllocateRaw (69 samples, 1.24%)</title><rect x="42.9853%" y="917" width="1.2379%" height="15" fill="rgb(221,221,66)" fg:x="2396" fg:w="69"/><text x="43.2353%" y="927.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (37 samples, 0.66%)</title><rect x="43.5594%" y="901" width="0.6638%" height="15" fill="rgb(206,206,61)" fg:x="2428" fg:w="37"/><text x="43.8094%" y="911.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (37 samples, 0.66%)</title><rect x="43.5594%" y="885" width="0.6638%" height="15" fill="rgb(198,198,58)" fg:x="2428" fg:w="37"/><text x="43.8094%" y="895.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (37 samples, 0.66%)</title><rect x="43.5594%" y="869" width="0.6638%" height="15" fill="rgb(219,219,66)" fg:x="2428" fg:w="37"/><text x="43.8094%" y="879.50"></text></g><g><title>v8::internal::Heap::StartIncrementalMarking (1 samples, 0.02%)</title><rect x="44.2052%" y="853" width="0.0179%" height="15" fill="rgb(208,208,62)" fg:x="2464" fg:w="1"/><text x="44.4552%" y="863.50"></text></g><g><title>v8::internal::IncrementalMarking::Start (1 samples, 0.02%)</title><rect x="44.2052%" y="837" width="0.0179%" height="15" fill="rgb(226,226,68)" fg:x="2464" fg:w="1"/><text x="44.4552%" y="847.50"></text></g><g><title>v8::internal::IncrementalMarking::StartMarking (1 samples, 0.02%)</title><rect x="44.2052%" y="821" width="0.0179%" height="15" fill="rgb(197,197,58)" fg:x="2464" fg:w="1"/><text x="44.4552%" y="831.50"></text></g><g><title>v8::internal::Heap::IterateRoots (1 samples, 0.02%)</title><rect x="44.2052%" y="805" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="2464" fg:w="1"/><text x="44.4552%" y="815.50"></text></g><g><title>v8::internal::Heap::IterateBuiltins (1 samples, 0.02%)</title><rect x="44.2052%" y="789" width="0.0179%" height="15" fill="rgb(219,219,66)" fg:x="2464" fg:w="1"/><text x="44.4552%" y="799.50"></text></g><g><title>v8::internal::IncrementalMarking::IncrementalMarkingRootMarkingVisitor::VisitRootPointer (1 samples, 0.02%)</title><rect x="44.2052%" y="773" width="0.0179%" height="15" fill="rgb(227,227,68)" fg:x="2464" fg:w="1"/><text x="44.4552%" y="783.50"></text></g><g><title>v8::internal::IncrementalMarking::WhiteToGreyAndPush (1 samples, 0.02%)</title><rect x="44.2052%" y="757" width="0.0179%" height="15" fill="rgb(217,217,65)" fg:x="2464" fg:w="1"/><text x="44.4552%" y="767.50"></text></g><g><title>v8::internal::BaseNameDictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::New&lt;v8::internal::Isolate&gt; (175 samples, 3.14%)</title><rect x="41.1015%" y="949" width="3.1396%" height="15" fill="rgb(177,177,50)" fg:x="2291" fg:w="175"/><text x="41.3515%" y="959.50">v8:..</text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithMap (1 samples, 0.02%)</title><rect x="44.2232%" y="933" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="2465" fg:w="1"/><text x="44.4732%" y="943.50"></text></g><g><title>v8::internal::Factory::AllocateRawWithAllocationSite (3 samples, 0.05%)</title><rect x="44.2411%" y="949" width="0.0538%" height="15" fill="rgb(205,205,60)" fg:x="2466" fg:w="3"/><text x="44.4911%" y="959.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="46.0531%" y="933" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="2567" fg:w="1"/><text x="46.3031%" y="943.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="46.0531%" y="917" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="2567" fg:w="1"/><text x="46.3031%" y="927.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="46.0531%" y="901" width="0.0179%" height="15" fill="rgb(229,92,92)" fg:x="2567" fg:w="1"/><text x="46.3031%" y="911.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="46.0531%" y="885" width="0.0179%" height="15" fill="rgb(247,119,119)" fg:x="2567" fg:w="1"/><text x="46.3031%" y="895.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="46.0531%" y="869" width="0.0179%" height="15" fill="rgb(214,71,71)" fg:x="2567" fg:w="1"/><text x="46.3031%" y="879.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="46.0531%" y="853" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="2567" fg:w="1"/><text x="46.3031%" y="863.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="46.0531%" y="837" width="0.0179%" height="15" fill="rgb(215,72,72)" fg:x="2567" fg:w="1"/><text x="46.3031%" y="847.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="46.0531%" y="821" width="0.0179%" height="15" fill="rgb(237,104,104)" fg:x="2567" fg:w="1"/><text x="46.3031%" y="831.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="46.0531%" y="805" width="0.0179%" height="15" fill="rgb(200,50,50)" fg:x="2567" fg:w="1"/><text x="46.3031%" y="815.50"></text></g><g><title>v8::internal::Factory::AllocateRawWithAllocationSite (45 samples, 0.81%)</title><rect x="46.0710%" y="933" width="0.8073%" height="15" fill="rgb(209,209,62)" fg:x="2568" fg:w="45"/><text x="46.3210%" y="943.50"></text></g><g><title>v8::internal::Factory::InitializeJSObjectBody (6 samples, 0.11%)</title><rect x="46.8784%" y="933" width="0.1076%" height="15" fill="rgb(181,181,52)" fg:x="2613" fg:w="6"/><text x="47.1284%" y="943.50"></text></g><g><title>v8::internal::Factory::InitializeJSObjectFromMap (52 samples, 0.93%)</title><rect x="46.9860%" y="933" width="0.9329%" height="15" fill="rgb(211,211,63)" fg:x="2619" fg:w="52"/><text x="47.2360%" y="943.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="47.9010%" y="917" width="0.0179%" height="15" fill="rgb(218,76,76)" fg:x="2670" fg:w="1"/><text x="48.1510%" y="927.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="47.9010%" y="901" width="0.0179%" height="15" fill="rgb(201,51,51)" fg:x="2670" fg:w="1"/><text x="48.1510%" y="911.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="47.9010%" y="885" width="0.0179%" height="15" fill="rgb(254,128,128)" fg:x="2670" fg:w="1"/><text x="48.1510%" y="895.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="47.9010%" y="869" width="0.0179%" height="15" fill="rgb(249,122,122)" fg:x="2670" fg:w="1"/><text x="48.1510%" y="879.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="47.9010%" y="853" width="0.0179%" height="15" fill="rgb(227,90,90)" fg:x="2670" fg:w="1"/><text x="48.1510%" y="863.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="47.9010%" y="837" width="0.0179%" height="15" fill="rgb(245,116,116)" fg:x="2670" fg:w="1"/><text x="48.1510%" y="847.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="47.9010%" y="821" width="0.0179%" height="15" fill="rgb(254,129,129)" fg:x="2670" fg:w="1"/><text x="48.1510%" y="831.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="47.9010%" y="805" width="0.0179%" height="15" fill="rgb(219,78,78)" fg:x="2670" fg:w="1"/><text x="48.1510%" y="815.50"></text></g><g><title>v8::internal::Map::SetPrototype (4 samples, 0.07%)</title><rect x="47.9189%" y="933" width="0.0718%" height="15" fill="rgb(229,229,69)" fg:x="2671" fg:w="4"/><text x="48.1689%" y="943.50"></text></g><g><title>v8::internal::DescriptorArray::GeneralizeAllFields (8 samples, 0.14%)</title><rect x="49.2106%" y="901" width="0.1435%" height="15" fill="rgb(221,221,66)" fg:x="2743" fg:w="8"/><text x="49.4606%" y="911.50"></text></g><g><title>v8::internal::Factory::NewMap (2 samples, 0.04%)</title><rect x="49.3541%" y="901" width="0.0359%" height="15" fill="rgb(223,223,67)" fg:x="2751" fg:w="2"/><text x="49.6041%" y="911.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="51.8658%" y="869" width="0.0179%" height="15" fill="rgb(230,94,94)" fg:x="2891" fg:w="1"/><text x="52.1158%" y="879.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="51.8658%" y="853" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="2891" fg:w="1"/><text x="52.1158%" y="863.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.09%)</title><rect x="51.9017%" y="789" width="0.0897%" height="15" fill="rgb(225,86,86)" fg:x="2893" fg:w="5"/><text x="52.1517%" y="799.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.09%)</title><rect x="51.9017%" y="773" width="0.0897%" height="15" fill="rgb(202,52,52)" fg:x="2893" fg:w="5"/><text x="52.1517%" y="783.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.09%)</title><rect x="51.9017%" y="757" width="0.0897%" height="15" fill="rgb(251,125,125)" fg:x="2893" fg:w="5"/><text x="52.1517%" y="767.50"></text></g><g><title>prep_new_page (5 samples, 0.09%)</title><rect x="51.9017%" y="741" width="0.0897%" height="15" fill="rgb(247,119,119)" fg:x="2893" fg:w="5"/><text x="52.1517%" y="751.50"></text></g><g><title>clear_page_erms (4 samples, 0.07%)</title><rect x="51.9196%" y="725" width="0.0718%" height="15" fill="rgb(220,79,79)" fg:x="2894" fg:w="4"/><text x="52.1696%" y="735.50"></text></g><g><title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="51.9914%" y="789" width="0.0179%" height="15" fill="rgb(225,87,87)" fg:x="2898" fg:w="1"/><text x="52.2414%" y="799.50"></text></g><g><title>__lru_cache_add (1 samples, 0.02%)</title><rect x="51.9914%" y="773" width="0.0179%" height="15" fill="rgb(250,123,123)" fg:x="2898" fg:w="1"/><text x="52.2414%" y="783.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="51.9914%" y="757" width="0.0179%" height="15" fill="rgb(203,54,54)" fg:x="2898" fg:w="1"/><text x="52.2414%" y="767.50"></text></g><g><title>page_fault (8 samples, 0.14%)</title><rect x="51.8837%" y="869" width="0.1435%" height="15" fill="rgb(214,71,71)" fg:x="2892" fg:w="8"/><text x="52.1337%" y="879.50"></text></g><g><title>do_page_fault (8 samples, 0.14%)</title><rect x="51.8837%" y="853" width="0.1435%" height="15" fill="rgb(241,109,109)" fg:x="2892" fg:w="8"/><text x="52.1337%" y="863.50"></text></g><g><title>__do_page_fault (8 samples, 0.14%)</title><rect x="51.8837%" y="837" width="0.1435%" height="15" fill="rgb(248,120,120)" fg:x="2892" fg:w="8"/><text x="52.1337%" y="847.50"></text></g><g><title>handle_mm_fault (8 samples, 0.14%)</title><rect x="51.8837%" y="821" width="0.1435%" height="15" fill="rgb(249,122,122)" fg:x="2892" fg:w="8"/><text x="52.1337%" y="831.50"></text></g><g><title>__handle_mm_fault (8 samples, 0.14%)</title><rect x="51.8837%" y="805" width="0.1435%" height="15" fill="rgb(207,61,61)" fg:x="2892" fg:w="8"/><text x="52.1337%" y="815.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="52.0093%" y="789" width="0.0179%" height="15" fill="rgb(203,55,55)" fg:x="2899" fg:w="1"/><text x="52.2593%" y="799.50"></text></g><g><title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="52.0093%" y="773" width="0.0179%" height="15" fill="rgb(251,125,125)" fg:x="2899" fg:w="1"/><text x="52.2593%" y="783.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="52.0273%" y="869" width="0.0359%" height="15" fill="rgb(252,126,126)" fg:x="2900" fg:w="2"/><text x="52.2773%" y="879.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="52.0273%" y="853" width="0.0359%" height="15" fill="rgb(239,107,107)" fg:x="2900" fg:w="2"/><text x="52.2773%" y="863.50"></text></g><g><title>error_entry (7 samples, 0.13%)</title><rect x="54.1622%" y="853" width="0.1256%" height="15" fill="rgb(231,96,96)" fg:x="3019" fg:w="7"/><text x="54.4122%" y="863.50"></text></g><g><title>sync_regs (3 samples, 0.05%)</title><rect x="54.2339%" y="837" width="0.0538%" height="15" fill="rgb(213,69,69)" fg:x="3023" fg:w="3"/><text x="54.4839%" y="847.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="54.3236%" y="789" width="0.0179%" height="15" fill="rgb(241,110,110)" fg:x="3028" fg:w="1"/><text x="54.5736%" y="799.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.04%)</title><rect x="54.3775%" y="773" width="0.0359%" height="15" fill="rgb(245,116,116)" fg:x="3031" fg:w="2"/><text x="54.6275%" y="783.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="54.4133%" y="773" width="0.0179%" height="15" fill="rgb(224,85,85)" fg:x="3033" fg:w="1"/><text x="54.6633%" y="783.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="54.4313%" y="741" width="0.0179%" height="15" fill="rgb(245,116,116)" fg:x="3034" fg:w="1"/><text x="54.6813%" y="751.50"></text></g><g><title>get_page_from_freelist (22 samples, 0.39%)</title><rect x="54.4492%" y="741" width="0.3947%" height="15" fill="rgb(254,129,129)" fg:x="3035" fg:w="22"/><text x="54.6992%" y="751.50"></text></g><g><title>prep_new_page (11 samples, 0.20%)</title><rect x="54.6466%" y="725" width="0.1973%" height="15" fill="rgb(208,62,62)" fg:x="3046" fg:w="11"/><text x="54.8966%" y="735.50"></text></g><g><title>clear_page_erms (11 samples, 0.20%)</title><rect x="54.6466%" y="709" width="0.1973%" height="15" fill="rgb(225,87,87)" fg:x="3046" fg:w="11"/><text x="54.8966%" y="719.50"></text></g><g><title>alloc_pages_vma (24 samples, 0.43%)</title><rect x="54.4313%" y="773" width="0.4306%" height="15" fill="rgb(221,81,81)" fg:x="3034" fg:w="24"/><text x="54.6813%" y="783.50"></text></g><g><title>__alloc_pages_nodemask (24 samples, 0.43%)</title><rect x="54.4313%" y="757" width="0.4306%" height="15" fill="rgb(202,53,53)" fg:x="3034" fg:w="24"/><text x="54.6813%" y="767.50"></text></g><g><title>rcu_all_qs (1 samples, 0.02%)</title><rect x="54.8439%" y="741" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="3057" fg:w="1"/><text x="55.0939%" y="751.50"></text></g><g><title>__pagevec_lru_add_fn (2 samples, 0.04%)</title><rect x="54.8798%" y="725" width="0.0359%" height="15" fill="rgb(252,126,126)" fg:x="3059" fg:w="2"/><text x="55.1298%" y="735.50"></text></g><g><title>page_evictable (1 samples, 0.02%)</title><rect x="54.8977%" y="709" width="0.0179%" height="15" fill="rgb(223,83,83)" fg:x="3060" fg:w="1"/><text x="55.1477%" y="719.50"></text></g><g><title>page_mapping (1 samples, 0.02%)</title><rect x="54.8977%" y="693" width="0.0179%" height="15" fill="rgb(254,129,129)" fg:x="3060" fg:w="1"/><text x="55.1477%" y="703.50"></text></g><g><title>mem_cgroup_page_lruvec (1 samples, 0.02%)</title><rect x="54.9157%" y="725" width="0.0179%" height="15" fill="rgb(215,72,72)" fg:x="3061" fg:w="1"/><text x="55.1657%" y="735.50"></text></g><g><title>lru_cache_add_active_or_unevictable (5 samples, 0.09%)</title><rect x="54.8619%" y="773" width="0.0897%" height="15" fill="rgb(232,96,96)" fg:x="3058" fg:w="5"/><text x="55.1119%" y="783.50"></text></g><g><title>__lru_cache_add (4 samples, 0.07%)</title><rect x="54.8798%" y="757" width="0.0718%" height="15" fill="rgb(242,111,111)" fg:x="3059" fg:w="4"/><text x="55.1298%" y="767.50"></text></g><g><title>pagevec_lru_move_fn (4 samples, 0.07%)</title><rect x="54.8798%" y="741" width="0.0718%" height="15" fill="rgb(238,105,105)" fg:x="3059" fg:w="4"/><text x="55.1298%" y="751.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="54.9336%" y="725" width="0.0179%" height="15" fill="rgb(220,79,79)" fg:x="3062" fg:w="1"/><text x="55.1836%" y="735.50"></text></g><g><title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="54.9874%" y="757" width="0.0179%" height="15" fill="rgb(230,93,93)" fg:x="3065" fg:w="1"/><text x="55.2374%" y="767.50"></text></g><g><title>mem_cgroup_try_charge_delay (5 samples, 0.09%)</title><rect x="54.9516%" y="773" width="0.0897%" height="15" fill="rgb(213,69,69)" fg:x="3063" fg:w="5"/><text x="55.2016%" y="783.50"></text></g><g><title>mem_cgroup_try_charge (2 samples, 0.04%)</title><rect x="55.0054%" y="757" width="0.0359%" height="15" fill="rgb(248,120,120)" fg:x="3066" fg:w="2"/><text x="55.2554%" y="767.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="55.0233%" y="741" width="0.0179%" height="15" fill="rgb(214,70,70)" fg:x="3067" fg:w="1"/><text x="55.2733%" y="751.50"></text></g><g><title>handle_mm_fault (42 samples, 0.75%)</title><rect x="54.3057%" y="805" width="0.7535%" height="15" fill="rgb(246,117,117)" fg:x="3027" fg:w="42"/><text x="54.5557%" y="815.50"></text></g><g><title>__handle_mm_fault (40 samples, 0.72%)</title><rect x="54.3416%" y="789" width="0.7176%" height="15" fill="rgb(203,55,55)" fg:x="3029" fg:w="40"/><text x="54.5916%" y="799.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="55.0413%" y="773" width="0.0179%" height="15" fill="rgb(200,51,51)" fg:x="3068" fg:w="1"/><text x="55.2913%" y="783.50"></text></g><g><title>__do_page_fault (44 samples, 0.79%)</title><rect x="54.2878%" y="821" width="0.7894%" height="15" fill="rgb(230,94,94)" fg:x="3026" fg:w="44"/><text x="54.5378%" y="831.50"></text></g><g><title>up_read (1 samples, 0.02%)</title><rect x="55.0592%" y="805" width="0.0179%" height="15" fill="rgb(251,125,125)" fg:x="3069" fg:w="1"/><text x="55.3092%" y="815.50"></text></g><g><title>page_fault (45 samples, 0.81%)</title><rect x="54.2878%" y="853" width="0.8073%" height="15" fill="rgb(211,66,66)" fg:x="3026" fg:w="45"/><text x="54.5378%" y="863.50"></text></g><g><title>do_page_fault (45 samples, 0.81%)</title><rect x="54.2878%" y="837" width="0.8073%" height="15" fill="rgb(243,113,113)" fg:x="3026" fg:w="45"/><text x="54.5378%" y="847.50"></text></g><g><title>_cond_resched (1 samples, 0.02%)</title><rect x="55.0771%" y="821" width="0.0179%" height="15" fill="rgb(252,125,125)" fg:x="3070" fg:w="1"/><text x="55.3271%" y="831.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (14 samples, 0.25%)</title><rect x="55.0951%" y="853" width="0.2512%" height="15" fill="rgb(214,71,71)" fg:x="3071" fg:w="14"/><text x="55.3451%" y="863.50"></text></g><g><title>prepare_exit_to_usermode (10 samples, 0.18%)</title><rect x="55.1668%" y="837" width="0.1794%" height="15" fill="rgb(250,123,123)" fg:x="3075" fg:w="10"/><text x="55.4168%" y="847.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="55.3463%" y="853" width="0.0179%" height="15" fill="rgb(218,77,77)" fg:x="3085" fg:w="1"/><text x="55.5963%" y="863.50"></text></g><g><title>v8::internal::Map::GetVisitorId (33 samples, 0.59%)</title><rect x="55.3642%" y="853" width="0.5920%" height="15" fill="rgb(199,199,58)" fg:x="3086" fg:w="33"/><text x="55.6142%" y="863.50"></text></g><g><title>v8::internal::Factory::InitializeMap (240 samples, 4.31%)</title><rect x="52.0632%" y="869" width="4.3057%" height="15" fill="rgb(222,222,67)" fg:x="2902" fg:w="240"/><text x="52.3132%" y="879.50">v8::i..</text></g><g><title>v8::internal::Map::SetInstanceDescriptors (23 samples, 0.41%)</title><rect x="55.9562%" y="853" width="0.4126%" height="15" fill="rgb(198,198,58)" fg:x="3119" fg:w="23"/><text x="56.2062%" y="863.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.02%)</title><rect x="56.3689%" y="869" width="0.0179%" height="15" fill="rgb(196,196,57)" fg:x="3142" fg:w="1"/><text x="56.6189%" y="879.50"></text></g><g><title>v8::internal::Heap::IterateBuiltins (1 samples, 0.02%)</title><rect x="57.4453%" y="757" width="0.0179%" height="15" fill="rgb(217,217,65)" fg:x="3202" fg:w="1"/><text x="57.6953%" y="767.50"></text></g><g><title>v8::internal::IncrementalMarking::IncrementalMarkingRootMarkingVisitor::VisitRootPointer (1 samples, 0.02%)</title><rect x="57.4453%" y="741" width="0.0179%" height="15" fill="rgb(192,192,56)" fg:x="3202" fg:w="1"/><text x="57.6953%" y="751.50"></text></g><g><title>v8::internal::IncrementalMarking::WhiteToGreyAndPush (1 samples, 0.02%)</title><rect x="57.4453%" y="725" width="0.0179%" height="15" fill="rgb(190,190,55)" fg:x="3202" fg:w="1"/><text x="57.6953%" y="735.50"></text></g><g><title>v8::internal::IncrementalMarking::IncrementalMarkingRootMarkingVisitor::VisitRootPointers (1 samples, 0.02%)</title><rect x="57.4632%" y="757" width="0.0179%" height="15" fill="rgb(194,194,57)" fg:x="3203" fg:w="1"/><text x="57.7132%" y="767.50"></text></g><g><title>v8::internal::IncrementalMarking::WhiteToGreyAndPush (1 samples, 0.02%)</title><rect x="57.4632%" y="741" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="3203" fg:w="1"/><text x="57.7132%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="57.4632%" y="725" width="0.0179%" height="15" fill="rgb(200,51,51)" fg:x="3203" fg:w="1"/><text x="57.7132%" y="735.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="57.4632%" y="709" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="3203" fg:w="1"/><text x="57.7132%" y="719.50"></text></g><g><title>v8::internal::PagedSpaceBase::EnsureAllocation (4 samples, 0.07%)</title><rect x="57.4453%" y="837" width="0.0718%" height="15" fill="rgb(201,201,59)" fg:x="3202" fg:w="4"/><text x="57.6953%" y="847.50"></text></g><g><title>v8::internal::Heap::StartIncrementalMarking (4 samples, 0.07%)</title><rect x="57.4453%" y="821" width="0.0718%" height="15" fill="rgb(188,188,54)" fg:x="3202" fg:w="4"/><text x="57.6953%" y="831.50"></text></g><g><title>v8::internal::IncrementalMarking::Start (4 samples, 0.07%)</title><rect x="57.4453%" y="805" width="0.0718%" height="15" fill="rgb(186,186,54)" fg:x="3202" fg:w="4"/><text x="57.6953%" y="815.50"></text></g><g><title>v8::internal::IncrementalMarking::StartMarking (4 samples, 0.07%)</title><rect x="57.4453%" y="789" width="0.0718%" height="15" fill="rgb(179,179,51)" fg:x="3202" fg:w="4"/><text x="57.6953%" y="799.50"></text></g><g><title>v8::internal::Heap::IterateRoots (4 samples, 0.07%)</title><rect x="57.4453%" y="773" width="0.0718%" height="15" fill="rgb(223,223,67)" fg:x="3202" fg:w="4"/><text x="57.6953%" y="783.50"></text></g><g><title>v8::internal::SerializerDeserializer::IterateSharedHeapObjectCache (2 samples, 0.04%)</title><rect x="57.4812%" y="757" width="0.0359%" height="15" fill="rgb(209,209,62)" fg:x="3204" fg:w="2"/><text x="57.7312%" y="767.50"></text></g><g><title>v8::internal::IncrementalMarking::IncrementalMarkingRootMarkingVisitor::VisitRootPointer (1 samples, 0.02%)</title><rect x="57.4991%" y="741" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="3205" fg:w="1"/><text x="57.7491%" y="751.50"></text></g><g><title>v8::internal::IncrementalMarking::WhiteToGreyAndPush (1 samples, 0.02%)</title><rect x="57.4991%" y="725" width="0.0179%" height="15" fill="rgb(195,195,57)" fg:x="3205" fg:w="1"/><text x="57.7491%" y="735.50"></text></g><g><title>v8::internal::PagedSpaceBase::TryAllocationFromFreeListMain (1 samples, 0.02%)</title><rect x="57.5350%" y="805" width="0.0179%" height="15" fill="rgb(196,196,57)" fg:x="3207" fg:w="1"/><text x="57.7850%" y="815.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="57.5350%" y="789" width="0.0179%" height="15" fill="rgb(200,51,51)" fg:x="3207" fg:w="1"/><text x="57.7850%" y="799.50"></text></g><g><title>change_protection (1 samples, 0.02%)</title><rect x="57.5709%" y="629" width="0.0179%" height="15" fill="rgb(253,127,127)" fg:x="3209" fg:w="1"/><text x="57.8209%" y="639.50"></text></g><g><title>change_protection_range (1 samples, 0.02%)</title><rect x="57.5709%" y="613" width="0.0179%" height="15" fill="rgb(229,93,93)" fg:x="3209" fg:w="1"/><text x="57.8209%" y="623.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="57.5888%" y="629" width="0.0179%" height="15" fill="rgb(240,109,109)" fg:x="3210" fg:w="1"/><text x="57.8388%" y="639.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="57.5888%" y="613" width="0.0179%" height="15" fill="rgb(211,66,66)" fg:x="3210" fg:w="1"/><text x="57.8388%" y="623.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="57.5888%" y="597" width="0.0179%" height="15" fill="rgb(251,124,124)" fg:x="3210" fg:w="1"/><text x="57.8388%" y="607.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocateAlignedMemory (3 samples, 0.05%)</title><rect x="57.5709%" y="757" width="0.0538%" height="15" fill="rgb(209,209,62)" fg:x="3209" fg:w="3"/><text x="57.8209%" y="767.50"></text></g><g><title>v8::base::OS::SetPermissions (3 samples, 0.05%)</title><rect x="57.5709%" y="741" width="0.0538%" height="15" fill="rgb(195,195,57)" fg:x="3209" fg:w="3"/><text x="57.8209%" y="751.50"></text></g><g><title>__GI___mprotect (3 samples, 0.05%)</title><rect x="57.5709%" y="725" width="0.0538%" height="15" fill="rgb(204,57,57)" fg:x="3209" fg:w="3"/><text x="57.8209%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="57.5709%" y="709" width="0.0538%" height="15" fill="rgb(221,81,81)" fg:x="3209" fg:w="3"/><text x="57.8209%" y="719.50"></text></g><g><title>do_syscall_64 (3 samples, 0.05%)</title><rect x="57.5709%" y="693" width="0.0538%" height="15" fill="rgb(203,54,54)" fg:x="3209" fg:w="3"/><text x="57.8209%" y="703.50"></text></g><g><title>__x64_sys_mprotect (3 samples, 0.05%)</title><rect x="57.5709%" y="677" width="0.0538%" height="15" fill="rgb(216,73,73)" fg:x="3209" fg:w="3"/><text x="57.8209%" y="687.50"></text></g><g><title>do_mprotect_pkey (3 samples, 0.05%)</title><rect x="57.5709%" y="661" width="0.0538%" height="15" fill="rgb(209,64,64)" fg:x="3209" fg:w="3"/><text x="57.8209%" y="671.50"></text></g><g><title>mprotect_fixup (3 samples, 0.05%)</title><rect x="57.5709%" y="645" width="0.0538%" height="15" fill="rgb(237,104,104)" fg:x="3209" fg:w="3"/><text x="57.8209%" y="655.50"></text></g><g><title>vm_pgprot_modify (1 samples, 0.02%)</title><rect x="57.6067%" y="629" width="0.0179%" height="15" fill="rgb(222,82,82)" fg:x="3211" fg:w="1"/><text x="57.8567%" y="639.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="57.6606%" y="517" width="0.0179%" height="15" fill="rgb(227,89,89)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="527.50"></text></g><g><title>fsnotify (1 samples, 0.02%)</title><rect x="57.6606%" y="501" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="511.50"></text></g><g><title>inotify_handle_event (1 samples, 0.02%)</title><rect x="57.6606%" y="485" width="0.0179%" height="15" fill="rgb(224,85,85)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="495.50"></text></g><g><title>fsnotify_add_event (1 samples, 0.02%)</title><rect x="57.6606%" y="469" width="0.0179%" height="15" fill="rgb(207,60,60)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="479.50"></text></g><g><title>__wake_up (1 samples, 0.02%)</title><rect x="57.6606%" y="453" width="0.0179%" height="15" fill="rgb(216,73,73)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="463.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="57.6606%" y="437" width="0.0179%" height="15" fill="rgb(202,53,53)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="447.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="57.6606%" y="421" width="0.0179%" height="15" fill="rgb(248,121,121)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="431.50"></text></g><g><title>pollwake (1 samples, 0.02%)</title><rect x="57.6606%" y="405" width="0.0179%" height="15" fill="rgb(236,103,103)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="415.50"></text></g><g><title>default_wake_function (1 samples, 0.02%)</title><rect x="57.6606%" y="389" width="0.0179%" height="15" fill="rgb(202,53,53)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="399.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="57.6606%" y="373" width="0.0179%" height="15" fill="rgb(250,123,123)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="383.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="57.6606%" y="357" width="0.0179%" height="15" fill="rgb(254,129,129)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="367.50"></text></g><g><title>activate_task (1 samples, 0.02%)</title><rect x="57.6606%" y="341" width="0.0179%" height="15" fill="rgb(222,82,82)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="351.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="57.6606%" y="325" width="0.0179%" height="15" fill="rgb(202,52,52)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="335.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="57.6606%" y="309" width="0.0179%" height="15" fill="rgb(250,123,123)" fg:x="3214" fg:w="1"/><text x="57.9106%" y="319.50"></text></g><g><title>current_time (1 samples, 0.02%)</title><rect x="57.6964%" y="437" width="0.0179%" height="15" fill="rgb(236,102,102)" fg:x="3216" fg:w="1"/><text x="57.9464%" y="447.50"></text></g><g><title>timestamp_truncate (1 samples, 0.02%)</title><rect x="57.6964%" y="421" width="0.0179%" height="15" fill="rgb(240,108,108)" fg:x="3216" fg:w="1"/><text x="57.9464%" y="431.50"></text></g><g><title>file_update_time (3 samples, 0.05%)</title><rect x="57.6964%" y="453" width="0.0538%" height="15" fill="rgb(230,94,94)" fg:x="3216" fg:w="3"/><text x="57.9464%" y="463.50"></text></g><g><title>generic_update_time (2 samples, 0.04%)</title><rect x="57.7144%" y="437" width="0.0359%" height="15" fill="rgb(218,77,77)" fg:x="3217" fg:w="2"/><text x="57.9644%" y="447.50"></text></g><g><title>__mark_inode_dirty (2 samples, 0.04%)</title><rect x="57.7144%" y="421" width="0.0359%" height="15" fill="rgb(244,115,115)" fg:x="3217" fg:w="2"/><text x="57.9644%" y="431.50"></text></g><g><title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="57.7323%" y="405" width="0.0179%" height="15" fill="rgb(228,91,91)" fg:x="3218" fg:w="1"/><text x="57.9823%" y="415.50"></text></g><g><title>ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="57.7323%" y="389" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="3218" fg:w="1"/><text x="57.9823%" y="399.50"></text></g><g><title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="57.7323%" y="373" width="0.0179%" height="15" fill="rgb(247,119,119)" fg:x="3218" fg:w="1"/><text x="57.9823%" y="383.50"></text></g><g><title>ext4_do_update_inode (1 samples, 0.02%)</title><rect x="57.7323%" y="357" width="0.0179%" height="15" fill="rgb(218,76,76)" fg:x="3218" fg:w="1"/><text x="57.9823%" y="367.50"></text></g><g><title>__ext4_handle_dirty_metadata (1 samples, 0.02%)</title><rect x="57.7323%" y="341" width="0.0179%" height="15" fill="rgb(205,57,57)" fg:x="3218" fg:w="1"/><text x="57.9823%" y="351.50"></text></g><g><title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="57.7503%" y="437" width="0.0179%" height="15" fill="rgb(253,127,127)" fg:x="3219" fg:w="1"/><text x="58.0003%" y="447.50"></text></g><g><title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="57.7503%" y="421" width="0.0179%" height="15" fill="rgb(210,65,65)" fg:x="3219" fg:w="1"/><text x="58.0003%" y="431.50"></text></g><g><title>wait_for_stable_page (1 samples, 0.02%)</title><rect x="57.7503%" y="405" width="0.0179%" height="15" fill="rgb(208,61,61)" fg:x="3219" fg:w="1"/><text x="58.0003%" y="415.50"></text></g><g><title>__x64_sys_write (7 samples, 0.13%)</title><rect x="57.6606%" y="565" width="0.1256%" height="15" fill="rgb(201,52,52)" fg:x="3214" fg:w="7"/><text x="57.9106%" y="575.50"></text></g><g><title>ksys_write (7 samples, 0.13%)</title><rect x="57.6606%" y="549" width="0.1256%" height="15" fill="rgb(205,58,58)" fg:x="3214" fg:w="7"/><text x="57.9106%" y="559.50"></text></g><g><title>vfs_write (7 samples, 0.13%)</title><rect x="57.6606%" y="533" width="0.1256%" height="15" fill="rgb(244,114,114)" fg:x="3214" fg:w="7"/><text x="57.9106%" y="543.50"></text></g><g><title>__vfs_write (6 samples, 0.11%)</title><rect x="57.6785%" y="517" width="0.1076%" height="15" fill="rgb(241,110,110)" fg:x="3215" fg:w="6"/><text x="57.9285%" y="527.50"></text></g><g><title>new_sync_write (6 samples, 0.11%)</title><rect x="57.6785%" y="501" width="0.1076%" height="15" fill="rgb(245,116,116)" fg:x="3215" fg:w="6"/><text x="57.9285%" y="511.50"></text></g><g><title>ext4_file_write_iter (6 samples, 0.11%)</title><rect x="57.6785%" y="485" width="0.1076%" height="15" fill="rgb(232,96,96)" fg:x="3215" fg:w="6"/><text x="57.9285%" y="495.50"></text></g><g><title>__generic_file_write_iter (6 samples, 0.11%)</title><rect x="57.6785%" y="469" width="0.1076%" height="15" fill="rgb(254,128,128)" fg:x="3215" fg:w="6"/><text x="57.9285%" y="479.50"></text></g><g><title>generic_perform_write (2 samples, 0.04%)</title><rect x="57.7503%" y="453" width="0.0359%" height="15" fill="rgb(226,88,88)" fg:x="3219" fg:w="2"/><text x="58.0003%" y="463.50"></text></g><g><title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="57.7682%" y="437" width="0.0179%" height="15" fill="rgb(209,64,64)" fg:x="3220" fg:w="1"/><text x="58.0182%" y="447.50"></text></g><g><title>generic_write_end (1 samples, 0.02%)</title><rect x="57.7682%" y="421" width="0.0179%" height="15" fill="rgb(225,87,87)" fg:x="3220" fg:w="1"/><text x="58.0182%" y="431.50"></text></g><g><title>block_write_end (1 samples, 0.02%)</title><rect x="57.7682%" y="405" width="0.0179%" height="15" fill="rgb(222,82,82)" fg:x="3220" fg:w="1"/><text x="58.0182%" y="415.50"></text></g><g><title>__block_commit_write.isra.41 (1 samples, 0.02%)</title><rect x="57.7682%" y="389" width="0.0179%" height="15" fill="rgb(250,124,124)" fg:x="3220" fg:w="1"/><text x="58.0182%" y="399.50"></text></g><g><title>mark_buffer_dirty (1 samples, 0.02%)</title><rect x="57.7682%" y="373" width="0.0179%" height="15" fill="rgb(202,53,53)" fg:x="3220" fg:w="1"/><text x="58.0182%" y="383.50"></text></g><g><title>v8::internal::LogFile::MessageBuilder::WriteToLogFile (10 samples, 0.18%)</title><rect x="57.6247%" y="741" width="0.1794%" height="15" fill="rgb(216,216,65)" fg:x="3212" fg:w="10"/><text x="57.8747%" y="751.50"></text></g><g><title>std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;::flush (10 samples, 0.18%)</title><rect x="57.6247%" y="725" width="0.1794%" height="15" fill="rgb(197,197,58)" fg:x="3212" fg:w="10"/><text x="57.8747%" y="735.50"></text></g><g><title>v8::internal::OFStreamBase::sync (10 samples, 0.18%)</title><rect x="57.6247%" y="709" width="0.1794%" height="15" fill="rgb(225,225,68)" fg:x="3212" fg:w="10"/><text x="57.8747%" y="719.50"></text></g><g><title>__GI__IO_fflush (10 samples, 0.18%)</title><rect x="57.6247%" y="693" width="0.1794%" height="15" fill="rgb(201,52,52)" fg:x="3212" fg:w="10"/><text x="57.8747%" y="703.50"></text></g><g><title>_IO_new_file_sync (10 samples, 0.18%)</title><rect x="57.6247%" y="677" width="0.1794%" height="15" fill="rgb(253,128,128)" fg:x="3212" fg:w="10"/><text x="57.8747%" y="687.50"></text></g><g><title>_IO_new_do_write (10 samples, 0.18%)</title><rect x="57.6247%" y="661" width="0.1794%" height="15" fill="rgb(230,94,94)" fg:x="3212" fg:w="10"/><text x="57.8747%" y="671.50"></text></g><g><title>new_do_write (9 samples, 0.16%)</title><rect x="57.6426%" y="645" width="0.1615%" height="15" fill="rgb(224,85,85)" fg:x="3213" fg:w="9"/><text x="57.8926%" y="655.50"></text></g><g><title>_IO_new_file_write (9 samples, 0.16%)</title><rect x="57.6426%" y="629" width="0.1615%" height="15" fill="rgb(200,50,50)" fg:x="3213" fg:w="9"/><text x="57.8926%" y="639.50"></text></g><g><title>__GI___libc_write (9 samples, 0.16%)</title><rect x="57.6426%" y="613" width="0.1615%" height="15" fill="rgb(239,106,106)" fg:x="3213" fg:w="9"/><text x="57.8926%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.16%)</title><rect x="57.6426%" y="597" width="0.1615%" height="15" fill="rgb(250,124,124)" fg:x="3213" fg:w="9"/><text x="57.8926%" y="607.50"></text></g><g><title>do_syscall_64 (9 samples, 0.16%)</title><rect x="57.6426%" y="581" width="0.1615%" height="15" fill="rgb(204,57,57)" fg:x="3213" fg:w="9"/><text x="57.8926%" y="591.50"></text></g><g><title>ksys_write (1 samples, 0.02%)</title><rect x="57.7861%" y="565" width="0.0179%" height="15" fill="rgb(239,107,107)" fg:x="3221" fg:w="1"/><text x="58.0361%" y="575.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocateUninitializedChunk (15 samples, 0.27%)</title><rect x="57.5529%" y="773" width="0.2691%" height="15" fill="rgb(201,201,59)" fg:x="3208" fg:w="15"/><text x="57.8029%" y="783.50"></text></g><g><title>v8::internal::V8FileLogger::NewEvent (11 samples, 0.20%)</title><rect x="57.6247%" y="757" width="0.1973%" height="15" fill="rgb(180,180,52)" fg:x="3212" fg:w="11"/><text x="57.8747%" y="767.50"></text></g><g><title>v8::internal::LogFile::MessageBuilder::operator&lt;&lt; &lt;void*&gt; (1 samples, 0.02%)</title><rect x="57.8041%" y="741" width="0.0179%" height="15" fill="rgb(186,186,54)" fg:x="3222" fg:w="1"/><text x="58.0541%" y="751.50"></text></g><g><title>std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;::operator&lt;&lt; (1 samples, 0.02%)</title><rect x="57.8041%" y="725" width="0.0179%" height="15" fill="rgb(183,183,53)" fg:x="3222" fg:w="1"/><text x="58.0541%" y="735.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="57.8400%" y="645" width="0.0179%" height="15" fill="rgb(229,93,93)" fg:x="3224" fg:w="1"/><text x="58.0900%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="57.8400%" y="629" width="0.0179%" height="15" fill="rgb(252,125,125)" fg:x="3224" fg:w="1"/><text x="58.0900%" y="639.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="57.8400%" y="613" width="0.0179%" height="15" fill="rgb(201,51,51)" fg:x="3224" fg:w="1"/><text x="58.0900%" y="623.50"></text></g><g><title>prep_new_page (1 samples, 0.02%)</title><rect x="57.8400%" y="597" width="0.0179%" height="15" fill="rgb(220,79,79)" fg:x="3224" fg:w="1"/><text x="58.0900%" y="607.50"></text></g><g><title>clear_page_erms (1 samples, 0.02%)</title><rect x="57.8400%" y="581" width="0.0179%" height="15" fill="rgb(236,103,103)" fg:x="3224" fg:w="1"/><text x="58.0900%" y="591.50"></text></g><g><title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="57.8579%" y="645" width="0.0179%" height="15" fill="rgb(238,105,105)" fg:x="3225" fg:w="1"/><text x="58.1079%" y="655.50"></text></g><g><title>__lru_cache_add (1 samples, 0.02%)</title><rect x="57.8579%" y="629" width="0.0179%" height="15" fill="rgb(208,61,61)" fg:x="3225" fg:w="1"/><text x="58.1079%" y="639.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="57.8579%" y="613" width="0.0179%" height="15" fill="rgb(223,83,83)" fg:x="3225" fg:w="1"/><text x="58.1079%" y="623.50"></text></g><g><title>v8::internal::Page::Page (4 samples, 0.07%)</title><rect x="57.8220%" y="773" width="0.0718%" height="15" fill="rgb(191,191,56)" fg:x="3223" fg:w="4"/><text x="58.0720%" y="783.50"></text></g><g><title>v8::internal::MemoryChunk::MemoryChunk (4 samples, 0.07%)</title><rect x="57.8220%" y="757" width="0.0718%" height="15" fill="rgb(212,212,63)" fg:x="3223" fg:w="4"/><text x="58.0720%" y="767.50"></text></g><g><title>__memset_avx2_erms (4 samples, 0.07%)</title><rect x="57.8220%" y="741" width="0.0718%" height="15" fill="rgb(244,114,114)" fg:x="3223" fg:w="4"/><text x="58.0720%" y="751.50"></text></g><g><title>page_fault (3 samples, 0.05%)</title><rect x="57.8400%" y="725" width="0.0538%" height="15" fill="rgb(242,111,111)" fg:x="3224" fg:w="3"/><text x="58.0900%" y="735.50"></text></g><g><title>do_page_fault (3 samples, 0.05%)</title><rect x="57.8400%" y="709" width="0.0538%" height="15" fill="rgb(242,112,112)" fg:x="3224" fg:w="3"/><text x="58.0900%" y="719.50"></text></g><g><title>__do_page_fault (3 samples, 0.05%)</title><rect x="57.8400%" y="693" width="0.0538%" height="15" fill="rgb(210,65,65)" fg:x="3224" fg:w="3"/><text x="58.0900%" y="703.50"></text></g><g><title>handle_mm_fault (3 samples, 0.05%)</title><rect x="57.8400%" y="677" width="0.0538%" height="15" fill="rgb(242,111,111)" fg:x="3224" fg:w="3"/><text x="58.0900%" y="687.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="57.8400%" y="661" width="0.0538%" height="15" fill="rgb(225,86,86)" fg:x="3224" fg:w="3"/><text x="58.0900%" y="671.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="57.8759%" y="645" width="0.0179%" height="15" fill="rgb(243,113,113)" fg:x="3226" fg:w="1"/><text x="58.1259%" y="655.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="57.8759%" y="629" width="0.0179%" height="15" fill="rgb(218,76,76)" fg:x="3226" fg:w="1"/><text x="58.1259%" y="639.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (87 samples, 1.56%)</title><rect x="56.3868%" y="869" width="1.5608%" height="15" fill="rgb(191,191,55)" fg:x="3143" fg:w="87"/><text x="56.6368%" y="879.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (66 samples, 1.18%)</title><rect x="56.7635%" y="853" width="1.1841%" height="15" fill="rgb(229,229,69)" fg:x="3164" fg:w="66"/><text x="57.0135%" y="863.50"></text></g><g><title>v8::internal::PagedSpaceBase::RefillLabMain (24 samples, 0.43%)</title><rect x="57.5170%" y="837" width="0.4306%" height="15" fill="rgb(208,208,62)" fg:x="3206" fg:w="24"/><text x="57.7670%" y="847.50"></text></g><g><title>v8::internal::PagedSpaceBase::RawRefillLabMain (24 samples, 0.43%)</title><rect x="57.5170%" y="821" width="0.4306%" height="15" fill="rgb(198,198,58)" fg:x="3206" fg:w="24"/><text x="57.7670%" y="831.50"></text></g><g><title>v8::internal::PagedSpaceBase::TryExpandImpl (22 samples, 0.39%)</title><rect x="57.5529%" y="805" width="0.3947%" height="15" fill="rgb(194,194,57)" fg:x="3208" fg:w="22"/><text x="57.8029%" y="815.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocatePage (22 samples, 0.39%)</title><rect x="57.5529%" y="789" width="0.3947%" height="15" fill="rgb(217,217,65)" fg:x="3208" fg:w="22"/><text x="57.8029%" y="799.50"></text></g><g><title>v8::internal::PagedSpaceBase::InitializePage (3 samples, 0.05%)</title><rect x="57.8938%" y="773" width="0.0538%" height="15" fill="rgb(220,220,66)" fg:x="3227" fg:w="3"/><text x="58.1438%" y="783.50"></text></g><g><title>v8::internal::Page::AllocateFreeListCategories (3 samples, 0.05%)</title><rect x="57.8938%" y="757" width="0.0538%" height="15" fill="rgb(200,200,59)" fg:x="3227" fg:w="3"/><text x="58.1438%" y="767.50"></text></g><g><title>operator new (3 samples, 0.05%)</title><rect x="57.8938%" y="741" width="0.0538%" height="15" fill="rgb(230,94,94)" fg:x="3227" fg:w="3"/><text x="58.1438%" y="751.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.05%)</title><rect x="57.8938%" y="725" width="0.0538%" height="15" fill="rgb(227,90,90)" fg:x="3227" fg:w="3"/><text x="58.1438%" y="735.50"></text></g><g><title>v8::internal::Factory::NewMap (384 samples, 6.89%)</title><rect x="51.0764%" y="885" width="6.8891%" height="15" fill="rgb(204,204,60)" fg:x="2847" fg:w="384"/><text x="51.3264%" y="895.50">v8::inter..</text></g><g><title>v8::internal::Map::GetVisitorId (1 samples, 0.02%)</title><rect x="57.9476%" y="869" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="3230" fg:w="1"/><text x="58.1976%" y="879.50"></text></g><g><title>v8::internal::JSObject::OptimizeAsPrototype (61 samples, 1.09%)</title><rect x="59.4008%" y="869" width="1.0944%" height="15" fill="rgb(197,197,58)" fg:x="3311" fg:w="61"/><text x="59.6508%" y="879.50"></text></g><g><title>v8::internal::PrototypeBenefitsFromNormalization (31 samples, 0.56%)</title><rect x="59.9390%" y="853" width="0.5562%" height="15" fill="rgb(177,177,50)" fg:x="3341" fg:w="31"/><text x="60.1890%" y="863.50"></text></g><g><title>v8::internal::Map::RawCopy (620 samples, 11.12%)</title><rect x="49.3900%" y="901" width="11.1231%" height="15" fill="rgb(200,200,59)" fg:x="2753" fg:w="620"/><text x="49.6400%" y="911.50">v8::internal::Ma..</text></g><g><title>v8::internal::Map::SetPrototype (142 samples, 2.55%)</title><rect x="57.9656%" y="885" width="2.5475%" height="15" fill="rgb(220,220,66)" fg:x="3231" fg:w="142"/><text x="58.2156%" y="895.50">v8..</text></g><g><title>v8::internal::PrototypeBenefitsFromNormalization (1 samples, 0.02%)</title><rect x="60.4952%" y="869" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="3372" fg:w="1"/><text x="60.7452%" y="879.50"></text></g><g><title>v8::internal::Map::SetInstanceDescriptors (30 samples, 0.54%)</title><rect x="60.5131%" y="901" width="0.5382%" height="15" fill="rgb(211,211,63)" fg:x="3373" fg:w="30"/><text x="60.7631%" y="911.50"></text></g><g><title>v8::internal::Map::CopyReplaceDescriptors (699 samples, 12.54%)</title><rect x="48.5468%" y="917" width="12.5404%" height="15" fill="rgb(217,217,65)" fg:x="2706" fg:w="699"/><text x="48.7968%" y="927.50">v8::internal::Map::..</text></g><g><title>v8::internal::Map::SetPrototype (2 samples, 0.04%)</title><rect x="61.0513%" y="901" width="0.0359%" height="15" fill="rgb(191,191,55)" fg:x="3403" fg:w="2"/><text x="61.3013%" y="911.50"></text></g><g><title>v8::internal::Map::SetPrototype (17 samples, 0.30%)</title><rect x="61.0872%" y="917" width="0.3050%" height="15" fill="rgb(203,203,60)" fg:x="3405" fg:w="17"/><text x="61.3372%" y="927.50"></text></g><g><title>v8::internal::TransitionsAccessor::GetPrototypeTransition (12 samples, 0.22%)</title><rect x="61.3922%" y="917" width="0.2153%" height="15" fill="rgb(203,203,60)" fg:x="3422" fg:w="12"/><text x="61.6422%" y="927.50"></text></g><g><title>v8::internal::TransitionsAccessor::GetPrototypeTransitions (1 samples, 0.02%)</title><rect x="61.5895%" y="901" width="0.0179%" height="15" fill="rgb(199,199,58)" fg:x="3433" fg:w="1"/><text x="61.8395%" y="911.50"></text></g><g><title>v8::internal::TransitionsAccessor::GetPrototypeTransitions (1 samples, 0.02%)</title><rect x="61.6075%" y="917" width="0.0179%" height="15" fill="rgb(214,214,64)" fg:x="3434" fg:w="1"/><text x="61.8575%" y="927.50"></text></g><g><title>v8::internal::Factory::NewSlowJSObjectWithPropertiesAndElements (979 samples, 17.56%)</title><rect x="44.2949%" y="949" width="17.5637%" height="15" fill="rgb(220,220,66)" fg:x="2469" fg:w="979"/><text x="44.5449%" y="959.50">v8::internal::Factory::NewS..</text></g><g><title>v8::internal::Map::TransitionToPrototype (773 samples, 13.87%)</title><rect x="47.9907%" y="933" width="13.8680%" height="15" fill="rgb(184,184,53)" fg:x="2675" fg:w="773"/><text x="48.2407%" y="943.50">v8::internal::Map::Tr..</text></g><g><title>v8::internal::TransitionsAccessor::PutPrototypeTransition (13 samples, 0.23%)</title><rect x="61.6254%" y="917" width="0.2332%" height="15" fill="rgb(182,182,52)" fg:x="3435" fg:w="13"/><text x="61.8754%" y="927.50"></text></g><g><title>v8::Object::New (1,581 samples, 28.36%)</title><rect x="33.5127%" y="965" width="28.3638%" height="15" fill="rgb(179,179,51)" fg:x="1868" fg:w="1581"/><text x="33.7627%" y="975.50">v8::Object::New</text></g><g><title>v8::internal::Map::TransitionToPrototype (1 samples, 0.02%)</title><rect x="61.8586%" y="949" width="0.0179%" height="15" fill="rgb(193,193,56)" fg:x="3448" fg:w="1"/><text x="62.1086%" y="959.50"></text></g><g><title>v8::internal::BaseNameDictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::Add (1 samples, 0.02%)</title><rect x="61.8766%" y="965" width="0.0179%" height="15" fill="rgb(177,177,50)" fg:x="3449" fg:w="1"/><text x="62.1266%" y="975.50"></text></g><g><title>v8::internal::BaseNameDictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::New&lt;v8::internal::Isolate&gt; (1 samples, 0.02%)</title><rect x="61.8945%" y="965" width="0.0179%" height="15" fill="rgb(220,220,66)" fg:x="3450" fg:w="1"/><text x="62.1445%" y="975.50"></text></g><g><title>v8::object::_&lt;impl v8::data::Object&gt;::with_prototype_and_properties::_{{closure}} (1,586 samples, 28.45%)</title><rect x="33.4769%" y="981" width="28.4535%" height="15" fill="rgb(216,216,65)" fg:x="1866" fg:w="1586"/><text x="33.7269%" y="991.50">v8::object::_&lt;impl v8::data::Object&gt;::with_pro..</text></g><g><title>v8::scope::data::ScopeData::get_isolate_ptr (1 samples, 0.02%)</title><rect x="61.9125%" y="965" width="0.0179%" height="15" fill="rgb(181,181,52)" fg:x="3451" fg:w="1"/><text x="62.1625%" y="975.50"></text></g><g><title>v8::object::&lt;impl v8::data::Object&gt;::with_prototype_and_properties (1,589 samples, 28.51%)</title><rect x="33.4410%" y="1013" width="28.5074%" height="15" fill="rgb(222,222,67)" fg:x="1864" fg:w="1589"/><text x="33.6910%" y="1023.50">v8::object::&lt;impl v8::data::Object&gt;::with_prot..</text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (1,587 samples, 28.47%)</title><rect x="33.4769%" y="997" width="28.4715%" height="15" fill="rgb(197,197,58)" fg:x="1866" fg:w="1587"/><text x="33.7269%" y="1007.50">v8::scope::HandleScope&lt;()&gt;::cast_local</text></g><g><title>v8::scope::data::ScopeData::get_mut (1 samples, 0.02%)</title><rect x="61.9304%" y="981" width="0.0179%" height="15" fill="rgb(195,195,57)" fg:x="3452" fg:w="1"/><text x="62.1804%" y="991.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (1 samples, 0.02%)</title><rect x="61.9304%" y="965" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="3452" fg:w="1"/><text x="62.1804%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.04%)</title><rect x="62.0201%" y="997" width="0.0359%" height="15" fill="rgb(181,181,52)" fg:x="3457" fg:w="2"/><text x="62.2701%" y="1007.50"></text></g><g><title>v8::primitives::null::_{{closure}} (3 samples, 0.05%)</title><rect x="62.0560%" y="981" width="0.0538%" height="15" fill="rgb(225,225,68)" fg:x="3459" fg:w="3"/><text x="62.3060%" y="991.50"></text></g><g><title>v8__Null (3 samples, 0.05%)</title><rect x="62.0560%" y="965" width="0.0538%" height="15" fill="rgb(232,96,96)" fg:x="3459" fg:w="3"/><text x="62.3060%" y="975.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="62.0919%" y="949" width="0.0179%" height="15" fill="rgb(206,59,59)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="959.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="62.0919%" y="933" width="0.0179%" height="15" fill="rgb(246,118,118)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="943.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="62.0919%" y="917" width="0.0179%" height="15" fill="rgb(201,52,52)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="927.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="62.0919%" y="901" width="0.0179%" height="15" fill="rgb(254,128,128)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="911.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="62.0919%" y="885" width="0.0179%" height="15" fill="rgb(201,51,51)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="895.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="62.0919%" y="869" width="0.0179%" height="15" fill="rgb(235,102,102)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="879.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="62.0919%" y="853" width="0.0179%" height="15" fill="rgb(211,66,66)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="863.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="62.0919%" y="837" width="0.0179%" height="15" fill="rgb(249,121,121)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="847.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="62.0919%" y="821" width="0.0179%" height="15" fill="rgb(220,79,79)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="831.50"></text></g><g><title>update_cfs_group (1 samples, 0.02%)</title><rect x="62.0919%" y="805" width="0.0179%" height="15" fill="rgb(204,56,56)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="815.50"></text></g><g><title>account_entity_dequeue (1 samples, 0.02%)</title><rect x="62.0919%" y="789" width="0.0179%" height="15" fill="rgb(217,75,75)" fg:x="3461" fg:w="1"/><text x="62.3419%" y="799.50"></text></g><g><title>&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::end (1,771 samples, 31.77%)</title><rect x="30.5705%" y="1045" width="31.7725%" height="15" fill="rgb(186,186,54)" fg:x="1704" fg:w="1771"/><text x="30.8205%" y="1055.50">&lt;serde_v8::ser::StructSerializers as serde::ser::Se..</text></g><g><title>&lt;serde_v8::ser::ObjectSerializer as serde::ser::SerializeStruct&gt;::end (1,728 samples, 31.00%)</title><rect x="31.3419%" y="1029" width="31.0011%" height="15" fill="rgb(187,187,54)" fg:x="1747" fg:w="1728"/><text x="31.5919%" y="1039.50">&lt;serde_v8::ser::ObjectSerializer as serde::ser::Se..</text></g><g><title>v8::primitives::null (22 samples, 0.39%)</title><rect x="61.9483%" y="1013" width="0.3947%" height="15" fill="rgb(222,222,67)" fg:x="3453" fg:w="22"/><text x="62.1983%" y="1023.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (16 samples, 0.29%)</title><rect x="62.0560%" y="997" width="0.2870%" height="15" fill="rgb(179,179,51)" fg:x="3459" fg:w="16"/><text x="62.3060%" y="1007.50"></text></g><g><title>v8::scope::data::ScopeData::get_mut (13 samples, 0.23%)</title><rect x="62.1098%" y="981" width="0.2332%" height="15" fill="rgb(185,185,53)" fg:x="3462" fg:w="13"/><text x="62.3598%" y="991.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (13 samples, 0.23%)</title><rect x="62.1098%" y="965" width="0.2332%" height="15" fill="rgb(178,178,51)" fg:x="3462" fg:w="13"/><text x="62.3598%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.09%)</title><rect x="62.5583%" y="1013" width="0.0897%" height="15" fill="rgb(227,227,69)" fg:x="3487" fg:w="5"/><text x="62.8083%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.05%)</title><rect x="62.7915%" y="997" width="0.0538%" height="15" fill="rgb(212,212,63)" fg:x="3500" fg:w="3"/><text x="63.0415%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.29%)</title><rect x="62.6480%" y="1013" width="0.2870%" height="15" fill="rgb(187,187,54)" fg:x="3492" fg:w="16"/><text x="62.8980%" y="1023.50"></text></g><g><title>core::ptr::write (5 samples, 0.09%)</title><rect x="62.8454%" y="997" width="0.0897%" height="15" fill="rgb(196,196,57)" fg:x="3503" fg:w="5"/><text x="63.0954%" y="1007.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (4 samples, 0.07%)</title><rect x="62.9351%" y="1013" width="0.0718%" height="15" fill="rgb(212,212,63)" fg:x="3508" fg:w="4"/><text x="63.1851%" y="1023.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (4 samples, 0.07%)</title><rect x="62.9351%" y="997" width="0.0718%" height="15" fill="rgb(200,200,59)" fg:x="3508" fg:w="4"/><text x="63.1851%" y="1007.50"></text></g><g><title>core::cell::BorrowRefMut::new (4 samples, 0.07%)</title><rect x="62.9351%" y="981" width="0.0718%" height="15" fill="rgb(219,219,66)" fg:x="3508" fg:w="4"/><text x="63.1851%" y="991.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8 samples, 0.14%)</title><rect x="63.2580%" y="981" width="0.1435%" height="15" fill="rgb(207,207,61)" fg:x="3526" fg:w="8"/><text x="63.5080%" y="991.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8 samples, 0.14%)</title><rect x="63.2580%" y="965" width="0.1435%" height="15" fill="rgb(209,209,62)" fg:x="3526" fg:w="8"/><text x="63.5080%" y="975.50"></text></g><g><title>core::cell::BorrowRefMut::new (8 samples, 0.14%)</title><rect x="63.2580%" y="949" width="0.1435%" height="15" fill="rgb(193,193,56)" fg:x="3526" fg:w="8"/><text x="63.5080%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.07%)</title><rect x="63.3297%" y="933" width="0.0718%" height="15" fill="rgb(216,216,65)" fg:x="3530" fg:w="4"/><text x="63.5797%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.07%)</title><rect x="63.3297%" y="917" width="0.0718%" height="15" fill="rgb(200,200,59)" fg:x="3530" fg:w="4"/><text x="63.5797%" y="927.50"></text></g><g><title>core::mem::replace (4 samples, 0.07%)</title><rect x="63.3297%" y="901" width="0.0718%" height="15" fill="rgb(203,203,60)" fg:x="3530" fg:w="4"/><text x="63.5797%" y="911.50"></text></g><g><title>core::ptr::write (4 samples, 0.07%)</title><rect x="63.3297%" y="885" width="0.0718%" height="15" fill="rgb(186,186,54)" fg:x="3530" fg:w="4"/><text x="63.5797%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;&amp;mut v8::scope::HandleScope&gt;&gt; (4 samples, 0.07%)</title><rect x="63.4015%" y="981" width="0.0718%" height="15" fill="rgb(217,217,65)" fg:x="3534" fg:w="4"/><text x="63.6515%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (4 samples, 0.07%)</title><rect x="63.4015%" y="965" width="0.0718%" height="15" fill="rgb(204,204,60)" fg:x="3534" fg:w="4"/><text x="63.6515%" y="975.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="63.4015%" y="949" width="0.0718%" height="15" fill="rgb(203,203,60)" fg:x="3534" fg:w="4"/><text x="63.6515%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.07%)</title><rect x="63.4015%" y="933" width="0.0718%" height="15" fill="rgb(214,214,64)" fg:x="3534" fg:w="4"/><text x="63.6515%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.07%)</title><rect x="63.4015%" y="917" width="0.0718%" height="15" fill="rgb(226,226,68)" fg:x="3534" fg:w="4"/><text x="63.6515%" y="927.50"></text></g><g><title>core::mem::replace (4 samples, 0.07%)</title><rect x="63.4015%" y="901" width="0.0718%" height="15" fill="rgb(195,195,57)" fg:x="3534" fg:w="4"/><text x="63.6515%" y="911.50"></text></g><g><title>core::ptr::write (4 samples, 0.07%)</title><rect x="63.4015%" y="885" width="0.0718%" height="15" fill="rgb(186,186,54)" fg:x="3534" fg:w="4"/><text x="63.6515%" y="895.50"></text></g><g><title>v8::Number::New (51 samples, 0.91%)</title><rect x="63.5091%" y="933" width="0.9150%" height="15" fill="rgb(181,181,52)" fg:x="3540" fg:w="51"/><text x="63.7591%" y="943.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="64.4062%" y="917" width="0.0179%" height="15" fill="rgb(239,107,107)" fg:x="3590" fg:w="1"/><text x="64.6562%" y="927.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="64.4062%" y="901" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="3590" fg:w="1"/><text x="64.6562%" y="911.50"></text></g><g><title>v8::scope::data::ScopeData::get_isolate_ptr (2 samples, 0.04%)</title><rect x="64.4241%" y="933" width="0.0359%" height="15" fill="rgb(201,201,59)" fg:x="3591" fg:w="2"/><text x="64.6741%" y="943.50"></text></g><g><title>v8::number::_&lt;impl v8::data::Number&gt;::new::_{{closure}} (56 samples, 1.00%)</title><rect x="63.5091%" y="949" width="1.0047%" height="15" fill="rgb(228,228,69)" fg:x="3540" fg:w="56"/><text x="63.7591%" y="959.50"></text></g><g><title>v8__Number__New (3 samples, 0.05%)</title><rect x="64.4600%" y="933" width="0.0538%" height="15" fill="rgb(242,112,112)" fg:x="3593" fg:w="3"/><text x="64.7100%" y="943.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (98 samples, 1.76%)</title><rect x="63.0068%" y="1013" width="1.7582%" height="15" fill="rgb(212,212,63)" fg:x="3512" fg:w="98"/><text x="63.2568%" y="1023.50"></text></g><g><title>&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_u64 (98 samples, 1.76%)</title><rect x="63.0068%" y="997" width="1.7582%" height="15" fill="rgb(204,204,60)" fg:x="3512" fg:w="98"/><text x="63.2568%" y="1007.50"></text></g><g><title>v8::number::&lt;impl v8::data::Number&gt;::new (72 samples, 1.29%)</title><rect x="63.4733%" y="981" width="1.2917%" height="15" fill="rgb(197,197,58)" fg:x="3538" fg:w="72"/><text x="63.7233%" y="991.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (70 samples, 1.26%)</title><rect x="63.5091%" y="965" width="1.2558%" height="15" fill="rgb(204,204,60)" fg:x="3540" fg:w="70"/><text x="63.7591%" y="975.50"></text></g><g><title>v8::scope::data::ScopeData::get_mut (14 samples, 0.25%)</title><rect x="64.5138%" y="949" width="0.2512%" height="15" fill="rgb(198,198,58)" fg:x="3596" fg:w="14"/><text x="64.7638%" y="959.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (14 samples, 0.25%)</title><rect x="64.5138%" y="933" width="0.2512%" height="15" fill="rgb(211,211,63)" fg:x="3596" fg:w="14"/><text x="64.7638%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.07%)</title><rect x="64.7650%" y="997" width="0.0718%" height="15" fill="rgb(221,221,67)" fg:x="3610" fg:w="4"/><text x="65.0150%" y="1007.50"></text></g><g><title>v8::scope::data::ScopeData::get_mut (4 samples, 0.07%)</title><rect x="64.9444%" y="965" width="0.0718%" height="15" fill="rgb(223,223,67)" fg:x="3620" fg:w="4"/><text x="65.1944%" y="975.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (4 samples, 0.07%)</title><rect x="64.9444%" y="949" width="0.0718%" height="15" fill="rgb(198,198,58)" fg:x="3620" fg:w="4"/><text x="65.1944%" y="959.50"></text></g><g><title>v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (117 samples, 2.10%)</title><rect x="68.4428%" y="901" width="2.0990%" height="15" fill="rgb(220,220,66)" fg:x="3815" fg:w="117"/><text x="68.6928%" y="911.50">v..</text></g><g><title>[deno] (3 samples, 0.05%)</title><rect x="75.5472%" y="853" width="0.0538%" height="15" fill="rgb(226,89,89)" fg:x="4211" fg:w="3"/><text x="75.7972%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (25 samples, 0.45%)</title><rect x="75.6010%" y="853" width="0.4485%" height="15" fill="rgb(248,120,120)" fg:x="4214" fg:w="25"/><text x="75.8510%" y="863.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeString (470 samples, 8.43%)</title><rect x="67.6355%" y="917" width="8.4320%" height="15" fill="rgb(204,204,60)" fg:x="3770" fg:w="470"/><text x="67.8855%" y="927.50">v8::internal..</text></g><g><title>v8::internal::StringTable::LookupKey&lt;v8::internal::SequentialStringKey&lt;unsigned char&gt;, v8::internal::Isolate&gt; (308 samples, 5.53%)</title><rect x="70.5418%" y="901" width="5.5257%" height="15" fill="rgb(224,224,68)" fg:x="3932" fg:w="308"/><text x="70.7918%" y="911.50">v8::int..</text></g><g><title>v8::internal::(anonymous namespace)::KeyIsMatch&lt;v8::internal::Isolate, v8::internal::SequentialStringKey&lt;unsigned char&gt; &gt; (173 samples, 3.10%)</title><rect x="72.9638%" y="885" width="3.1037%" height="15" fill="rgb(217,217,65)" fg:x="4067" fg:w="173"/><text x="73.2138%" y="895.50">v8:..</text></g><g><title>v8::internal::String::IsEqualTo&lt;(v8::internal::String::EqualityType)2, unsigned char&gt; (89 samples, 1.60%)</title><rect x="74.4708%" y="869" width="1.5967%" height="15" fill="rgb(206,206,61)" fg:x="4151" fg:w="89"/><text x="74.7208%" y="879.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="76.0495%" y="853" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="4239" fg:w="1"/><text x="76.2995%" y="863.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="76.0495%" y="837" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="4239" fg:w="1"/><text x="76.2995%" y="847.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="76.0495%" y="821" width="0.0179%" height="15" fill="rgb(211,67,67)" fg:x="4239" fg:w="1"/><text x="76.2995%" y="831.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="76.0495%" y="805" width="0.0179%" height="15" fill="rgb(202,53,53)" fg:x="4239" fg:w="1"/><text x="76.2995%" y="815.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="76.0495%" y="789" width="0.0179%" height="15" fill="rgb(249,122,122)" fg:x="4239" fg:w="1"/><text x="76.2995%" y="799.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="76.0495%" y="773" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="4239" fg:w="1"/><text x="76.2995%" y="783.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="76.0495%" y="757" width="0.0179%" height="15" fill="rgb(225,86,86)" fg:x="4239" fg:w="1"/><text x="76.2995%" y="767.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="76.0495%" y="741" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="4239" fg:w="1"/><text x="76.2995%" y="751.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="76.0495%" y="725" width="0.0179%" height="15" fill="rgb(245,116,116)" fg:x="4239" fg:w="1"/><text x="76.2995%" y="735.50"></text></g><g><title>hrtimer_active (1 samples, 0.02%)</title><rect x="76.0495%" y="709" width="0.0179%" height="15" fill="rgb(254,128,128)" fg:x="4239" fg:w="1"/><text x="76.2995%" y="719.50"></text></g><g><title>v8::internal::Factory::InternalizeUtf8String (671 samples, 12.04%)</title><rect x="65.6620%" y="933" width="12.0380%" height="15" fill="rgb(198,198,58)" fg:x="3660" fg:w="671"/><text x="65.9120%" y="943.50">v8::internal::Fact..</text></g><g><title>v8::internal::Utf8DecoderBase&lt;v8::internal::Utf8Decoder&gt;::Utf8DecoderBase (91 samples, 1.63%)</title><rect x="76.0675%" y="917" width="1.6326%" height="15" fill="rgb(214,214,64)" fg:x="4240" fg:w="91"/><text x="76.3175%" y="927.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="77.6821%" y="901" width="0.0179%" height="15" fill="rgb(240,108,108)" fg:x="4330" fg:w="1"/><text x="77.9321%" y="911.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="77.6821%" y="885" width="0.0179%" height="15" fill="rgb(229,92,92)" fg:x="4330" fg:w="1"/><text x="77.9321%" y="895.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="77.6821%" y="869" width="0.0179%" height="15" fill="rgb(209,63,63)" fg:x="4330" fg:w="1"/><text x="77.9321%" y="879.50"></text></g><g><title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="77.6821%" y="853" width="0.0179%" height="15" fill="rgb(220,80,80)" fg:x="4330" fg:w="1"/><text x="77.9321%" y="863.50"></text></g><g><title>read_tsc (1 samples, 0.02%)</title><rect x="77.6821%" y="837" width="0.0179%" height="15" fill="rgb(230,93,93)" fg:x="4330" fg:w="1"/><text x="77.9321%" y="847.50"></text></g><g><title>v8::String::NewFromUtf8 (708 samples, 12.70%)</title><rect x="65.0161%" y="949" width="12.7018%" height="15" fill="rgb(228,228,69)" fg:x="3624" fg:w="708"/><text x="65.2661%" y="959.50">v8::String::NewFrom..</text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeString (1 samples, 0.02%)</title><rect x="77.7000%" y="933" width="0.0179%" height="15" fill="rgb(184,184,53)" fg:x="4331" fg:w="1"/><text x="77.9500%" y="943.50"></text></g><g><title>v8::scope::data::ScopeData::get_isolate_ptr (5 samples, 0.09%)</title><rect x="77.7180%" y="949" width="0.0897%" height="15" fill="rgb(195,195,57)" fg:x="4332" fg:w="5"/><text x="77.9680%" y="959.50"></text></g><g><title>serde_v8::ser::to_v8 (2,780 samples, 49.87%)</title><rect x="28.0230%" y="1077" width="49.8744%" height="15" fill="rgb(188,188,54)" fg:x="1562" fg:w="2780"/><text x="28.2730%" y="1087.50">serde_v8::ser::to_v8</text></g><g><title>deno_web::_::&lt;impl serde::ser::Serialize for deno_web::EncodeIntoResult&gt;::serialize (2,777 samples, 49.82%)</title><rect x="28.0768%" y="1061" width="49.8206%" height="15" fill="rgb(219,219,66)" fg:x="1565" fg:w="2777"/><text x="28.3268%" y="1071.50">deno_web::_::&lt;impl serde::ser::Serialize for deno_web::EncodeIntoResult&gt;::serialize</text></g><g><title>&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::serialize_field (867 samples, 15.55%)</title><rect x="62.3430%" y="1045" width="15.5544%" height="15" fill="rgb(212,212,63)" fg:x="3475" fg:w="867"/><text x="62.5930%" y="1055.50">&lt;serde_v8::ser::StructSe..</text></g><g><title>&lt;serde_v8::ser::ObjectSerializer as serde::ser::SerializeStruct&gt;::serialize_field (865 samples, 15.52%)</title><rect x="62.3789%" y="1029" width="15.5185%" height="15" fill="rgb(213,213,63)" fg:x="3477" fg:w="865"/><text x="62.6289%" y="1039.50">&lt;serde_v8::ser::ObjectSe..</text></g><g><title>serde_v8::keys::v8_struct_key (732 samples, 13.13%)</title><rect x="64.7650%" y="1013" width="13.1324%" height="15" fill="rgb(223,223,67)" fg:x="3610" fg:w="732"/><text x="65.0150%" y="1023.50">serde_v8::keys::v8_s..</text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::new_from_utf8 (728 samples, 13.06%)</title><rect x="64.8367%" y="997" width="13.0606%" height="15" fill="rgb(179,179,51)" fg:x="3614" fg:w="728"/><text x="65.0867%" y="1007.50">v8::string::&lt;impl v8..</text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (722 samples, 12.95%)</title><rect x="64.9444%" y="981" width="12.9530%" height="15" fill="rgb(201,201,59)" fg:x="3620" fg:w="722"/><text x="65.1944%" y="991.50">v8::scope::HandleSc..</text></g><g><title>v8::string::_&lt;impl v8::data::String&gt;::new_from_utf8::_{{closure}} (718 samples, 12.88%)</title><rect x="65.0161%" y="965" width="12.8812%" height="15" fill="rgb(212,212,63)" fg:x="3624" fg:w="718"/><text x="65.2661%" y="975.50">v8::string::_&lt;impl ..</text></g><g><title>v8__String__NewFromUtf8 (5 samples, 0.09%)</title><rect x="77.8077%" y="949" width="0.0897%" height="15" fill="rgb(203,55,55)" fg:x="4337" fg:w="5"/><text x="78.0577%" y="959.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="77.8794%" y="933" width="0.0179%" height="15" fill="rgb(214,71,71)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="943.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="77.8794%" y="917" width="0.0179%" height="15" fill="rgb(220,80,80)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="927.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="77.8794%" y="901" width="0.0179%" height="15" fill="rgb(217,75,75)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="911.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="77.8794%" y="885" width="0.0179%" height="15" fill="rgb(242,111,111)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="895.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="77.8794%" y="869" width="0.0179%" height="15" fill="rgb(230,95,95)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="879.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="77.8794%" y="853" width="0.0179%" height="15" fill="rgb(228,91,91)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="863.50"></text></g><g><title>tick_do_update_jiffies64.part.14 (1 samples, 0.02%)</title><rect x="77.8794%" y="837" width="0.0179%" height="15" fill="rgb(226,88,88)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="847.50"></text></g><g><title>update_wall_time (1 samples, 0.02%)</title><rect x="77.8794%" y="821" width="0.0179%" height="15" fill="rgb(201,52,52)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="831.50"></text></g><g><title>timekeeping_advance (1 samples, 0.02%)</title><rect x="77.8794%" y="805" width="0.0179%" height="15" fill="rgb(207,61,61)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="815.50"></text></g><g><title>timekeeping_update (1 samples, 0.02%)</title><rect x="77.8794%" y="789" width="0.0179%" height="15" fill="rgb(234,100,100)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="799.50"></text></g><g><title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="77.8794%" y="773" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="783.50"></text></g><g><title>pvclock_gtod_notify (1 samples, 0.02%)</title><rect x="77.8794%" y="757" width="0.0179%" height="15" fill="rgb(236,103,103)" fg:x="4341" fg:w="1"/><text x="78.1294%" y="767.50"></text></g><g><title>v8::ArrayBufferView::Buffer (36 samples, 0.65%)</title><rect x="77.8974%" y="1077" width="0.6459%" height="15" fill="rgb(200,200,59)" fg:x="4342" fg:w="36"/><text x="78.1474%" y="1087.50"></text></g><g><title>v8::internal::JSTypedArray::GetBuffer (28 samples, 0.50%)</title><rect x="78.0409%" y="1061" width="0.5023%" height="15" fill="rgb(190,190,55)" fg:x="4350" fg:w="28"/><text x="78.2909%" y="1071.50"></text></g><g><title>v8::array_buffer::&lt;impl v8::data::ArrayBuffer&gt;::get_backing_store (242 samples, 4.34%)</title><rect x="78.5432%" y="1077" width="4.3416%" height="15" fill="rgb(188,188,54)" fg:x="4378" fg:w="242"/><text x="78.7932%" y="1087.50">v8::a..</text></g><g><title>v8::ArrayBuffer::GetBackingStore (241 samples, 4.32%)</title><rect x="78.5612%" y="1061" width="4.3236%" height="15" fill="rgb(213,213,64)" fg:x="4379" fg:w="241"/><text x="78.8112%" y="1071.50">v8::A..</text></g><g><title>v8::array_buffer::BackingStore::is_shared (5 samples, 0.09%)</title><rect x="82.8848%" y="1077" width="0.0897%" height="15" fill="rgb(226,226,68)" fg:x="4620" fg:w="5"/><text x="83.1348%" y="1087.50"></text></g><g><title>v8__BackingStore__IsShared (5 samples, 0.09%)</title><rect x="82.8848%" y="1061" width="0.0897%" height="15" fill="rgb(208,62,62)" fg:x="4620" fg:w="5"/><text x="83.1348%" y="1071.50"></text></g><g><title>v8::array_buffer_view::_&lt;impl v8::data::ArrayBufferView&gt;::buffer::_{{closure}} (3 samples, 0.05%)</title><rect x="83.0642%" y="1045" width="0.0538%" height="15" fill="rgb(212,212,63)" fg:x="4630" fg:w="3"/><text x="83.3142%" y="1055.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::buffer (11 samples, 0.20%)</title><rect x="82.9745%" y="1077" width="0.1973%" height="15" fill="rgb(211,211,63)" fg:x="4625" fg:w="11"/><text x="83.2245%" y="1087.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (6 samples, 0.11%)</title><rect x="83.0642%" y="1061" width="0.1076%" height="15" fill="rgb(195,195,57)" fg:x="4630" fg:w="6"/><text x="83.3142%" y="1071.50"></text></g><g><title>v8::scope::data::ScopeData::get_mut (3 samples, 0.05%)</title><rect x="83.1180%" y="1045" width="0.0538%" height="15" fill="rgb(191,191,55)" fg:x="4633" fg:w="3"/><text x="83.3680%" y="1055.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (3 samples, 0.05%)</title><rect x="83.1180%" y="1029" width="0.0538%" height="15" fill="rgb(200,200,59)" fg:x="4633" fg:w="3"/><text x="83.3680%" y="1039.50"></text></g><g><title>v8::ArrayBufferView::ByteLength (7 samples, 0.13%)</title><rect x="83.1719%" y="1061" width="0.1256%" height="15" fill="rgb(185,185,53)" fg:x="4636" fg:w="7"/><text x="83.4219%" y="1071.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_length (8 samples, 0.14%)</title><rect x="83.1719%" y="1077" width="0.1435%" height="15" fill="rgb(176,176,50)" fg:x="4636" fg:w="8"/><text x="83.4219%" y="1087.50"></text></g><g><title>v8__ArrayBufferView__ByteLength (1 samples, 0.02%)</title><rect x="83.2975%" y="1061" width="0.0179%" height="15" fill="rgb(205,57,57)" fg:x="4643" fg:w="1"/><text x="83.5475%" y="1071.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_offset (3 samples, 0.05%)</title><rect x="83.3154%" y="1077" width="0.0538%" height="15" fill="rgb(228,228,69)" fg:x="4644" fg:w="3"/><text x="83.5654%" y="1087.50"></text></g><g><title>v8::ArrayBufferView::ByteOffset (3 samples, 0.05%)</title><rect x="83.3154%" y="1061" width="0.0538%" height="15" fill="rgb(189,189,55)" fg:x="4644" fg:w="3"/><text x="83.5654%" y="1071.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::ArrayBufferView&gt;&gt;::try_from (54 samples, 0.97%)</title><rect x="83.3692%" y="1077" width="0.9688%" height="15" fill="rgb(199,199,59)" fg:x="4647" fg:w="54"/><text x="83.6192%" y="1087.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_array_buffer_view (51 samples, 0.91%)</title><rect x="83.4230%" y="1061" width="0.9150%" height="15" fill="rgb(177,177,51)" fg:x="4650" fg:w="51"/><text x="83.6730%" y="1071.50"></text></g><g><title>v8::Value::IsArrayBufferView (51 samples, 0.91%)</title><rect x="83.4230%" y="1045" width="0.9150%" height="15" fill="rgb(187,187,54)" fg:x="4650" fg:w="51"/><text x="83.6730%" y="1055.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::String&gt;&gt;::try_from (27 samples, 0.48%)</title><rect x="84.3380%" y="1077" width="0.4844%" height="15" fill="rgb(198,198,58)" fg:x="4701" fg:w="27"/><text x="84.5880%" y="1087.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_string (27 samples, 0.48%)</title><rect x="84.3380%" y="1061" width="0.4844%" height="15" fill="rgb(193,193,56)" fg:x="4701" fg:w="27"/><text x="84.5880%" y="1071.50"></text></g><g><title>v8__Value__IsString (27 samples, 0.48%)</title><rect x="84.3380%" y="1045" width="0.4844%" height="15" fill="rgb(227,90,90)" fg:x="4701" fg:w="27"/><text x="84.5880%" y="1055.50"></text></g><g><title>v8::External::Value (25 samples, 0.45%)</title><rect x="84.8762%" y="1061" width="0.4485%" height="15" fill="rgb(211,211,63)" fg:x="4731" fg:w="25"/><text x="85.1262%" y="1071.50"></text></g><g><title>v8::external::&lt;impl v8::data::External&gt;::value (31 samples, 0.56%)</title><rect x="84.8224%" y="1077" width="0.5562%" height="15" fill="rgb(185,185,53)" fg:x="4728" fg:w="31"/><text x="85.0724%" y="1087.50"></text></g><g><title>v8__External__Value (3 samples, 0.05%)</title><rect x="85.3247%" y="1061" width="0.0538%" height="15" fill="rgb(254,129,129)" fg:x="4756" fg:w="3"/><text x="85.5747%" y="1071.50"></text></g><g><title>v8::function::FunctionCallbackArguments::data (4 samples, 0.07%)</title><rect x="85.3785%" y="1077" width="0.0718%" height="15" fill="rgb(193,193,56)" fg:x="4759" fg:w="4"/><text x="85.6285%" y="1087.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (3 samples, 0.05%)</title><rect x="85.3965%" y="1061" width="0.0538%" height="15" fill="rgb(222,83,83)" fg:x="4760" fg:w="3"/><text x="85.6465%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.04%)</title><rect x="85.4503%" y="1061" width="0.0359%" height="15" fill="rgb(227,227,69)" fg:x="4763" fg:w="2"/><text x="85.7003%" y="1071.50"></text></g><g><title>v8::function::FunctionCallbackArguments::get (8 samples, 0.14%)</title><rect x="85.4503%" y="1077" width="0.1435%" height="15" fill="rgb(183,183,53)" fg:x="4763" fg:w="8"/><text x="85.7003%" y="1087.50"></text></g><g><title>v8__FunctionCallbackInfo__GetArgument (6 samples, 0.11%)</title><rect x="85.4862%" y="1061" width="0.1076%" height="15" fill="rgb(224,86,86)" fg:x="4765" fg:w="6"/><text x="85.7362%" y="1071.50"></text></g><g><title>core::ops::function::Fn::call (4,249 samples, 76.23%)</title><rect x="9.4905%" y="1109" width="76.2289%" height="15" fill="rgb(205,205,60)" fg:x="529" fg:w="4249"/><text x="9.7405%" y="1119.50">core::ops::function::Fn::call</text></g><g><title>deno_web::op_encoding_encode_into::v8_func (4,247 samples, 76.19%)</title><rect x="9.5264%" y="1093" width="76.1930%" height="15" fill="rgb(226,226,68)" fg:x="531" fg:w="4247"/><text x="9.7764%" y="1103.50">deno_web::op_encoding_encode_into::v8_func</text></g><g><title>v8::function::ReturnValue::set (7 samples, 0.13%)</title><rect x="85.5938%" y="1077" width="0.1256%" height="15" fill="rgb(228,228,69)" fg:x="4771" fg:w="7"/><text x="85.8438%" y="1087.50"></text></g><g><title>v8__ReturnValue__Set (3 samples, 0.05%)</title><rect x="85.6656%" y="1061" width="0.0538%" height="15" fill="rgb(251,125,125)" fg:x="4775" fg:w="3"/><text x="85.9156%" y="1071.50"></text></g><g><title>v8::scope::data::ScopeData::get_mut (2 samples, 0.04%)</title><rect x="85.7553%" y="1077" width="0.0359%" height="15" fill="rgb(227,227,68)" fg:x="4780" fg:w="2"/><text x="86.0053%" y="1087.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (2 samples, 0.04%)</title><rect x="85.7553%" y="1061" width="0.0359%" height="15" fill="rgb(214,214,64)" fg:x="4780" fg:w="2"/><text x="86.0053%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (16 samples, 0.29%)</title><rect x="85.9706%" y="1045" width="0.2870%" height="15" fill="rgb(201,201,59)" fg:x="4792" fg:w="16"/><text x="86.2206%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.29%)</title><rect x="85.9706%" y="1029" width="0.2870%" height="15" fill="rgb(215,215,64)" fg:x="4792" fg:w="16"/><text x="86.2206%" y="1039.50"></text></g><g><title>core::mem::replace (16 samples, 0.29%)</title><rect x="85.9706%" y="1013" width="0.2870%" height="15" fill="rgb(202,202,60)" fg:x="4792" fg:w="16"/><text x="86.2206%" y="1023.50"></text></g><g><title>core::ptr::write (16 samples, 0.29%)</title><rect x="85.9706%" y="997" width="0.2870%" height="15" fill="rgb(222,222,67)" fg:x="4792" fg:w="16"/><text x="86.2206%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (6 samples, 0.11%)</title><rect x="86.2576%" y="1045" width="0.1076%" height="15" fill="rgb(223,223,67)" fg:x="4808" fg:w="6"/><text x="86.5076%" y="1055.50"></text></g><g><title>&lt;v8::scope::data::ScopeTypeSpecificData as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="86.3473%" y="1029" width="0.0179%" height="15" fill="rgb(203,203,60)" fg:x="4813" fg:w="1"/><text x="86.5973%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::CallbackScope&gt; (38 samples, 0.68%)</title><rect x="85.7194%" y="1109" width="0.6817%" height="15" fill="rgb(205,205,60)" fg:x="4778" fg:w="38"/><text x="85.9694%" y="1119.50"></text></g><g><title>&lt;v8::scope::CallbackScope&lt;C&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.68%)</title><rect x="85.7194%" y="1093" width="0.6817%" height="15" fill="rgb(198,198,58)" fg:x="4778" fg:w="38"/><text x="85.9694%" y="1103.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (34 samples, 0.61%)</title><rect x="85.7912%" y="1077" width="0.6100%" height="15" fill="rgb(185,185,53)" fg:x="4782" fg:w="34"/><text x="86.0412%" y="1087.50"></text></g><g><title>v8::scope::data::ScopeData::exit_scope (34 samples, 0.61%)</title><rect x="85.7912%" y="1061" width="0.6100%" height="15" fill="rgb(228,228,69)" fg:x="4782" fg:w="34"/><text x="86.0412%" y="1071.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (2 samples, 0.04%)</title><rect x="86.3653%" y="1045" width="0.0359%" height="15" fill="rgb(181,181,52)" fg:x="4814" fg:w="2"/><text x="86.6153%" y="1055.50"></text></g><g><title>v8__Isolate__SetData (2 samples, 0.04%)</title><rect x="86.3653%" y="1029" width="0.0359%" height="15" fill="rgb(252,126,126)" fg:x="4814" fg:w="2"/><text x="86.6153%" y="1039.50"></text></g><g><title>v8::function::ReturnValue::from_function_callback_info (3 samples, 0.05%)</title><rect x="86.4011%" y="1109" width="0.0538%" height="15" fill="rgb(216,216,64)" fg:x="4816" fg:w="3"/><text x="86.6511%" y="1119.50"></text></g><g><title>v8__FunctionCallbackInfo__GetReturnValue (1 samples, 0.02%)</title><rect x="86.4370%" y="1093" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="4818" fg:w="1"/><text x="86.6870%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="86.4729%" y="1077" width="0.0179%" height="15" fill="rgb(194,194,57)" fg:x="4820" fg:w="1"/><text x="86.7229%" y="1087.50"></text></g><g><title>v8::scope::data::ScopeData::get_current_mut (4 samples, 0.07%)</title><rect x="86.4729%" y="1093" width="0.0718%" height="15" fill="rgb(211,211,63)" fg:x="4820" fg:w="4"/><text x="86.7229%" y="1103.50"></text></g><g><title>v8::isolate::Isolate::get_current_scope_data (3 samples, 0.05%)</title><rect x="86.4909%" y="1077" width="0.0538%" height="15" fill="rgb(200,200,59)" fg:x="4821" fg:w="3"/><text x="86.7409%" y="1087.50"></text></g><g><title>v8__Isolate__GetData (1 samples, 0.02%)</title><rect x="86.5267%" y="1061" width="0.0179%" height="15" fill="rgb(204,56,56)" fg:x="4823" fg:w="1"/><text x="86.7767%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="86.6523%" y="1061" width="0.0359%" height="15" fill="rgb(181,181,52)" fg:x="4830" fg:w="2"/><text x="86.9023%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="86.6523%" y="1045" width="0.0359%" height="15" fill="rgb(175,175,50)" fg:x="4830" fg:w="2"/><text x="86.9023%" y="1055.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="86.6523%" y="1029" width="0.0359%" height="15" fill="rgb(177,177,50)" fg:x="4830" fg:w="2"/><text x="86.9023%" y="1039.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="86.6523%" y="1013" width="0.0359%" height="15" fill="rgb(213,213,63)" fg:x="4830" fg:w="2"/><text x="86.9023%" y="1023.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (1 samples, 0.02%)</title><rect x="86.6882%" y="1061" width="0.0179%" height="15" fill="rgb(216,216,65)" fg:x="4832" fg:w="1"/><text x="86.9382%" y="1071.50"></text></g><g><title>v8__Isolate__SetData (1 samples, 0.02%)</title><rect x="86.6882%" y="1045" width="0.0179%" height="15" fill="rgb(202,53,53)" fg:x="4832" fg:w="1"/><text x="86.9382%" y="1055.50"></text></g><g><title>v8::scope::data::ScopeData::allocate_or_reuse_scope_data (1 samples, 0.02%)</title><rect x="86.7061%" y="1061" width="0.0179%" height="15" fill="rgb(225,225,68)" fg:x="4833" fg:w="1"/><text x="86.9561%" y="1071.50"></text></g><g><title>v8::scope::data::ScopeData::new_callback_scope_data (12 samples, 0.22%)</title><rect x="86.5447%" y="1093" width="0.2153%" height="15" fill="rgb(175,175,50)" fg:x="4824" fg:w="12"/><text x="86.7947%" y="1103.50"></text></g><g><title>v8::scope::data::ScopeData::new_scope_data_with (12 samples, 0.22%)</title><rect x="86.5447%" y="1077" width="0.2153%" height="15" fill="rgb(176,176,50)" fg:x="4824" fg:w="12"/><text x="86.7947%" y="1087.50"></text></g><g><title>v8::scope::data::ScopeData::new_callback_scope_data::_{{closure}} (2 samples, 0.04%)</title><rect x="86.7241%" y="1061" width="0.0359%" height="15" fill="rgb(206,206,61)" fg:x="4834" fg:w="2"/><text x="86.9741%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="86.7241%" y="1045" width="0.0359%" height="15" fill="rgb(223,223,67)" fg:x="4834" fg:w="2"/><text x="86.9741%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="86.7241%" y="1029" width="0.0359%" height="15" fill="rgb(222,222,67)" fg:x="4834" fg:w="2"/><text x="86.9741%" y="1039.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="86.7241%" y="1013" width="0.0359%" height="15" fill="rgb(177,177,50)" fg:x="4834" fg:w="2"/><text x="86.9741%" y="1023.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="86.7241%" y="997" width="0.0359%" height="15" fill="rgb(225,225,68)" fg:x="4834" fg:w="2"/><text x="86.9741%" y="1007.50"></text></g><g><title>Builtins_CallApiCallback (4,343 samples, 77.92%)</title><rect x="8.8626%" y="1157" width="77.9153%" height="15" fill="rgb(252,126,126)" fg:x="494" fg:w="4343"/><text x="9.1126%" y="1167.50">Builtins_CallApiCallback</text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (4,316 samples, 77.43%)</title><rect x="9.3470%" y="1141" width="77.4309%" height="15" fill="rgb(212,212,63)" fg:x="521" fg:w="4316"/><text x="9.5970%" y="1151.50">&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn</text></g><g><title>v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}} (4,313 samples, 77.38%)</title><rect x="9.4008%" y="1125" width="77.3771%" height="15" fill="rgb(178,178,51)" fg:x="524" fg:w="4313"/><text x="9.6508%" y="1135.50">v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure..</text></g><g><title>v8::scope::CallbackScope::new (18 samples, 0.32%)</title><rect x="86.4550%" y="1109" width="0.3229%" height="15" fill="rgb(198,198,58)" fg:x="4819" fg:w="18"/><text x="86.7050%" y="1119.50"></text></g><g><title>v8::scope::param::NewCallbackScope::get_isolate_mut_and_maybe_current_context (1 samples, 0.02%)</title><rect x="86.7600%" y="1093" width="0.0179%" height="15" fill="rgb(222,222,67)" fg:x="4836" fg:w="1"/><text x="87.0100%" y="1103.50"></text></g><g><title>&lt;&amp;v8::function::FunctionCallbackInfo as v8::scope::getter::GetIsolate&gt;::get_isolate_mut (1 samples, 0.02%)</title><rect x="86.7600%" y="1077" width="0.0179%" height="15" fill="rgb(199,199,59)" fg:x="4836" fg:w="1"/><text x="87.0100%" y="1087.50"></text></g><g><title>v8__FunctionCallbackInfo__GetIsolate (1 samples, 0.02%)</title><rect x="86.7600%" y="1061" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="4836" fg:w="1"/><text x="87.0100%" y="1071.50"></text></g><g><title>Builtins_LoadIC (67 samples, 1.20%)</title><rect x="86.7779%" y="1157" width="1.2020%" height="15" fill="rgb(203,54,54)" fg:x="4837" fg:w="67"/><text x="87.0279%" y="1167.50"></text></g><g><title>v8::External::Value (1 samples, 0.02%)</title><rect x="87.9799%" y="1157" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="4904" fg:w="1"/><text x="88.2299%" y="1167.50"></text></g><g><title>v8::String::Length (1 samples, 0.02%)</title><rect x="87.9978%" y="1157" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="4905" fg:w="1"/><text x="88.2478%" y="1167.50"></text></g><g><title>v8__External__Value (1 samples, 0.02%)</title><rect x="88.0158%" y="1157" width="0.0179%" height="15" fill="rgb(226,87,87)" fg:x="4906" fg:w="1"/><text x="88.2658%" y="1167.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (1 samples, 0.02%)</title><rect x="88.0337%" y="1157" width="0.0179%" height="15" fill="rgb(216,73,73)" fg:x="4907" fg:w="1"/><text x="88.2837%" y="1167.50"></text></g><g><title>v8__FunctionCallbackInfo__GetReturnValue (1 samples, 0.02%)</title><rect x="88.0517%" y="1157" width="0.0179%" height="15" fill="rgb(243,112,112)" fg:x="4908" fg:w="1"/><text x="88.3017%" y="1167.50"></text></g><g><title>v8__Isolate__SetData (1 samples, 0.02%)</title><rect x="88.0696%" y="1157" width="0.0179%" height="15" fill="rgb(254,128,128)" fg:x="4909" fg:w="1"/><text x="88.3196%" y="1167.50"></text></g><g><title>JS:*bench file:///media/andrew/OCZ/source/roll-your-own-javascript-runtime/bench.js:1:16 (4,458 samples, 79.98%)</title><rect x="8.1270%" y="1173" width="79.9785%" height="15" fill="rgb(56,171,171)" fg:x="453" fg:w="4458"/><text x="8.3770%" y="1183.50">JS:*bench file:///media/andrew/OCZ/source/roll-your-own-javascript-runtime/bench.js:1:16</text></g><g><title>v8__String__Length (1 samples, 0.02%)</title><rect x="88.0875%" y="1157" width="0.0179%" height="15" fill="rgb(247,118,118)" fg:x="4910" fg:w="1"/><text x="88.3375%" y="1167.50"></text></g><g><title>JS:^bench file:///media/andrew/OCZ/source/roll-your-own-javascript-runtime/bench.js:1:16 (1 samples, 0.02%)</title><rect x="88.1055%" y="1173" width="0.0179%" height="15" fill="rgb(97,208,208)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1183.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.02%)</title><rect x="88.1055%" y="1157" width="0.0179%" height="15" fill="rgb(221,81,81)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1167.50"></text></g><g><title>v8::internal::Builtin_HandleApiCall (1 samples, 0.02%)</title><rect x="88.1055%" y="1141" width="0.0179%" height="15" fill="rgb(216,216,64)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1151.50"></text></g><g><title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (1 samples, 0.02%)</title><rect x="88.1055%" y="1125" width="0.0179%" height="15" fill="rgb(228,228,69)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1135.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="88.1055%" y="1109" width="0.0179%" height="15" fill="rgb(175,175,50)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1119.50"></text></g><g><title>v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}} (1 samples, 0.02%)</title><rect x="88.1055%" y="1093" width="0.0179%" height="15" fill="rgb(221,221,67)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1103.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.02%)</title><rect x="88.1055%" y="1077" width="0.0179%" height="15" fill="rgb(201,201,59)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1087.50"></text></g><g><title>deno_core::bindings::call_console (1 samples, 0.02%)</title><rect x="88.1055%" y="1061" width="0.0179%" height="15" fill="rgb(196,196,57)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1071.50"></text></g><g><title>v8::Function::Call (1 samples, 0.02%)</title><rect x="88.1055%" y="1045" width="0.0179%" height="15" fill="rgb(181,181,52)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1055.50"></text></g><g><title>v8::internal::Execution::Call (1 samples, 0.02%)</title><rect x="88.1055%" y="1029" width="0.0179%" height="15" fill="rgb(194,194,57)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1039.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (1 samples, 0.02%)</title><rect x="88.1055%" y="1013" width="0.0179%" height="15" fill="rgb(208,208,62)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1023.50"></text></g><g><title>Builtins_JSEntry (1 samples, 0.02%)</title><rect x="88.1055%" y="997" width="0.0179%" height="15" fill="rgb(225,86,86)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="1007.50"></text></g><g><title>Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="88.1055%" y="981" width="0.0179%" height="15" fill="rgb(205,58,58)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="991.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="88.1055%" y="965" width="0.0179%" height="15" fill="rgb(222,82,82)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="975.50"></text></g><g><title>Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="88.1055%" y="949" width="0.0179%" height="15" fill="rgb(211,66,66)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="959.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="88.1055%" y="933" width="0.0179%" height="15" fill="rgb(249,121,121)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="943.50"></text></g><g><title>v8::internal::Runtime_CompileLazy (1 samples, 0.02%)</title><rect x="88.1055%" y="917" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="927.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="88.1055%" y="901" width="0.0179%" height="15" fill="rgb(176,176,50)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="911.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="88.1055%" y="885" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="895.50"></text></g><g><title>v8::internal::parsing::ParseFunction (1 samples, 0.02%)</title><rect x="88.1055%" y="869" width="0.0179%" height="15" fill="rgb(207,207,61)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="879.50"></text></g><g><title>v8::internal::Parser::ParseFunction (1 samples, 0.02%)</title><rect x="88.1055%" y="853" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="863.50"></text></g><g><title>v8::internal::Parser::DoParseFunction (1 samples, 0.02%)</title><rect x="88.1055%" y="837" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="847.50"></text></g><g><title>v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseArrowFunctionLiteral (1 samples, 0.02%)</title><rect x="88.1055%" y="821" width="0.0179%" height="15" fill="rgb(175,175,50)" fg:x="4911" fg:w="1"/><text x="88.3555%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.04%)</title><rect x="88.1414%" y="1125" width="0.0359%" height="15" fill="rgb(225,225,68)" fg:x="4913" fg:w="2"/><text x="88.3914%" y="1135.50"></text></g><g><title>v8::function::ReturnValue::from_function_callback_info (3 samples, 0.05%)</title><rect x="88.1773%" y="1125" width="0.0538%" height="15" fill="rgb(176,176,50)" fg:x="4915" fg:w="3"/><text x="88.4273%" y="1135.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (10 samples, 0.18%)</title><rect x="88.1234%" y="1157" width="0.1794%" height="15" fill="rgb(215,215,64)" fg:x="4912" fg:w="10"/><text x="88.3734%" y="1167.50"></text></g><g><title>v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}} (9 samples, 0.16%)</title><rect x="88.1414%" y="1141" width="0.1615%" height="15" fill="rgb(186,186,54)" fg:x="4913" fg:w="9"/><text x="88.3914%" y="1151.50"></text></g><g><title>v8::scope::CallbackScope::new (4 samples, 0.07%)</title><rect x="88.2311%" y="1125" width="0.0718%" height="15" fill="rgb(199,199,58)" fg:x="4918" fg:w="4"/><text x="88.4811%" y="1135.50"></text></g><g><title>v8::scope::param::NewCallbackScope::get_isolate_mut_and_maybe_current_context (1 samples, 0.02%)</title><rect x="88.2849%" y="1109" width="0.0179%" height="15" fill="rgb(224,224,68)" fg:x="4921" fg:w="1"/><text x="88.5349%" y="1119.50"></text></g><g><title>&lt;&amp;v8::function::FunctionCallbackInfo as v8::scope::getter::GetIsolate&gt;::get_isolate_mut (1 samples, 0.02%)</title><rect x="88.2849%" y="1093" width="0.0179%" height="15" fill="rgb(198,198,58)" fg:x="4921" fg:w="1"/><text x="88.5349%" y="1103.50"></text></g><g><title>&lt;serde_v8::ser::ObjectSerializer as serde::ser::SerializeStruct&gt;::end (2 samples, 0.04%)</title><rect x="88.3028%" y="1157" width="0.0359%" height="15" fill="rgb(182,182,52)" fg:x="4922" fg:w="2"/><text x="88.5528%" y="1167.50"></text></g><g><title>&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.07%)</title><rect x="88.3387%" y="1157" width="0.0718%" height="15" fill="rgb(217,217,65)" fg:x="4924" fg:w="4"/><text x="88.5887%" y="1167.50"></text></g><g><title>v8::array_buffer::BackingStore::byte_length (1 samples, 0.02%)</title><rect x="88.4464%" y="1141" width="0.0179%" height="15" fill="rgb(208,208,62)" fg:x="4930" fg:w="1"/><text x="88.6964%" y="1151.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (5 samples, 0.09%)</title><rect x="88.4105%" y="1157" width="0.0897%" height="15" fill="rgb(217,217,65)" fg:x="4928" fg:w="5"/><text x="88.6605%" y="1167.50"></text></g><g><title>v8::array_buffer::BackingStore::data (2 samples, 0.04%)</title><rect x="88.4643%" y="1141" width="0.0359%" height="15" fill="rgb(177,177,50)" fg:x="4931" fg:w="2"/><text x="88.7143%" y="1151.50"></text></g><g><title>__GI___libc_free (18 samples, 0.32%)</title><rect x="88.5002%" y="1157" width="0.3229%" height="15" fill="rgb(232,97,97)" fg:x="4933" fg:w="18"/><text x="88.7502%" y="1167.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.14%)</title><rect x="88.8231%" y="1157" width="0.1435%" height="15" fill="rgb(250,123,123)" fg:x="4951" fg:w="8"/><text x="89.0731%" y="1167.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="88.9666%" y="1157" width="0.0179%" height="15" fill="rgb(210,64,64)" fg:x="4959" fg:w="1"/><text x="89.2166%" y="1167.50"></text></g><g><title>__rdl_alloc (3 samples, 0.05%)</title><rect x="88.9846%" y="1157" width="0.0538%" height="15" fill="rgb(202,53,53)" fg:x="4960" fg:w="3"/><text x="89.2346%" y="1167.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.05%)</title><rect x="88.9846%" y="1141" width="0.0538%" height="15" fill="rgb(194,194,57)" fg:x="4960" fg:w="3"/><text x="89.2346%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (5 samples, 0.09%)</title><rect x="89.0384%" y="1157" width="0.0897%" height="15" fill="rgb(202,202,60)" fg:x="4963" fg:w="5"/><text x="89.2884%" y="1167.50"></text></g><g><title>serde_v8::de::to_utf8 (2 samples, 0.04%)</title><rect x="89.1281%" y="1157" width="0.0359%" height="15" fill="rgb(194,194,57)" fg:x="4968" fg:w="2"/><text x="89.3781%" y="1167.50"></text></g><g><title>v8::BackingStore::ByteLength (4 samples, 0.07%)</title><rect x="89.1640%" y="1157" width="0.0718%" height="15" fill="rgb(229,229,69)" fg:x="4970" fg:w="4"/><text x="89.4140%" y="1167.50"></text></g><g><title>v8::String::NewFromUtf8 (8 samples, 0.14%)</title><rect x="89.2357%" y="1157" width="0.1435%" height="15" fill="rgb(208,208,62)" fg:x="4974" fg:w="8"/><text x="89.4857%" y="1167.50"></text></g><g><title>v8::base::bits::RoundUpToPowerOfTwo32 (3 samples, 0.05%)</title><rect x="89.3793%" y="1157" width="0.0538%" height="15" fill="rgb(219,219,66)" fg:x="4982" fg:w="3"/><text x="89.6293%" y="1167.50"></text></g><g><title>v8::function::FunctionCallbackArguments::get (5 samples, 0.09%)</title><rect x="89.4331%" y="1157" width="0.0897%" height="15" fill="rgb(221,221,66)" fg:x="4985" fg:w="5"/><text x="89.6831%" y="1167.50"></text></g><g><title>v8::internal::Factory::InitializeJSObjectBody (1 samples, 0.02%)</title><rect x="89.5228%" y="1157" width="0.0179%" height="15" fill="rgb(190,190,55)" fg:x="4990" fg:w="1"/><text x="89.7728%" y="1167.50"></text></g><g><title>v8::internal::Factory::InitializeMap (2 samples, 0.04%)</title><rect x="89.5407%" y="1157" width="0.0359%" height="15" fill="rgb(226,226,68)" fg:x="4991" fg:w="2"/><text x="89.7907%" y="1167.50"></text></g><g><title>v8::internal::Factory::NewMap (2 samples, 0.04%)</title><rect x="89.5766%" y="1157" width="0.0359%" height="15" fill="rgb(196,196,57)" fg:x="4993" fg:w="2"/><text x="89.8266%" y="1167.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (4 samples, 0.07%)</title><rect x="89.6125%" y="1157" width="0.0718%" height="15" fill="rgb(199,199,58)" fg:x="4995" fg:w="4"/><text x="89.8625%" y="1167.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.02%)</title><rect x="89.6842%" y="1157" width="0.0179%" height="15" fill="rgb(194,194,57)" fg:x="4999" fg:w="1"/><text x="89.9342%" y="1167.50"></text></g><g><title>v8::internal::Map::GetVisitorId (1 samples, 0.02%)</title><rect x="89.7022%" y="1157" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="5000" fg:w="1"/><text x="89.9522%" y="1167.50"></text></g><g><title>v8::internal::Map::SetInstanceDescriptors (2 samples, 0.04%)</title><rect x="89.7201%" y="1157" width="0.0359%" height="15" fill="rgb(199,199,59)" fg:x="5001" fg:w="2"/><text x="89.9701%" y="1167.50"></text></g><g><title>v8::internal::Map::SetPrototype (2 samples, 0.04%)</title><rect x="89.7560%" y="1157" width="0.0359%" height="15" fill="rgb(180,180,51)" fg:x="5003" fg:w="2"/><text x="90.0060%" y="1167.50"></text></g><g><title>v8::number::&lt;impl v8::data::Number&gt;::new (1 samples, 0.02%)</title><rect x="89.7919%" y="1157" width="0.0179%" height="15" fill="rgb(194,194,57)" fg:x="5005" fg:w="1"/><text x="90.0419%" y="1167.50"></text></g><g><title>v8::object::&lt;impl v8::data::Object&gt;::with_prototype_and_properties (5 samples, 0.09%)</title><rect x="89.8098%" y="1157" width="0.0897%" height="15" fill="rgb(209,209,62)" fg:x="5006" fg:w="5"/><text x="90.0598%" y="1167.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (2 samples, 0.04%)</title><rect x="89.8637%" y="1141" width="0.0359%" height="15" fill="rgb(181,181,52)" fg:x="5009" fg:w="2"/><text x="90.1137%" y="1151.50"></text></g><g><title>v8::object::_&lt;impl v8::data::Object&gt;::with_prototype_and_properties::_{{closure}} (2 samples, 0.04%)</title><rect x="89.8637%" y="1125" width="0.0359%" height="15" fill="rgb(187,187,54)" fg:x="5009" fg:w="2"/><text x="90.1137%" y="1135.50"></text></g><g><title>v8::primitives::null (1 samples, 0.02%)</title><rect x="89.8995%" y="1157" width="0.0179%" height="15" fill="rgb(226,226,68)" fg:x="5011" fg:w="1"/><text x="90.1495%" y="1167.50"></text></g><g><title>v8::scope::data::ScopeData::get_current_mut (1 samples, 0.02%)</title><rect x="89.9175%" y="1157" width="0.0179%" height="15" fill="rgb(217,217,65)" fg:x="5012" fg:w="1"/><text x="90.1675%" y="1167.50"></text></g><g><title>v8::isolate::Isolate::get_current_scope_data (1 samples, 0.02%)</title><rect x="89.9175%" y="1141" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="5012" fg:w="1"/><text x="90.1675%" y="1151.50"></text></g><g><title>v8::scope::data::ScopeData::new_callback_scope_data (5 samples, 0.09%)</title><rect x="89.9354%" y="1157" width="0.0897%" height="15" fill="rgb(180,180,52)" fg:x="5013" fg:w="5"/><text x="90.1854%" y="1167.50"></text></g><g><title>v8::scope::data::ScopeData::new_scope_data_with (5 samples, 0.09%)</title><rect x="89.9354%" y="1141" width="0.0897%" height="15" fill="rgb(199,199,58)" fg:x="5013" fg:w="5"/><text x="90.1854%" y="1151.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (2 samples, 0.04%)</title><rect x="89.9892%" y="1125" width="0.0359%" height="15" fill="rgb(208,208,62)" fg:x="5016" fg:w="2"/><text x="90.2392%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (2 samples, 0.04%)</title><rect x="90.0251%" y="1141" width="0.0359%" height="15" fill="rgb(192,192,56)" fg:x="5018" fg:w="2"/><text x="90.2751%" y="1151.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::new_from_utf8 (7 samples, 0.13%)</title><rect x="90.0251%" y="1157" width="0.1256%" height="15" fill="rgb(202,202,59)" fg:x="5018" fg:w="7"/><text x="90.2751%" y="1167.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (5 samples, 0.09%)</title><rect x="90.0610%" y="1141" width="0.0897%" height="15" fill="rgb(206,206,61)" fg:x="5020" fg:w="5"/><text x="90.3110%" y="1151.50"></text></g><g><title>v8::string::_&lt;impl v8::data::String&gt;::new_from_utf8::_{{closure}} (5 samples, 0.09%)</title><rect x="90.0610%" y="1125" width="0.0897%" height="15" fill="rgb(181,181,52)" fg:x="5020" fg:w="5"/><text x="90.3110%" y="1135.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::write_utf8 (2 samples, 0.04%)</title><rect x="90.1507%" y="1157" width="0.0359%" height="15" fill="rgb(219,219,66)" fg:x="5025" fg:w="2"/><text x="90.4007%" y="1167.50"></text></g><g><title>[[heap]] (116 samples, 2.08%)</title><rect x="88.1234%" y="1173" width="2.0811%" height="15" fill="rgb(238,105,105)" fg:x="4912" fg:w="116"/><text x="88.3734%" y="1183.50">[..</text></g><g><title>v8__String__NewFromUtf8 (1 samples, 0.02%)</title><rect x="90.1866%" y="1157" width="0.0179%" height="15" fill="rgb(220,80,80)" fg:x="5027" fg:w="1"/><text x="90.4366%" y="1167.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (4 samples, 0.07%)</title><rect x="90.2045%" y="1157" width="0.0718%" height="15" fill="rgb(222,222,67)" fg:x="5028" fg:w="4"/><text x="90.4545%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;v8::handle::Local&lt;v8::data::Name&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="90.3660%" y="1125" width="0.0538%" height="15" fill="rgb(190,190,55)" fg:x="5037" fg:w="3"/><text x="90.6160%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;v8::handle::Local&lt;v8::data::Name&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="90.3660%" y="1109" width="0.0538%" height="15" fill="rgb(210,210,62)" fg:x="5037" fg:w="3"/><text x="90.6160%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="90.3660%" y="1093" width="0.0538%" height="15" fill="rgb(209,209,62)" fg:x="5037" fg:w="3"/><text x="90.6160%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="90.3660%" y="1077" width="0.0538%" height="15" fill="rgb(179,179,51)" fg:x="5037" fg:w="3"/><text x="90.6160%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="90.3660%" y="1061" width="0.0538%" height="15" fill="rgb(227,227,69)" fg:x="5037" fg:w="3"/><text x="90.6160%" y="1071.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.05%)</title><rect x="90.3660%" y="1045" width="0.0538%" height="15" fill="rgb(246,118,118)" fg:x="5037" fg:w="3"/><text x="90.6160%" y="1055.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.05%)</title><rect x="90.3660%" y="1029" width="0.0538%" height="15" fill="rgb(177,177,50)" fg:x="5037" fg:w="3"/><text x="90.6160%" y="1039.50"></text></g><g><title>&lt;serde_v8::ser::ObjectSerializer as serde::ser::SerializeStruct&gt;::end (11 samples, 0.20%)</title><rect x="90.2763%" y="1157" width="0.1973%" height="15" fill="rgb(175,175,50)" fg:x="5032" fg:w="11"/><text x="90.5263%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_v8::ser::ObjectSerializer&gt; (6 samples, 0.11%)</title><rect x="90.3660%" y="1141" width="0.1076%" height="15" fill="rgb(186,186,54)" fg:x="5037" fg:w="6"/><text x="90.6160%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="90.4198%" y="1125" width="0.0538%" height="15" fill="rgb(199,199,58)" fg:x="5040" fg:w="3"/><text x="90.6698%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="90.4198%" y="1109" width="0.0538%" height="15" fill="rgb(218,218,65)" fg:x="5040" fg:w="3"/><text x="90.6698%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="90.4198%" y="1093" width="0.0538%" height="15" fill="rgb(177,177,50)" fg:x="5040" fg:w="3"/><text x="90.6698%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="90.4198%" y="1077" width="0.0538%" height="15" fill="rgb(203,203,60)" fg:x="5040" fg:w="3"/><text x="90.6698%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="90.4198%" y="1061" width="0.0538%" height="15" fill="rgb(209,209,62)" fg:x="5040" fg:w="3"/><text x="90.6698%" y="1071.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.05%)</title><rect x="90.4198%" y="1045" width="0.0538%" height="15" fill="rgb(213,69,69)" fg:x="5040" fg:w="3"/><text x="90.6698%" y="1055.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.05%)</title><rect x="90.4198%" y="1029" width="0.0538%" height="15" fill="rgb(201,201,59)" fg:x="5040" fg:w="3"/><text x="90.6698%" y="1039.50"></text></g><g><title>&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_u64 (11 samples, 0.20%)</title><rect x="90.4736%" y="1157" width="0.1973%" height="15" fill="rgb(221,221,66)" fg:x="5043" fg:w="11"/><text x="90.7236%" y="1167.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (5 samples, 0.09%)</title><rect x="90.5813%" y="1141" width="0.0897%" height="15" fill="rgb(223,223,67)" fg:x="5049" fg:w="5"/><text x="90.8313%" y="1151.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (5 samples, 0.09%)</title><rect x="90.5813%" y="1125" width="0.0897%" height="15" fill="rgb(197,197,58)" fg:x="5049" fg:w="5"/><text x="90.8313%" y="1135.50"></text></g><g><title>core::cell::BorrowRefMut::new (5 samples, 0.09%)</title><rect x="90.5813%" y="1109" width="0.0897%" height="15" fill="rgb(175,175,50)" fg:x="5049" fg:w="5"/><text x="90.8313%" y="1119.50"></text></g><g><title>&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 0.25%)</title><rect x="90.6710%" y="1157" width="0.2512%" height="15" fill="rgb(194,194,57)" fg:x="5054" fg:w="14"/><text x="90.9210%" y="1167.50"></text></g><g><title>&lt;serde_v8::ser::ObjectSerializer as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.07%)</title><rect x="90.8504%" y="1141" width="0.0718%" height="15" fill="rgb(215,215,64)" fg:x="5064" fg:w="4"/><text x="91.1004%" y="1151.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (2 samples, 0.04%)</title><rect x="90.8863%" y="1125" width="0.0359%" height="15" fill="rgb(219,219,66)" fg:x="5066" fg:w="2"/><text x="91.1363%" y="1135.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.07%)</title><rect x="90.9221%" y="1157" width="0.0718%" height="15" fill="rgb(252,126,126)" fg:x="5068" fg:w="4"/><text x="91.1721%" y="1167.50"></text></g><g><title>&lt;v8::support::SharedRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.07%)</title><rect x="91.4604%" y="1141" width="0.0718%" height="15" fill="rgb(221,221,67)" fg:x="5098" fg:w="4"/><text x="91.7104%" y="1151.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::get (4 samples, 0.07%)</title><rect x="91.4604%" y="1125" width="0.0718%" height="15" fill="rgb(221,221,67)" fg:x="5098" fg:w="4"/><text x="91.7104%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedRef&lt;v8::array_buffer::BackingStore&gt;&gt; (3 samples, 0.05%)</title><rect x="91.5321%" y="1141" width="0.0538%" height="15" fill="rgb(190,190,55)" fg:x="5102" fg:w="3"/><text x="91.7821%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedPtrBase&lt;v8::array_buffer::BackingStore&gt;&gt; (3 samples, 0.05%)</title><rect x="91.5321%" y="1125" width="0.0538%" height="15" fill="rgb(177,177,50)" fg:x="5102" fg:w="3"/><text x="91.7821%" y="1135.50"></text></g><g><title>&lt;v8::support::SharedPtrBase&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="91.5321%" y="1109" width="0.0538%" height="15" fill="rgb(200,200,59)" fg:x="5102" fg:w="3"/><text x="91.7821%" y="1119.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::reset (3 samples, 0.05%)</title><rect x="91.5321%" y="1093" width="0.0538%" height="15" fill="rgb(180,180,51)" fg:x="5102" fg:w="3"/><text x="91.7821%" y="1103.50"></text></g><g><title>deno_web::op_encoding_encode_into::call (5 samples, 0.09%)</title><rect x="91.5859%" y="1141" width="0.0897%" height="15" fill="rgb(201,201,59)" fg:x="5105" fg:w="5"/><text x="91.8359%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.09%)</title><rect x="91.5859%" y="1125" width="0.0897%" height="15" fill="rgb(226,226,68)" fg:x="5105" fg:w="5"/><text x="91.8359%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.09%)</title><rect x="91.5859%" y="1109" width="0.0897%" height="15" fill="rgb(187,187,54)" fg:x="5105" fg:w="5"/><text x="91.8359%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.09%)</title><rect x="91.5859%" y="1093" width="0.0897%" height="15" fill="rgb(205,205,61)" fg:x="5105" fg:w="5"/><text x="91.8359%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="91.5859%" y="1077" width="0.0897%" height="15" fill="rgb(218,218,65)" fg:x="5105" fg:w="5"/><text x="91.8359%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.09%)</title><rect x="91.5859%" y="1061" width="0.0897%" height="15" fill="rgb(175,175,50)" fg:x="5105" fg:w="5"/><text x="91.8359%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.09%)</title><rect x="91.5859%" y="1045" width="0.0897%" height="15" fill="rgb(214,214,64)" fg:x="5105" fg:w="5"/><text x="91.8359%" y="1055.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.09%)</title><rect x="91.5859%" y="1029" width="0.0897%" height="15" fill="rgb(239,106,106)" fg:x="5105" fg:w="5"/><text x="91.8359%" y="1039.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.09%)</title><rect x="91.5859%" y="1013" width="0.0897%" height="15" fill="rgb(204,204,60)" fg:x="5105" fg:w="5"/><text x="91.8359%" y="1023.50"></text></g><g><title>serde_v8::ser::to_v8 (6 samples, 0.11%)</title><rect x="91.6756%" y="1141" width="0.1076%" height="15" fill="rgb(199,199,59)" fg:x="5110" fg:w="6"/><text x="91.9256%" y="1151.50"></text></g><g><title>deno_web::_::&lt;impl serde::ser::Serialize for deno_web::EncodeIntoResult&gt;::serialize (6 samples, 0.11%)</title><rect x="91.6756%" y="1125" width="0.1076%" height="15" fill="rgb(225,225,68)" fg:x="5110" fg:w="6"/><text x="91.9256%" y="1135.50"></text></g><g><title>&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (2 samples, 0.04%)</title><rect x="91.7474%" y="1109" width="0.0359%" height="15" fill="rgb(178,178,51)" fg:x="5114" fg:w="2"/><text x="91.9974%" y="1119.50"></text></g><g><title>v8::array_buffer::&lt;impl v8::data::ArrayBuffer&gt;::get_backing_store (1 samples, 0.02%)</title><rect x="91.7833%" y="1141" width="0.0179%" height="15" fill="rgb(226,226,68)" fg:x="5116" fg:w="1"/><text x="92.0333%" y="1151.50"></text></g><g><title>v8::array_buffer::BackingStore::is_shared (1 samples, 0.02%)</title><rect x="91.8012%" y="1141" width="0.0179%" height="15" fill="rgb(188,188,55)" fg:x="5117" fg:w="1"/><text x="92.0512%" y="1151.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_length (4 samples, 0.07%)</title><rect x="91.8192%" y="1141" width="0.0718%" height="15" fill="rgb(201,201,59)" fg:x="5118" fg:w="4"/><text x="92.0692%" y="1151.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_offset (1 samples, 0.02%)</title><rect x="91.8909%" y="1141" width="0.0179%" height="15" fill="rgb(184,184,53)" fg:x="5122" fg:w="1"/><text x="92.1409%" y="1151.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::ArrayBufferView&gt;&gt;::try_from (1 samples, 0.02%)</title><rect x="91.9089%" y="1141" width="0.0179%" height="15" fill="rgb(221,221,66)" fg:x="5123" fg:w="1"/><text x="92.1589%" y="1151.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_array_buffer_view (1 samples, 0.02%)</title><rect x="91.9089%" y="1125" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="5123" fg:w="1"/><text x="92.1589%" y="1135.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::String&gt;&gt;::try_from (5 samples, 0.09%)</title><rect x="91.9268%" y="1141" width="0.0897%" height="15" fill="rgb(194,194,56)" fg:x="5124" fg:w="5"/><text x="92.1768%" y="1151.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_string (5 samples, 0.09%)</title><rect x="91.9268%" y="1125" width="0.0897%" height="15" fill="rgb(187,187,54)" fg:x="5124" fg:w="5"/><text x="92.1768%" y="1135.50"></text></g><g><title>v8::external::&lt;impl v8::data::External&gt;::value (2 samples, 0.04%)</title><rect x="92.0165%" y="1141" width="0.0359%" height="15" fill="rgb(222,222,67)" fg:x="5129" fg:w="2"/><text x="92.2665%" y="1151.50"></text></g><g><title>v8::function::FunctionCallbackArguments::data (2 samples, 0.04%)</title><rect x="92.0524%" y="1141" width="0.0359%" height="15" fill="rgb(215,215,64)" fg:x="5131" fg:w="2"/><text x="92.3024%" y="1151.50"></text></g><g><title>deno_web::op_encoding_encode_into::v8_func (69 samples, 1.24%)</title><rect x="90.9939%" y="1157" width="1.2379%" height="15" fill="rgb(182,182,52)" fg:x="5072" fg:w="69"/><text x="91.2439%" y="1167.50"></text></g><g><title>v8::function::ReturnValue::set (8 samples, 0.14%)</title><rect x="92.0883%" y="1141" width="0.1435%" height="15" fill="rgb(215,215,64)" fg:x="5133" fg:w="8"/><text x="92.3383%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.05%)</title><rect x="92.3753%" y="1125" width="0.0538%" height="15" fill="rgb(191,191,56)" fg:x="5149" fg:w="3"/><text x="92.6253%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="92.3753%" y="1109" width="0.0538%" height="15" fill="rgb(217,217,65)" fg:x="5149" fg:w="3"/><text x="92.6253%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="92.3753%" y="1093" width="0.0538%" height="15" fill="rgb(193,193,56)" fg:x="5149" fg:w="3"/><text x="92.6253%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.05%)</title><rect x="92.3753%" y="1077" width="0.0538%" height="15" fill="rgb(183,183,53)" fg:x="5149" fg:w="3"/><text x="92.6253%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="92.3753%" y="1061" width="0.0538%" height="15" fill="rgb(197,197,58)" fg:x="5149" fg:w="3"/><text x="92.6253%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="92.3753%" y="1045" width="0.0538%" height="15" fill="rgb(189,189,55)" fg:x="5149" fg:w="3"/><text x="92.6253%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="92.3753%" y="1029" width="0.0538%" height="15" fill="rgb(194,194,57)" fg:x="5149" fg:w="3"/><text x="92.6253%" y="1039.50"></text></g><g><title>serde_v8::de::to_utf8 (13 samples, 0.23%)</title><rect x="92.2318%" y="1157" width="0.2332%" height="15" fill="rgb(197,197,58)" fg:x="5141" fg:w="13"/><text x="92.4818%" y="1167.50"></text></g><g><title>serde_v8::de::to_utf8_fast (9 samples, 0.16%)</title><rect x="92.3036%" y="1141" width="0.1615%" height="15" fill="rgb(180,180,52)" fg:x="5145" fg:w="9"/><text x="92.5536%" y="1151.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::length (2 samples, 0.04%)</title><rect x="92.4291%" y="1125" width="0.0359%" height="15" fill="rgb(192,192,56)" fg:x="5152" fg:w="2"/><text x="92.6791%" y="1135.50"></text></g><g><title>serde_v8::keys::v8_struct_key (6 samples, 0.11%)</title><rect x="92.4650%" y="1157" width="0.1076%" height="15" fill="rgb(184,184,53)" fg:x="5154" fg:w="6"/><text x="92.7150%" y="1167.50"></text></g><g><title>serde_v8::ser::ObjectSerializer::new (2 samples, 0.04%)</title><rect x="92.5727%" y="1157" width="0.0359%" height="15" fill="rgb(193,193,56)" fg:x="5160" fg:w="2"/><text x="92.8227%" y="1167.50"></text></g><g><title>std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;::sentry::~sentry (1 samples, 0.02%)</title><rect x="92.6085%" y="1157" width="0.0179%" height="15" fill="rgb(189,189,55)" fg:x="5162" fg:w="1"/><text x="92.8585%" y="1167.50"></text></g><g><title>std::__1::num_put&lt;char, std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt;::do_put (1 samples, 0.02%)</title><rect x="92.6265%" y="1157" width="0.0179%" height="15" fill="rgb(190,190,55)" fg:x="5163" fg:w="1"/><text x="92.8765%" y="1167.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (3 samples, 0.05%)</title><rect x="92.6444%" y="1157" width="0.0538%" height="15" fill="rgb(227,89,89)" fg:x="5164" fg:w="3"/><text x="92.8944%" y="1167.50"></text></g><g><title>v8::ArrayBuffer::GetBackingStore (26 samples, 0.47%)</title><rect x="92.6982%" y="1157" width="0.4665%" height="15" fill="rgb(211,211,63)" fg:x="5167" fg:w="26"/><text x="92.9482%" y="1167.50"></text></g><g><title>v8::ArrayBufferView::ByteLength (2 samples, 0.04%)</title><rect x="93.1647%" y="1157" width="0.0359%" height="15" fill="rgb(187,187,54)" fg:x="5193" fg:w="2"/><text x="93.4147%" y="1167.50"></text></g><g><title>v8::BackingStore::Data (4 samples, 0.07%)</title><rect x="93.2006%" y="1157" width="0.0718%" height="15" fill="rgb(181,181,52)" fg:x="5195" fg:w="4"/><text x="93.4506%" y="1167.50"></text></g><g><title>v8::BackingStore::IsShared (1 samples, 0.02%)</title><rect x="93.2723%" y="1157" width="0.0179%" height="15" fill="rgb(207,207,61)" fg:x="5199" fg:w="1"/><text x="93.5223%" y="1167.50"></text></g><g><title>v8::External::Value (3 samples, 0.05%)</title><rect x="93.2903%" y="1157" width="0.0538%" height="15" fill="rgb(214,214,64)" fg:x="5200" fg:w="3"/><text x="93.5403%" y="1167.50"></text></g><g><title>v8::Number::New (5 samples, 0.09%)</title><rect x="93.3441%" y="1157" width="0.0897%" height="15" fill="rgb(209,209,62)" fg:x="5203" fg:w="5"/><text x="93.5941%" y="1167.50"></text></g><g><title>v8::Object::New (2 samples, 0.04%)</title><rect x="93.4338%" y="1157" width="0.0359%" height="15" fill="rgb(218,218,65)" fg:x="5208" fg:w="2"/><text x="93.6838%" y="1167.50"></text></g><g><title>v8::String::Length (2 samples, 0.04%)</title><rect x="93.4697%" y="1157" width="0.0359%" height="15" fill="rgb(202,202,59)" fg:x="5210" fg:w="2"/><text x="93.7197%" y="1167.50"></text></g><g><title>v8::String::NewFromUtf8 (5 samples, 0.09%)</title><rect x="93.5056%" y="1157" width="0.0897%" height="15" fill="rgb(229,229,69)" fg:x="5212" fg:w="5"/><text x="93.7556%" y="1167.50"></text></g><g><title>v8::function::FunctionCallbackArguments::get (2 samples, 0.04%)</title><rect x="93.5953%" y="1157" width="0.0359%" height="15" fill="rgb(219,219,66)" fg:x="5217" fg:w="2"/><text x="93.8453%" y="1167.50"></text></g><g><title>v8::internal::Dictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::Add&lt;v8::internal::Isolate&gt; (4 samples, 0.07%)</title><rect x="93.6311%" y="1157" width="0.0718%" height="15" fill="rgb(189,189,55)" fg:x="5219" fg:w="4"/><text x="93.8811%" y="1167.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (8 samples, 0.14%)</title><rect x="93.7029%" y="1157" width="0.1435%" height="15" fill="rgb(196,196,57)" fg:x="5223" fg:w="8"/><text x="93.9529%" y="1167.50"></text></g><g><title>v8::internal::Factory::InitializeJSObjectBody (1 samples, 0.02%)</title><rect x="93.8464%" y="1157" width="0.0179%" height="15" fill="rgb(192,192,56)" fg:x="5231" fg:w="1"/><text x="94.0964%" y="1167.50"></text></g><g><title>v8::internal::Factory::NewMap (1 samples, 0.02%)</title><rect x="93.8644%" y="1157" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="5232" fg:w="1"/><text x="94.1144%" y="1167.50"></text></g><g><title>v8::internal::Factory::NewSlowJSObjectWithPropertiesAndElements (1 samples, 0.02%)</title><rect x="93.8823%" y="1157" width="0.0179%" height="15" fill="rgb(199,199,58)" fg:x="5233" fg:w="1"/><text x="94.1323%" y="1167.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (1 samples, 0.02%)</title><rect x="93.9003%" y="1157" width="0.0179%" height="15" fill="rgb(208,208,62)" fg:x="5234" fg:w="1"/><text x="94.1503%" y="1167.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithMap (6 samples, 0.11%)</title><rect x="93.9182%" y="1157" width="0.1076%" height="15" fill="rgb(229,229,69)" fg:x="5235" fg:w="6"/><text x="94.1682%" y="1167.50"></text></g><g><title>v8::internal::HashTable&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::EnsureCapacity&lt;v8::internal::Isolate&gt; (3 samples, 0.05%)</title><rect x="94.0258%" y="1157" width="0.0538%" height="15" fill="rgb(191,191,56)" fg:x="5241" fg:w="3"/><text x="94.2758%" y="1167.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (2 samples, 0.04%)</title><rect x="94.0797%" y="1157" width="0.0359%" height="15" fill="rgb(213,213,63)" fg:x="5244" fg:w="2"/><text x="94.3297%" y="1167.50"></text></g><g><title>v8::internal::Map::CopyReplaceDescriptors (2 samples, 0.04%)</title><rect x="94.1155%" y="1157" width="0.0359%" height="15" fill="rgb(191,191,55)" fg:x="5246" fg:w="2"/><text x="94.3655%" y="1167.50"></text></g><g><title>v8::internal::Map::GetVisitorId (1 samples, 0.02%)</title><rect x="94.1514%" y="1157" width="0.0179%" height="15" fill="rgb(201,201,59)" fg:x="5248" fg:w="1"/><text x="94.4014%" y="1167.50"></text></g><g><title>v8::internal::Map::RawCopy (22 samples, 0.39%)</title><rect x="94.1694%" y="1157" width="0.3947%" height="15" fill="rgb(183,183,52)" fg:x="5249" fg:w="22"/><text x="94.4194%" y="1167.50"></text></g><g><title>v8::internal::Map::SetInstanceDescriptors (1 samples, 0.02%)</title><rect x="94.5640%" y="1157" width="0.0179%" height="15" fill="rgb(203,203,60)" fg:x="5271" fg:w="1"/><text x="94.8140%" y="1167.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (1 samples, 0.02%)</title><rect x="94.5820%" y="1157" width="0.0179%" height="15" fill="rgb(205,205,61)" fg:x="5272" fg:w="1"/><text x="94.8320%" y="1167.50"></text></g><g><title>v8::internal::RootVisitor::VisitRunningCode (1 samples, 0.02%)</title><rect x="94.5999%" y="1157" width="0.0179%" height="15" fill="rgb(180,180,51)" fg:x="5273" fg:w="1"/><text x="94.8499%" y="1167.50"></text></g><g><title>v8::internal::StackFrame::LookupCodeT (1 samples, 0.02%)</title><rect x="94.6179%" y="1157" width="0.0179%" height="15" fill="rgb(216,216,65)" fg:x="5274" fg:w="1"/><text x="94.8679%" y="1167.50"></text></g><g><title>v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (3 samples, 0.05%)</title><rect x="94.6358%" y="1157" width="0.0538%" height="15" fill="rgb(211,211,63)" fg:x="5275" fg:w="3"/><text x="94.8858%" y="1167.50"></text></g><g><title>v8::internal::TransitionsAccessor::GetPrototypeTransition (1 samples, 0.02%)</title><rect x="94.6896%" y="1157" width="0.0179%" height="15" fill="rgb(198,198,58)" fg:x="5278" fg:w="1"/><text x="94.9396%" y="1167.50"></text></g><g><title>v8::internal::Utf8DecoderBase&lt;v8::internal::Utf8Decoder&gt;::Utf8DecoderBase (11 samples, 0.20%)</title><rect x="94.7076%" y="1157" width="0.1973%" height="15" fill="rgb(216,216,65)" fg:x="5279" fg:w="11"/><text x="94.9576%" y="1167.50"></text></g><g><title>v8::internal::wasm::GetWasmCodeManager (1 samples, 0.02%)</title><rect x="94.9049%" y="1157" width="0.0179%" height="15" fill="rgb(202,202,60)" fg:x="5290" fg:w="1"/><text x="95.1549%" y="1167.50"></text></g><g><title>v8::number::&lt;impl v8::data::Number&gt;::new (10 samples, 0.18%)</title><rect x="94.9229%" y="1157" width="0.1794%" height="15" fill="rgb(192,192,56)" fg:x="5291" fg:w="10"/><text x="95.1729%" y="1167.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (3 samples, 0.05%)</title><rect x="95.0484%" y="1141" width="0.0538%" height="15" fill="rgb(205,205,60)" fg:x="5298" fg:w="3"/><text x="95.2984%" y="1151.50"></text></g><g><title>v8::number::_&lt;impl v8::data::Number&gt;::new::_{{closure}} (3 samples, 0.05%)</title><rect x="95.0484%" y="1125" width="0.0538%" height="15" fill="rgb(220,220,66)" fg:x="5298" fg:w="3"/><text x="95.2984%" y="1135.50"></text></g><g><title>v8::primitives::null (1 samples, 0.02%)</title><rect x="95.1023%" y="1157" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="5301" fg:w="1"/><text x="95.3523%" y="1167.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (1 samples, 0.02%)</title><rect x="95.1023%" y="1141" width="0.0179%" height="15" fill="rgb(222,222,67)" fg:x="5301" fg:w="1"/><text x="95.3523%" y="1151.50"></text></g><g><title>v8::primitives::null::_{{closure}} (1 samples, 0.02%)</title><rect x="95.1023%" y="1125" width="0.0179%" height="15" fill="rgb(221,221,66)" fg:x="5301" fg:w="1"/><text x="95.3523%" y="1135.50"></text></g><g><title>v8::scope::data::ScopeData::get_current_mut (3 samples, 0.05%)</title><rect x="95.1202%" y="1157" width="0.0538%" height="15" fill="rgb(183,183,53)" fg:x="5302" fg:w="3"/><text x="95.3702%" y="1167.50"></text></g><g><title>v8::scope::data::ScopeData::new_callback_scope_data (3 samples, 0.05%)</title><rect x="95.1740%" y="1157" width="0.0538%" height="15" fill="rgb(206,206,61)" fg:x="5305" fg:w="3"/><text x="95.4240%" y="1167.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (5 samples, 0.09%)</title><rect x="95.2278%" y="1157" width="0.0897%" height="15" fill="rgb(207,207,61)" fg:x="5308" fg:w="5"/><text x="95.4778%" y="1167.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::new_from_utf8 (6 samples, 0.11%)</title><rect x="95.3175%" y="1157" width="0.1076%" height="15" fill="rgb(229,229,69)" fg:x="5313" fg:w="6"/><text x="95.5675%" y="1167.50"></text></g><g><title>v8__ArrayBuffer__GetBackingStore (2 samples, 0.04%)</title><rect x="95.4252%" y="1157" width="0.0359%" height="15" fill="rgb(201,52,52)" fg:x="5319" fg:w="2"/><text x="95.6752%" y="1167.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (2 samples, 0.04%)</title><rect x="95.4611%" y="1157" width="0.0359%" height="15" fill="rgb(217,76,76)" fg:x="5321" fg:w="2"/><text x="95.7111%" y="1167.50"></text></g><g><title>v8__FunctionCallbackInfo__GetIsolate (1 samples, 0.02%)</title><rect x="95.4970%" y="1157" width="0.0179%" height="15" fill="rgb(204,57,57)" fg:x="5323" fg:w="1"/><text x="95.7470%" y="1167.50"></text></g><g><title>v8__Isolate__GetData (2 samples, 0.04%)</title><rect x="95.5149%" y="1157" width="0.0359%" height="15" fill="rgb(206,59,59)" fg:x="5324" fg:w="2"/><text x="95.7649%" y="1167.50"></text></g><g><title>v8__Isolate__SetData (2 samples, 0.04%)</title><rect x="95.5508%" y="1157" width="0.0359%" height="15" fill="rgb(209,64,64)" fg:x="5326" fg:w="2"/><text x="95.8008%" y="1167.50"></text></g><g><title>v8__Number__New (6 samples, 0.11%)</title><rect x="95.5867%" y="1157" width="0.1076%" height="15" fill="rgb(246,117,117)" fg:x="5328" fg:w="6"/><text x="95.8367%" y="1167.50"></text></g><g><title>v8__Object__New__with_prototype_and_properties (1 samples, 0.02%)</title><rect x="95.6943%" y="1157" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="5334" fg:w="1"/><text x="95.9443%" y="1167.50"></text></g><g><title>v8__ReturnValue__Set (2 samples, 0.04%)</title><rect x="95.7122%" y="1157" width="0.0359%" height="15" fill="rgb(235,101,101)" fg:x="5335" fg:w="2"/><text x="95.9622%" y="1167.50"></text></g><g><title>v8__Value__IsArrayBufferView (3 samples, 0.05%)</title><rect x="95.7481%" y="1157" width="0.0538%" height="15" fill="rgb(232,97,97)" fg:x="5337" fg:w="3"/><text x="95.9981%" y="1167.50"></text></g><g><title>[[stack]] (313 samples, 5.62%)</title><rect x="90.2045%" y="1173" width="5.6154%" height="15" fill="rgb(205,58,58)" fg:x="5028" fg:w="313"/><text x="90.4545%" y="1183.50">[[stack..</text></g><g><title>v8__Value__IsString (1 samples, 0.02%)</title><rect x="95.8019%" y="1157" width="0.0179%" height="15" fill="rgb(247,119,119)" fg:x="5340" fg:w="1"/><text x="96.0519%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (2 samples, 0.04%)</title><rect x="95.8199%" y="1157" width="0.0359%" height="15" fill="rgb(214,214,64)" fg:x="5341" fg:w="2"/><text x="96.0699%" y="1167.50"></text></g><g><title>deno_web::op_encoding_encode_into::v8_func (1 samples, 0.02%)</title><rect x="95.8558%" y="1157" width="0.0179%" height="15" fill="rgb(175,175,50)" fg:x="5343" fg:w="1"/><text x="96.1058%" y="1167.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (1 samples, 0.02%)</title><rect x="95.8737%" y="1157" width="0.0179%" height="15" fill="rgb(219,77,77)" fg:x="5344" fg:w="1"/><text x="96.1237%" y="1167.50"></text></g><g><title>v8::ArrayBufferView::ByteOffset (1 samples, 0.02%)</title><rect x="95.8916%" y="1157" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="5345" fg:w="1"/><text x="96.1416%" y="1167.50"></text></g><g><title>v8::internal::(anonymous namespace)::KeyIsMatch&lt;v8::internal::Isolate, v8::internal::SequentialStringKey&lt;unsigned char&gt; &gt; (1 samples, 0.02%)</title><rect x="95.9096%" y="1157" width="0.0179%" height="15" fill="rgb(181,181,52)" fg:x="5346" fg:w="1"/><text x="96.1596%" y="1167.50"></text></g><g><title>v8::internal::BaseNameDictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::Add (3 samples, 0.05%)</title><rect x="95.9275%" y="1157" width="0.0538%" height="15" fill="rgb(199,199,58)" fg:x="5347" fg:w="3"/><text x="96.1775%" y="1167.50"></text></g><g><title>v8::internal::Factory::InitializeMap (1 samples, 0.02%)</title><rect x="95.9813%" y="1157" width="0.0179%" height="15" fill="rgb(179,179,51)" fg:x="5350" fg:w="1"/><text x="96.2313%" y="1167.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="95.9813%" y="1141" width="0.0179%" height="15" fill="rgb(220,79,79)" fg:x="5350" fg:w="1"/><text x="96.2313%" y="1151.50"></text></g><g><title>v8::internal::HashTable&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::EnsureCapacity&lt;v8::internal::Isolate&gt; (1 samples, 0.02%)</title><rect x="95.9993%" y="1157" width="0.0179%" height="15" fill="rgb(196,196,57)" fg:x="5351" fg:w="1"/><text x="96.2493%" y="1167.50"></text></g><g><title>v8::internal::PrototypeBenefitsFromNormalization (1 samples, 0.02%)</title><rect x="96.0172%" y="1157" width="0.0179%" height="15" fill="rgb(188,188,55)" fg:x="5352" fg:w="1"/><text x="96.2672%" y="1167.50"></text></g><g><title>v8__ArrayBufferView__Buffer (2 samples, 0.04%)</title><rect x="96.0352%" y="1157" width="0.0359%" height="15" fill="rgb(202,54,54)" fg:x="5353" fg:w="2"/><text x="96.2852%" y="1167.50"></text></g><g><title>v8__ArrayBufferView__ByteOffset (1 samples, 0.02%)</title><rect x="96.0710%" y="1157" width="0.0179%" height="15" fill="rgb(230,94,94)" fg:x="5355" fg:w="1"/><text x="96.3210%" y="1167.50"></text></g><g><title>[anon] (17 samples, 0.30%)</title><rect x="95.8199%" y="1173" width="0.3050%" height="15" fill="rgb(208,61,61)" fg:x="5341" fg:w="17"/><text x="96.0699%" y="1183.50"></text></g><g><title>v8__ArrayBuffer__GetBackingStore (2 samples, 0.04%)</title><rect x="96.0890%" y="1157" width="0.0359%" height="15" fill="rgb(251,125,125)" fg:x="5356" fg:w="2"/><text x="96.3390%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="96.1249%" y="1157" width="0.0179%" height="15" fill="rgb(220,220,66)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1167.50"></text></g><g><title>deno::worker::create_main_worker::_{{closure}} (1 samples, 0.02%)</title><rect x="96.1249%" y="1141" width="0.0179%" height="15" fill="rgb(178,178,51)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1151.50"></text></g><g><title>deno_runtime::worker::MainWorker::bootstrap_from_options (1 samples, 0.02%)</title><rect x="96.1249%" y="1125" width="0.0179%" height="15" fill="rgb(198,198,58)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1135.50"></text></g><g><title>deno_runtime::worker::MainWorker::from_options (1 samples, 0.02%)</title><rect x="96.1249%" y="1109" width="0.0179%" height="15" fill="rgb(227,227,69)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1119.50"></text></g><g><title>deno_core::runtime::JsRuntime::new (1 samples, 0.02%)</title><rect x="96.1249%" y="1093" width="0.0179%" height="15" fill="rgb(189,189,55)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1103.50"></text></g><g><title>v8::isolate::Isolate::new (1 samples, 0.02%)</title><rect x="96.1249%" y="1077" width="0.0179%" height="15" fill="rgb(178,178,51)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1087.50"></text></g><g><title>v8::Isolate::New (1 samples, 0.02%)</title><rect x="96.1249%" y="1061" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1071.50"></text></g><g><title>v8::Isolate::Initialize (1 samples, 0.02%)</title><rect x="96.1249%" y="1045" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1055.50"></text></g><g><title>v8::internal::Snapshot::Initialize (1 samples, 0.02%)</title><rect x="96.1249%" y="1029" width="0.0179%" height="15" fill="rgb(180,180,52)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1039.50"></text></g><g><title>v8::internal::Isolate::InitWithSnapshot (1 samples, 0.02%)</title><rect x="96.1249%" y="1013" width="0.0179%" height="15" fill="rgb(219,219,66)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1023.50"></text></g><g><title>v8::internal::Isolate::Init (1 samples, 0.02%)</title><rect x="96.1249%" y="997" width="0.0179%" height="15" fill="rgb(216,216,65)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="1007.50"></text></g><g><title>v8::internal::V8FileLogger::LateSetup (1 samples, 0.02%)</title><rect x="96.1249%" y="981" width="0.0179%" height="15" fill="rgb(224,224,67)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="991.50"></text></g><g><title>v8::internal::Builtins::EmitCodeCreateEvents (1 samples, 0.02%)</title><rect x="96.1249%" y="965" width="0.0179%" height="15" fill="rgb(225,225,68)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="975.50"></text></g><g><title>v8::base::OS::FPrint (1 samples, 0.02%)</title><rect x="96.1249%" y="949" width="0.0179%" height="15" fill="rgb(217,217,65)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="959.50"></text></g><g><title>___vfprintf_chk (1 samples, 0.02%)</title><rect x="96.1249%" y="933" width="0.0179%" height="15" fill="rgb(251,125,125)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="943.50"></text></g><g><title>_IO_vfprintf_internal (1 samples, 0.02%)</title><rect x="96.1249%" y="917" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="927.50"></text></g><g><title>_IO_new_file_xsputn (1 samples, 0.02%)</title><rect x="96.1249%" y="901" width="0.0179%" height="15" fill="rgb(245,115,115)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="911.50"></text></g><g><title>_IO_new_do_write (1 samples, 0.02%)</title><rect x="96.1249%" y="885" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="895.50"></text></g><g><title>new_do_write (1 samples, 0.02%)</title><rect x="96.1249%" y="869" width="0.0179%" height="15" fill="rgb(217,75,75)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="879.50"></text></g><g><title>_IO_new_file_write (1 samples, 0.02%)</title><rect x="96.1249%" y="853" width="0.0179%" height="15" fill="rgb(212,68,68)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="863.50"></text></g><g><title>__GI___libc_write (1 samples, 0.02%)</title><rect x="96.1249%" y="837" width="0.0179%" height="15" fill="rgb(240,108,108)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="96.1249%" y="821" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="831.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="96.1249%" y="805" width="0.0179%" height="15" fill="rgb(229,92,92)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="815.50"></text></g><g><title>__x64_sys_write (1 samples, 0.02%)</title><rect x="96.1249%" y="789" width="0.0179%" height="15" fill="rgb(219,78,78)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="799.50"></text></g><g><title>ksys_write (1 samples, 0.02%)</title><rect x="96.1249%" y="773" width="0.0179%" height="15" fill="rgb(228,91,91)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="783.50"></text></g><g><title>vfs_write (1 samples, 0.02%)</title><rect x="96.1249%" y="757" width="0.0179%" height="15" fill="rgb(242,112,112)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="767.50"></text></g><g><title>__vfs_write (1 samples, 0.02%)</title><rect x="96.1249%" y="741" width="0.0179%" height="15" fill="rgb(233,99,99)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="751.50"></text></g><g><title>new_sync_write (1 samples, 0.02%)</title><rect x="96.1249%" y="725" width="0.0179%" height="15" fill="rgb(205,57,57)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="735.50"></text></g><g><title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="96.1249%" y="709" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="719.50"></text></g><g><title>__generic_file_write_iter (1 samples, 0.02%)</title><rect x="96.1249%" y="693" width="0.0179%" height="15" fill="rgb(202,52,52)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="703.50"></text></g><g><title>generic_perform_write (1 samples, 0.02%)</title><rect x="96.1249%" y="677" width="0.0179%" height="15" fill="rgb(204,55,55)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="687.50"></text></g><g><title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="96.1249%" y="661" width="0.0179%" height="15" fill="rgb(250,122,122)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="671.50"></text></g><g><title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="96.1249%" y="645" width="0.0179%" height="15" fill="rgb(254,129,129)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="655.50"></text></g><g><title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="96.1249%" y="629" width="0.0179%" height="15" fill="rgb(220,79,79)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="639.50"></text></g><g><title>start_this_handle (1 samples, 0.02%)</title><rect x="96.1249%" y="613" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="5358" fg:w="1"/><text x="96.3749%" y="623.50"></text></g><g><title>&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_u64 (6 samples, 0.11%)</title><rect x="96.1428%" y="1157" width="0.1076%" height="15" fill="rgb(201,201,59)" fg:x="5359" fg:w="6"/><text x="96.3928%" y="1167.50"></text></g><g><title>&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::end (7 samples, 0.13%)</title><rect x="96.2504%" y="1157" width="0.1256%" height="15" fill="rgb(224,224,67)" fg:x="5365" fg:w="7"/><text x="96.5004%" y="1167.50"></text></g><g><title>&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.13%)</title><rect x="96.3760%" y="1157" width="0.1256%" height="15" fill="rgb(215,215,64)" fg:x="5372" fg:w="7"/><text x="96.6260%" y="1167.50"></text></g><g><title>__GI___libc_free (5 samples, 0.09%)</title><rect x="96.5016%" y="1157" width="0.0897%" height="15" fill="rgb(225,86,86)" fg:x="5379" fg:w="5"/><text x="96.7516%" y="1167.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="96.5913%" y="1157" width="0.0359%" height="15" fill="rgb(254,128,128)" fg:x="5384" fg:w="2"/><text x="96.8413%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;dyn core::ops::function::FnMut&lt;(&amp;str,)&gt;+Output = core::result::Result&lt;(),alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Send+core::marker::Sync&gt;&gt;+core::marker::Send&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="96.6272%" y="1157" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="5386" fg:w="1"/><text x="96.8772%" y="1167.50"></text></g><g><title>Builtins_CallApiCallback (15 samples, 0.27%)</title><rect x="96.6451%" y="821" width="0.2691%" height="15" fill="rgb(234,100,100)" fg:x="5387" fg:w="15"/><text x="96.8951%" y="831.50"></text></g><g><title>v8::internal::Isolate::FireCallCompletedCallbackInternal (37 samples, 0.66%)</title><rect x="96.6451%" y="981" width="0.6638%" height="15" fill="rgb(189,189,55)" fg:x="5387" fg:w="37"/><text x="96.8951%" y="991.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (37 samples, 0.66%)</title><rect x="96.6451%" y="965" width="0.6638%" height="15" fill="rgb(205,205,60)" fg:x="5387" fg:w="37"/><text x="96.8951%" y="975.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (37 samples, 0.66%)</title><rect x="96.6451%" y="949" width="0.6638%" height="15" fill="rgb(221,221,67)" fg:x="5387" fg:w="37"/><text x="96.8951%" y="959.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (37 samples, 0.66%)</title><rect x="96.6451%" y="933" width="0.6638%" height="15" fill="rgb(186,186,54)" fg:x="5387" fg:w="37"/><text x="96.8951%" y="943.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (37 samples, 0.66%)</title><rect x="96.6451%" y="917" width="0.6638%" height="15" fill="rgb(199,199,59)" fg:x="5387" fg:w="37"/><text x="96.8951%" y="927.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (37 samples, 0.66%)</title><rect x="96.6451%" y="901" width="0.6638%" height="15" fill="rgb(211,211,63)" fg:x="5387" fg:w="37"/><text x="96.8951%" y="911.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (37 samples, 0.66%)</title><rect x="96.6451%" y="885" width="0.6638%" height="15" fill="rgb(214,70,70)" fg:x="5387" fg:w="37"/><text x="96.8951%" y="895.50"></text></g><g><title>Builtins_RunMicrotasks (37 samples, 0.66%)</title><rect x="96.6451%" y="869" width="0.6638%" height="15" fill="rgb(248,120,120)" fg:x="5387" fg:w="37"/><text x="96.8951%" y="879.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (37 samples, 0.66%)</title><rect x="96.6451%" y="853" width="0.6638%" height="15" fill="rgb(219,78,78)" fg:x="5387" fg:w="37"/><text x="96.8951%" y="863.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (37 samples, 0.66%)</title><rect x="96.6451%" y="837" width="0.6638%" height="15" fill="rgb(210,64,64)" fg:x="5387" fg:w="37"/><text x="96.8951%" y="847.50"></text></g><g><title>Builtins_LoadIC (22 samples, 0.39%)</title><rect x="96.9142%" y="821" width="0.3947%" height="15" fill="rgb(206,59,59)" fg:x="5402" fg:w="22"/><text x="97.1642%" y="831.50"></text></g><g><title>Builtins_CallApiCallback (2 samples, 0.04%)</title><rect x="97.3089%" y="805" width="0.0359%" height="15" fill="rgb(214,71,71)" fg:x="5424" fg:w="2"/><text x="97.5589%" y="815.50"></text></g><g><title>serde_v8::de::to_utf8 (1 samples, 0.02%)</title><rect x="97.3448%" y="661" width="0.0179%" height="15" fill="rgb(216,216,65)" fg:x="5426" fg:w="1"/><text x="97.5948%" y="671.50"></text></g><g><title>serde_v8::de::to_utf8_fast (1 samples, 0.02%)</title><rect x="97.3448%" y="645" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="5426" fg:w="1"/><text x="97.5948%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="97.3448%" y="629" width="0.0179%" height="15" fill="rgb(196,196,57)" fg:x="5426" fg:w="1"/><text x="97.5948%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="97.3448%" y="613" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="5426" fg:w="1"/><text x="97.5948%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="97.3448%" y="597" width="0.0179%" height="15" fill="rgb(205,205,61)" fg:x="5426" fg:w="1"/><text x="97.5948%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="97.3448%" y="581" width="0.0179%" height="15" fill="rgb(198,198,58)" fg:x="5426" fg:w="1"/><text x="97.5948%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="97.3448%" y="565" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="5426" fg:w="1"/><text x="97.5948%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="97.3448%" y="549" width="0.0179%" height="15" fill="rgb(219,219,66)" fg:x="5426" fg:w="1"/><text x="97.5948%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="97.3448%" y="533" width="0.0179%" height="15" fill="rgb(185,185,53)" fg:x="5426" fg:w="1"/><text x="97.5948%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="97.3448%" y="517" width="0.0179%" height="15" fill="rgb(200,50,50)" fg:x="5426" fg:w="1"/><text x="97.5948%" y="527.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (2 samples, 0.04%)</title><rect x="97.3448%" y="805" width="0.0359%" height="15" fill="rgb(204,56,56)" fg:x="5426" fg:w="2"/><text x="97.5948%" y="815.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (2 samples, 0.04%)</title><rect x="97.3448%" y="789" width="0.0359%" height="15" fill="rgb(243,112,112)" fg:x="5426" fg:w="2"/><text x="97.5948%" y="799.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (2 samples, 0.04%)</title><rect x="97.3448%" y="773" width="0.0359%" height="15" fill="rgb(228,91,91)" fg:x="5426" fg:w="2"/><text x="97.5948%" y="783.50"></text></g><g><title>v8::internal::Builtin_HandleApiCall (2 samples, 0.04%)</title><rect x="97.3448%" y="757" width="0.0359%" height="15" fill="rgb(228,228,69)" fg:x="5426" fg:w="2"/><text x="97.5948%" y="767.50"></text></g><g><title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (2 samples, 0.04%)</title><rect x="97.3448%" y="741" width="0.0359%" height="15" fill="rgb(182,182,52)" fg:x="5426" fg:w="2"/><text x="97.5948%" y="751.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (2 samples, 0.04%)</title><rect x="97.3448%" y="725" width="0.0359%" height="15" fill="rgb(193,193,56)" fg:x="5426" fg:w="2"/><text x="97.5948%" y="735.50"></text></g><g><title>v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}} (2 samples, 0.04%)</title><rect x="97.3448%" y="709" width="0.0359%" height="15" fill="rgb(192,192,56)" fg:x="5426" fg:w="2"/><text x="97.5948%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.04%)</title><rect x="97.3448%" y="693" width="0.0359%" height="15" fill="rgb(199,199,58)" fg:x="5426" fg:w="2"/><text x="97.5948%" y="703.50"></text></g><g><title>deno_web::op_encoding_encode_into::v8_func (2 samples, 0.04%)</title><rect x="97.3448%" y="677" width="0.0359%" height="15" fill="rgb(176,176,50)" fg:x="5426" fg:w="2"/><text x="97.5948%" y="687.50"></text></g><g><title>serde_v8::ser::to_v8 (1 samples, 0.02%)</title><rect x="97.3628%" y="661" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="671.50"></text></g><g><title>deno_web::_::&lt;impl serde::ser::Serialize for deno_web::EncodeIntoResult&gt;::serialize (1 samples, 0.02%)</title><rect x="97.3628%" y="645" width="0.0179%" height="15" fill="rgb(228,228,69)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="655.50"></text></g><g><title>&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::end (1 samples, 0.02%)</title><rect x="97.3628%" y="629" width="0.0179%" height="15" fill="rgb(222,222,67)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="639.50"></text></g><g><title>&lt;serde_v8::ser::ObjectSerializer as serde::ser::SerializeStruct&gt;::end (1 samples, 0.02%)</title><rect x="97.3628%" y="613" width="0.0179%" height="15" fill="rgb(186,186,54)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="623.50"></text></g><g><title>v8::object::&lt;impl v8::data::Object&gt;::with_prototype_and_properties (1 samples, 0.02%)</title><rect x="97.3628%" y="597" width="0.0179%" height="15" fill="rgb(190,190,55)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="607.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (1 samples, 0.02%)</title><rect x="97.3628%" y="581" width="0.0179%" height="15" fill="rgb(204,204,60)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="591.50"></text></g><g><title>v8::object::_&lt;impl v8::data::Object&gt;::with_prototype_and_properties::_{{closure}} (1 samples, 0.02%)</title><rect x="97.3628%" y="565" width="0.0179%" height="15" fill="rgb(191,191,56)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="575.50"></text></g><g><title>v8::Object::New (1 samples, 0.02%)</title><rect x="97.3628%" y="549" width="0.0179%" height="15" fill="rgb(195,195,57)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="559.50"></text></g><g><title>v8::internal::Factory::NewSlowJSObjectWithPropertiesAndElements (1 samples, 0.02%)</title><rect x="97.3628%" y="533" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="543.50"></text></g><g><title>v8::internal::Map::TransitionToPrototype (1 samples, 0.02%)</title><rect x="97.3628%" y="517" width="0.0179%" height="15" fill="rgb(179,179,51)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="527.50"></text></g><g><title>v8::internal::Map::CopyReplaceDescriptors (1 samples, 0.02%)</title><rect x="97.3628%" y="501" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="511.50"></text></g><g><title>v8::internal::Map::RawCopy (1 samples, 0.02%)</title><rect x="97.3628%" y="485" width="0.0179%" height="15" fill="rgb(217,217,65)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="495.50"></text></g><g><title>v8::internal::Factory::NewMap (1 samples, 0.02%)</title><rect x="97.3628%" y="469" width="0.0179%" height="15" fill="rgb(221,221,66)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="479.50"></text></g><g><title>v8::internal::Factory::InitializeMap (1 samples, 0.02%)</title><rect x="97.3628%" y="453" width="0.0179%" height="15" fill="rgb(214,214,64)" fg:x="5427" fg:w="1"/><text x="97.6128%" y="463.50"></text></g><g><title>deno::worker::CliMainWorker::evaluate_module_possibly_with_npm::_{{closure}} (49 samples, 0.88%)</title><rect x="96.6451%" y="1061" width="0.8791%" height="15" fill="rgb(181,181,52)" fg:x="5387" fg:w="49"/><text x="96.8951%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.88%)</title><rect x="96.6451%" y="1045" width="0.8791%" height="15" fill="rgb(211,211,63)" fg:x="5387" fg:w="49"/><text x="96.8951%" y="1055.50"></text></g><g><title>deno_runtime::worker::MainWorker::evaluate_module::_{{closure}} (49 samples, 0.88%)</title><rect x="96.6451%" y="1029" width="0.8791%" height="15" fill="rgb(223,223,67)" fg:x="5387" fg:w="49"/><text x="96.8951%" y="1039.50"></text></g><g><title>deno_core::runtime::JsRuntime::mod_evaluate (49 samples, 0.88%)</title><rect x="96.6451%" y="1013" width="0.8791%" height="15" fill="rgb(214,214,64)" fg:x="5387" fg:w="49"/><text x="96.8951%" y="1023.50"></text></g><g><title>v8::Module::Evaluate (49 samples, 0.88%)</title><rect x="96.6451%" y="997" width="0.8791%" height="15" fill="rgb(223,223,67)" fg:x="5387" fg:w="49"/><text x="96.8951%" y="1007.50"></text></g><g><title>v8::internal::SourceTextModule::Evaluate (12 samples, 0.22%)</title><rect x="97.3089%" y="981" width="0.2153%" height="15" fill="rgb(213,213,63)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="991.50"></text></g><g><title>v8::internal::SourceTextModule::InnerModuleEvaluation (12 samples, 0.22%)</title><rect x="97.3089%" y="965" width="0.2153%" height="15" fill="rgb(218,218,65)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="975.50"></text></g><g><title>v8::internal::SourceTextModule::ExecuteModule (12 samples, 0.22%)</title><rect x="97.3089%" y="949" width="0.2153%" height="15" fill="rgb(221,221,66)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="959.50"></text></g><g><title>v8::internal::Execution::TryCall (12 samples, 0.22%)</title><rect x="97.3089%" y="933" width="0.2153%" height="15" fill="rgb(206,206,61)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="943.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (12 samples, 0.22%)</title><rect x="97.3089%" y="917" width="0.2153%" height="15" fill="rgb(190,190,55)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="927.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (12 samples, 0.22%)</title><rect x="97.3089%" y="901" width="0.2153%" height="15" fill="rgb(218,218,65)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="911.50"></text></g><g><title>Builtins_JSEntry (12 samples, 0.22%)</title><rect x="97.3089%" y="885" width="0.2153%" height="15" fill="rgb(211,66,66)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="895.50"></text></g><g><title>Builtins_JSEntryTrampoline (12 samples, 0.22%)</title><rect x="97.3089%" y="869" width="0.2153%" height="15" fill="rgb(211,66,66)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="879.50"></text></g><g><title>Builtins_GeneratorPrototypeNext (12 samples, 0.22%)</title><rect x="97.3089%" y="853" width="0.2153%" height="15" fill="rgb(239,107,107)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="863.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (12 samples, 0.22%)</title><rect x="97.3089%" y="837" width="0.2153%" height="15" fill="rgb(221,81,81)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="847.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (12 samples, 0.22%)</title><rect x="97.3089%" y="821" width="0.2153%" height="15" fill="rgb(228,90,90)" fg:x="5424" fg:w="12"/><text x="97.5589%" y="831.50"></text></g><g><title>Builtins_LoadIC (8 samples, 0.14%)</title><rect x="97.3807%" y="805" width="0.1435%" height="15" fill="rgb(234,100,100)" fg:x="5428" fg:w="8"/><text x="97.6307%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.90%)</title><rect x="96.6451%" y="1109" width="0.8970%" height="15" fill="rgb(180,180,52)" fg:x="5387" fg:w="50"/><text x="96.8951%" y="1119.50"></text></g><g><title>deno::worker::CliMainWorker::execute_main_module_possibly_with_npm::_{{closure}} (50 samples, 0.90%)</title><rect x="96.6451%" y="1093" width="0.8970%" height="15" fill="rgb(193,193,56)" fg:x="5387" fg:w="50"/><text x="96.8951%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.90%)</title><rect x="96.6451%" y="1077" width="0.8970%" height="15" fill="rgb(213,213,63)" fg:x="5387" fg:w="50"/><text x="96.8951%" y="1087.50"></text></g><g><title>deno_runtime::worker::MainWorker::preload_main_module::_{{closure}} (1 samples, 0.02%)</title><rect x="97.5242%" y="1061" width="0.0179%" height="15" fill="rgb(203,203,60)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="97.5242%" y="1045" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="1055.50"></text></g><g><title>deno_core::runtime::JsRuntime::load_main_module::_{{closure}} (1 samples, 0.02%)</title><rect x="97.5242%" y="1029" width="0.0179%" height="15" fill="rgb(181,181,52)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="97.5242%" y="1013" width="0.0179%" height="15" fill="rgb(182,182,52)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="1023.50"></text></g><g><title>deno_core::modules::ModuleMap::load_main::_{{closure}} (1 samples, 0.02%)</title><rect x="97.5242%" y="997" width="0.0179%" height="15" fill="rgb(189,189,55)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="97.5242%" y="981" width="0.0179%" height="15" fill="rgb(223,223,67)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="991.50"></text></g><g><title>deno_core::modules::RecursiveModuleLoad::prepare::_{{closure}} (1 samples, 0.02%)</title><rect x="97.5242%" y="965" width="0.0179%" height="15" fill="rgb(224,224,67)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="97.5242%" y="949" width="0.0179%" height="15" fill="rgb(191,191,55)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="97.5242%" y="933" width="0.0179%" height="15" fill="rgb(198,198,58)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="943.50"></text></g><g><title>&lt;deno::module_loader::CliModuleLoader as deno_core::modules::ModuleLoader&gt;::prepare_load::_{{closure}} (1 samples, 0.02%)</title><rect x="97.5242%" y="917" width="0.0179%" height="15" fill="rgb(202,202,59)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="97.5242%" y="901" width="0.0179%" height="15" fill="rgb(188,188,55)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="911.50"></text></g><g><title>deno::proc_state::ProcState::prepare_module_load::_{{closure}} (1 samples, 0.02%)</title><rect x="97.5242%" y="885" width="0.0179%" height="15" fill="rgb(191,191,56)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn deno_graph::analyzer::ModuleAnalyzer&gt;&gt; (1 samples, 0.02%)</title><rect x="97.5242%" y="869" width="0.0179%" height="15" fill="rgb(195,195,57)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;deno::cache::parsed_source::ParsedSourceCacheModuleAnalyzer&gt; (1 samples, 0.02%)</title><rect x="97.5242%" y="853" width="0.0179%" height="15" fill="rgb(184,184,53)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::Connection&gt; (1 samples, 0.02%)</title><rect x="97.5242%" y="837" width="0.0179%" height="15" fill="rgb(222,222,67)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;rusqlite::inner_connection::InnerConnection&gt;&gt; (1 samples, 0.02%)</title><rect x="97.5242%" y="821" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;rusqlite::inner_connection::InnerConnection&gt;&gt; (1 samples, 0.02%)</title><rect x="97.5242%" y="805" width="0.0179%" height="15" fill="rgb(222,222,67)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::inner_connection::InnerConnection&gt; (1 samples, 0.02%)</title><rect x="97.5242%" y="789" width="0.0179%" height="15" fill="rgb(185,185,53)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="799.50"></text></g><g><title>&lt;rusqlite::inner_connection::InnerConnection as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.5242%" y="773" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="783.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::close (1 samples, 0.02%)</title><rect x="97.5242%" y="757" width="0.0179%" height="15" fill="rgb(216,216,65)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="767.50"></text></g><g><title>sqlite3Close (1 samples, 0.02%)</title><rect x="97.5242%" y="741" width="0.0179%" height="15" fill="rgb(209,63,63)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="751.50"></text></g><g><title>sqlite3LeaveMutexAndCloseZombie (1 samples, 0.02%)</title><rect x="97.5242%" y="725" width="0.0179%" height="15" fill="rgb(209,63,63)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="735.50"></text></g><g><title>sqlite3BtreeClose (1 samples, 0.02%)</title><rect x="97.5242%" y="709" width="0.0179%" height="15" fill="rgb(224,85,85)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="719.50"></text></g><g><title>sqlite3PagerClose (1 samples, 0.02%)</title><rect x="97.5242%" y="693" width="0.0179%" height="15" fill="rgb(233,99,99)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="703.50"></text></g><g><title>sqlite3OsClose (1 samples, 0.02%)</title><rect x="97.5242%" y="677" width="0.0179%" height="15" fill="rgb(248,119,119)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="687.50"></text></g><g><title>unixClose (1 samples, 0.02%)</title><rect x="97.5242%" y="661" width="0.0179%" height="15" fill="rgb(229,92,92)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="671.50"></text></g><g><title>closeUnixFile (1 samples, 0.02%)</title><rect x="97.5242%" y="645" width="0.0179%" height="15" fill="rgb(252,127,127)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="655.50"></text></g><g><title>robust_close (1 samples, 0.02%)</title><rect x="97.5242%" y="629" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="639.50"></text></g><g><title>__close (1 samples, 0.02%)</title><rect x="97.5242%" y="613" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="97.5242%" y="597" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="97.5242%" y="581" width="0.0179%" height="15" fill="rgb(208,62,62)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="591.50"></text></g><g><title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="97.5242%" y="565" width="0.0179%" height="15" fill="rgb(210,64,64)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="575.50"></text></g><g><title>task_work_run (1 samples, 0.02%)</title><rect x="97.5242%" y="549" width="0.0179%" height="15" fill="rgb(210,65,65)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="559.50"></text></g><g><title>____fput (1 samples, 0.02%)</title><rect x="97.5242%" y="533" width="0.0179%" height="15" fill="rgb(249,121,121)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="543.50"></text></g><g><title>__fput (1 samples, 0.02%)</title><rect x="97.5242%" y="517" width="0.0179%" height="15" fill="rgb(240,108,108)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="527.50"></text></g><g><title>locks_remove_file (1 samples, 0.02%)</title><rect x="97.5242%" y="501" width="0.0179%" height="15" fill="rgb(215,73,73)" fg:x="5436" fg:w="1"/><text x="97.7742%" y="511.50"></text></g><g><title>Builtins_ConstructHandler (1 samples, 0.02%)</title><rect x="97.5422%" y="965" width="0.0179%" height="15" fill="rgb(229,92,92)" fg:x="5437" fg:w="1"/><text x="97.7922%" y="975.50"></text></g><g><title>construct_stub_create_deopt_addr (1 samples, 0.02%)</title><rect x="97.5422%" y="949" width="0.0179%" height="15" fill="rgb(215,71,71)" fg:x="5437" fg:w="1"/><text x="97.7922%" y="959.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="97.5422%" y="933" width="0.0179%" height="15" fill="rgb(201,51,51)" fg:x="5437" fg:w="1"/><text x="97.7922%" y="943.50"></text></g><g><title>Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="97.5422%" y="917" width="0.0179%" height="15" fill="rgb(221,81,81)" fg:x="5437" fg:w="1"/><text x="97.7922%" y="927.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="97.5422%" y="901" width="0.0179%" height="15" fill="rgb(237,104,104)" fg:x="5437" fg:w="1"/><text x="97.7922%" y="911.50"></text></g><g><title>v8::internal::Runtime_CompileLazy (1 samples, 0.02%)</title><rect x="97.5422%" y="885" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="5437" fg:w="1"/><text x="97.7922%" y="895.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="97.5422%" y="869" width="0.0179%" height="15" fill="rgb(214,214,64)" fg:x="5437" fg:w="1"/><text x="97.7922%" y="879.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="97.5422%" y="853" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="5437" fg:w="1"/><text x="97.7922%" y="863.50"></text></g><g><title>deno::worker::CliMainWorker::run::_{{closure}} (52 samples, 0.93%)</title><rect x="96.6451%" y="1125" width="0.9329%" height="15" fill="rgb(176,176,50)" fg:x="5387" fg:w="52"/><text x="96.8951%" y="1135.50"></text></g><g><title>deno_runtime::worker::MainWorker::execute_script (2 samples, 0.04%)</title><rect x="97.5422%" y="1109" width="0.0359%" height="15" fill="rgb(177,177,50)" fg:x="5437" fg:w="2"/><text x="97.7922%" y="1119.50"></text></g><g><title>deno_core::runtime::JsRuntime::execute_script (2 samples, 0.04%)</title><rect x="97.5422%" y="1093" width="0.0359%" height="15" fill="rgb(179,179,51)" fg:x="5437" fg:w="2"/><text x="97.7922%" y="1103.50"></text></g><g><title>deno_core::runtime::JsRealm::execute_script (2 samples, 0.04%)</title><rect x="97.5422%" y="1077" width="0.0359%" height="15" fill="rgb(176,176,50)" fg:x="5437" fg:w="2"/><text x="97.7922%" y="1087.50"></text></g><g><title>v8::Script::Run (2 samples, 0.04%)</title><rect x="97.5422%" y="1061" width="0.0359%" height="15" fill="rgb(179,179,51)" fg:x="5437" fg:w="2"/><text x="97.7922%" y="1071.50"></text></g><g><title>v8::internal::Execution::CallScript (2 samples, 0.04%)</title><rect x="97.5422%" y="1045" width="0.0359%" height="15" fill="rgb(215,215,64)" fg:x="5437" fg:w="2"/><text x="97.7922%" y="1055.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (2 samples, 0.04%)</title><rect x="97.5422%" y="1029" width="0.0359%" height="15" fill="rgb(198,198,58)" fg:x="5437" fg:w="2"/><text x="97.7922%" y="1039.50"></text></g><g><title>Builtins_JSEntry (2 samples, 0.04%)</title><rect x="97.5422%" y="1013" width="0.0359%" height="15" fill="rgb(218,77,77)" fg:x="5437" fg:w="2"/><text x="97.7922%" y="1023.50"></text></g><g><title>Builtins_JSEntryTrampoline (2 samples, 0.04%)</title><rect x="97.5422%" y="997" width="0.0359%" height="15" fill="rgb(204,56,56)" fg:x="5437" fg:w="2"/><text x="97.7922%" y="1007.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (2 samples, 0.04%)</title><rect x="97.5422%" y="981" width="0.0359%" height="15" fill="rgb(214,70,70)" fg:x="5437" fg:w="2"/><text x="97.7922%" y="991.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="97.5601%" y="965" width="0.0179%" height="15" fill="rgb(222,82,82)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="975.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="97.5601%" y="949" width="0.0179%" height="15" fill="rgb(241,110,110)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="959.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="97.5601%" y="933" width="0.0179%" height="15" fill="rgb(217,75,75)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="943.50"></text></g><g><title>Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="97.5601%" y="917" width="0.0179%" height="15" fill="rgb(229,93,93)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="927.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="97.5601%" y="901" width="0.0179%" height="15" fill="rgb(240,109,109)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="911.50"></text></g><g><title>v8::internal::Runtime_CompileLazy (1 samples, 0.02%)</title><rect x="97.5601%" y="885" width="0.0179%" height="15" fill="rgb(202,202,59)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="895.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="97.5601%" y="869" width="0.0179%" height="15" fill="rgb(185,185,53)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="879.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="97.5601%" y="853" width="0.0179%" height="15" fill="rgb(182,182,52)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="863.50"></text></g><g><title>v8::internal::parsing::ParseFunction (1 samples, 0.02%)</title><rect x="97.5601%" y="837" width="0.0179%" height="15" fill="rgb(192,192,56)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="847.50"></text></g><g><title>v8::internal::Parser::ParseFunction (1 samples, 0.02%)</title><rect x="97.5601%" y="821" width="0.0179%" height="15" fill="rgb(229,229,69)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="831.50"></text></g><g><title>v8::internal::Parser::DoParseFunction (1 samples, 0.02%)</title><rect x="97.5601%" y="805" width="0.0179%" height="15" fill="rgb(223,223,67)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="815.50"></text></g><g><title>v8::internal::Parser::ParseFunctionLiteral (1 samples, 0.02%)</title><rect x="97.5601%" y="789" width="0.0179%" height="15" fill="rgb(228,228,69)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="799.50"></text></g><g><title>v8::internal::Parser::ParseFunction (1 samples, 0.02%)</title><rect x="97.5601%" y="773" width="0.0179%" height="15" fill="rgb(178,178,51)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="783.50"></text></g><g><title>v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseFunctionBody (1 samples, 0.02%)</title><rect x="97.5601%" y="757" width="0.0179%" height="15" fill="rgb(199,199,58)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="767.50"></text></g><g><title>v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseStatementListItem (1 samples, 0.02%)</title><rect x="97.5601%" y="741" width="0.0179%" height="15" fill="rgb(199,199,59)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="751.50"></text></g><g><title>v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseVariableDeclarations (1 samples, 0.02%)</title><rect x="97.5601%" y="725" width="0.0179%" height="15" fill="rgb(227,227,69)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="735.50"></text></g><g><title>v8::internal::Scanner::Next (1 samples, 0.02%)</title><rect x="97.5601%" y="709" width="0.0179%" height="15" fill="rgb(212,212,63)" fg:x="5438" fg:w="1"/><text x="97.8101%" y="719.50"></text></g><g><title>deno_runtime::worker::MainWorker::bootstrap (1 samples, 0.02%)</title><rect x="97.5780%" y="1093" width="0.0179%" height="15" fill="rgb(177,177,50)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="1103.50"></text></g><g><title>deno_runtime::worker::MainWorker::execute_script (1 samples, 0.02%)</title><rect x="97.5780%" y="1077" width="0.0179%" height="15" fill="rgb(192,192,56)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="1087.50"></text></g><g><title>deno_core::runtime::JsRuntime::execute_script (1 samples, 0.02%)</title><rect x="97.5780%" y="1061" width="0.0179%" height="15" fill="rgb(194,194,56)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="1071.50"></text></g><g><title>deno_core::runtime::JsRealm::execute_script (1 samples, 0.02%)</title><rect x="97.5780%" y="1045" width="0.0179%" height="15" fill="rgb(177,177,50)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="1055.50"></text></g><g><title>v8::Script::Run (1 samples, 0.02%)</title><rect x="97.5780%" y="1029" width="0.0179%" height="15" fill="rgb(207,207,61)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="1039.50"></text></g><g><title>v8::internal::Execution::CallScript (1 samples, 0.02%)</title><rect x="97.5780%" y="1013" width="0.0179%" height="15" fill="rgb(205,205,61)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="1023.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (1 samples, 0.02%)</title><rect x="97.5780%" y="997" width="0.0179%" height="15" fill="rgb(185,185,53)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="1007.50"></text></g><g><title>Builtins_JSEntry (1 samples, 0.02%)</title><rect x="97.5780%" y="981" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="991.50"></text></g><g><title>Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="97.5780%" y="965" width="0.0179%" height="15" fill="rgb(209,63,63)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="975.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="97.5780%" y="949" width="0.0179%" height="15" fill="rgb(218,77,77)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="959.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="97.5780%" y="933" width="0.0179%" height="15" fill="rgb(225,86,86)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="943.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="97.5780%" y="917" width="0.0179%" height="15" fill="rgb(231,96,96)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="927.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="97.5780%" y="901" width="0.0179%" height="15" fill="rgb(218,77,77)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="911.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="97.5780%" y="885" width="0.0179%" height="15" fill="rgb(232,97,97)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="895.50"></text></g><g><title>Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="97.5780%" y="869" width="0.0179%" height="15" fill="rgb(226,88,88)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="879.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="97.5780%" y="853" width="0.0179%" height="15" fill="rgb(235,101,101)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="863.50"></text></g><g><title>v8::internal::Runtime_CompileLazy (1 samples, 0.02%)</title><rect x="97.5780%" y="837" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="847.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="97.5780%" y="821" width="0.0179%" height="15" fill="rgb(223,223,67)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="831.50"></text></g><g><title>v8::internal::baseline::BaselineBatchCompiler::CompileBatch (1 samples, 0.02%)</title><rect x="97.5780%" y="805" width="0.0179%" height="15" fill="rgb(213,213,64)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="815.50"></text></g><g><title>v8::internal::Compiler::CompileBaseline (1 samples, 0.02%)</title><rect x="97.5780%" y="789" width="0.0179%" height="15" fill="rgb(209,209,62)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="799.50"></text></g><g><title>v8::internal::Compiler::CompileSharedWithBaseline (1 samples, 0.02%)</title><rect x="97.5780%" y="773" width="0.0179%" height="15" fill="rgb(186,186,54)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="783.50"></text></g><g><title>v8::internal::GenerateBaselineCode (1 samples, 0.02%)</title><rect x="97.5780%" y="757" width="0.0179%" height="15" fill="rgb(207,207,61)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="767.50"></text></g><g><title>v8::internal::baseline::BaselineCompiler::Build (1 samples, 0.02%)</title><rect x="97.5780%" y="741" width="0.0179%" height="15" fill="rgb(229,229,69)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="751.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::LocalFactory&gt;::NewByteArray (1 samples, 0.02%)</title><rect x="97.5780%" y="725" width="0.0179%" height="15" fill="rgb(211,211,63)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="735.50"></text></g><g><title>v8::internal::LocalFactory::AllocateRaw (1 samples, 0.02%)</title><rect x="97.5780%" y="709" width="0.0179%" height="15" fill="rgb(191,191,56)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="719.50"></text></g><g><title>v8::internal::ConcurrentAllocator::AllocateInLabSlow (1 samples, 0.02%)</title><rect x="97.5780%" y="693" width="0.0179%" height="15" fill="rgb(208,208,62)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="703.50"></text></g><g><title>v8::internal::ConcurrentAllocator::EnsureLab (1 samples, 0.02%)</title><rect x="97.5780%" y="677" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="687.50"></text></g><g><title>v8::internal::PagedSpaceBase::RawAllocateBackground (1 samples, 0.02%)</title><rect x="97.5780%" y="661" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="671.50"></text></g><g><title>v8::internal::PagedSpaceBase::TryAllocationFromFreeListBackground (1 samples, 0.02%)</title><rect x="97.5780%" y="645" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="655.50"></text></g><g><title>v8::internal::FreeListManyCachedFastPath::Allocate (1 samples, 0.02%)</title><rect x="97.5780%" y="629" width="0.0179%" height="15" fill="rgb(180,180,52)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="639.50"></text></g><g><title>v8::internal::FreeList::SearchForNodeInList (1 samples, 0.02%)</title><rect x="97.5780%" y="613" width="0.0179%" height="15" fill="rgb(208,208,62)" fg:x="5439" fg:w="1"/><text x="97.8280%" y="623.50"></text></g><g><title>deno_core::bindings::initialize_context (1 samples, 0.02%)</title><rect x="97.5960%" y="1061" width="0.0179%" height="15" fill="rgb(194,194,57)" fg:x="5440" fg:w="1"/><text x="97.8460%" y="1071.50"></text></g><g><title>deno_core::bindings::initialize_ops (1 samples, 0.02%)</title><rect x="97.5960%" y="1045" width="0.0179%" height="15" fill="rgb(199,199,59)" fg:x="5440" fg:w="1"/><text x="97.8460%" y="1055.50"></text></g><g><title>deno_core::bindings::set_func_raw (1 samples, 0.02%)</title><rect x="97.5960%" y="1029" width="0.0179%" height="15" fill="rgb(220,220,66)" fg:x="5440" fg:w="1"/><text x="97.8460%" y="1039.50"></text></g><g><title>v8::template::&lt;impl v8::function::FunctionBuilder&lt;v8::data::FunctionTemplate&gt;&gt;::build (1 samples, 0.02%)</title><rect x="97.5960%" y="1013" width="0.0179%" height="15" fill="rgb(208,208,62)" fg:x="5440" fg:w="1"/><text x="97.8460%" y="1023.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (1 samples, 0.02%)</title><rect x="97.5960%" y="997" width="0.0179%" height="15" fill="rgb(212,212,63)" fg:x="5440" fg:w="1"/><text x="97.8460%" y="1007.50"></text></g><g><title>v8::template::_&lt;impl v8::function::FunctionBuilder&lt;v8::data::FunctionTemplate&gt;&gt;::build::_{{closure}} (1 samples, 0.02%)</title><rect x="97.5960%" y="981" width="0.0179%" height="15" fill="rgb(228,228,69)" fg:x="5440" fg:w="1"/><text x="97.8460%" y="991.50"></text></g><g><title>v8__FunctionTemplate__New (1 samples, 0.02%)</title><rect x="97.5960%" y="965" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="5440" fg:w="1"/><text x="97.8460%" y="975.50"></text></g><g><title>v8::FunctionTemplate::NewWithCFunctionOverloads (1 samples, 0.02%)</title><rect x="97.5960%" y="949" width="0.0179%" height="15" fill="rgb(186,186,54)" fg:x="5440" fg:w="1"/><text x="97.8460%" y="959.50"></text></g><g><title>v8::(anonymous namespace)::FunctionTemplateNew (1 samples, 0.02%)</title><rect x="97.5960%" y="933" width="0.0179%" height="15" fill="rgb(201,201,59)" fg:x="5440" fg:w="1"/><text x="97.8460%" y="943.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewStruct (1 samples, 0.02%)</title><rect x="97.5960%" y="917" width="0.0179%" height="15" fill="rgb(212,212,63)" fg:x="5440" fg:w="1"/><text x="97.8460%" y="927.50"></text></g><g><title>v8::internal::SharedHeapDeserializer::DeserializeIntoIsolate (1 samples, 0.02%)</title><rect x="97.6139%" y="965" width="0.0179%" height="15" fill="rgb(191,191,56)" fg:x="5441" fg:w="1"/><text x="97.8639%" y="975.50"></text></g><g><title>v8::internal::SerializerDeserializer::IterateSharedHeapObjectCache (1 samples, 0.02%)</title><rect x="97.6139%" y="949" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="5441" fg:w="1"/><text x="97.8639%" y="959.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::VisitRootPointers (1 samples, 0.02%)</title><rect x="97.6139%" y="933" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="5441" fg:w="1"/><text x="97.8639%" y="943.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (1 samples, 0.02%)</title><rect x="97.6139%" y="917" width="0.0179%" height="15" fill="rgb(192,192,56)" fg:x="5441" fg:w="1"/><text x="97.8639%" y="927.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.6139%" y="901" width="0.0179%" height="15" fill="rgb(188,188,55)" fg:x="5441" fg:w="1"/><text x="97.8639%" y="911.50"></text></g><g><title>operator new (1 samples, 0.02%)</title><rect x="97.6139%" y="885" width="0.0179%" height="15" fill="rgb(253,128,128)" fg:x="5441" fg:w="1"/><text x="97.8639%" y="895.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="97.6139%" y="869" width="0.0179%" height="15" fill="rgb(209,63,63)" fg:x="5441" fg:w="1"/><text x="97.8639%" y="879.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="97.6139%" y="853" width="0.0179%" height="15" fill="rgb(217,75,75)" fg:x="5441" fg:w="1"/><text x="97.8639%" y="863.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="97.6139%" y="837" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="5441" fg:w="1"/><text x="97.8639%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (56 samples, 1.00%)</title><rect x="96.6451%" y="1141" width="1.0047%" height="15" fill="rgb(184,184,53)" fg:x="5387" fg:w="56"/><text x="96.8951%" y="1151.50"></text></g><g><title>deno::worker::create_main_worker::_{{closure}} (4 samples, 0.07%)</title><rect x="97.5780%" y="1125" width="0.0718%" height="15" fill="rgb(195,195,57)" fg:x="5439" fg:w="4"/><text x="97.8280%" y="1135.50"></text></g><g><title>deno_runtime::worker::MainWorker::bootstrap_from_options (4 samples, 0.07%)</title><rect x="97.5780%" y="1109" width="0.0718%" height="15" fill="rgb(191,191,56)" fg:x="5439" fg:w="4"/><text x="97.8280%" y="1119.50"></text></g><g><title>deno_runtime::worker::MainWorker::from_options (3 samples, 0.05%)</title><rect x="97.5960%" y="1093" width="0.0538%" height="15" fill="rgb(221,221,67)" fg:x="5440" fg:w="3"/><text x="97.8460%" y="1103.50"></text></g><g><title>deno_core::runtime::JsRuntime::new (3 samples, 0.05%)</title><rect x="97.5960%" y="1077" width="0.0538%" height="15" fill="rgb(185,185,53)" fg:x="5440" fg:w="3"/><text x="97.8460%" y="1087.50"></text></g><g><title>v8::isolate::Isolate::new (2 samples, 0.04%)</title><rect x="97.6139%" y="1061" width="0.0359%" height="15" fill="rgb(190,190,55)" fg:x="5441" fg:w="2"/><text x="97.8639%" y="1071.50"></text></g><g><title>v8::Isolate::New (2 samples, 0.04%)</title><rect x="97.6139%" y="1045" width="0.0359%" height="15" fill="rgb(206,206,61)" fg:x="5441" fg:w="2"/><text x="97.8639%" y="1055.50"></text></g><g><title>v8::Isolate::Initialize (2 samples, 0.04%)</title><rect x="97.6139%" y="1029" width="0.0359%" height="15" fill="rgb(223,223,67)" fg:x="5441" fg:w="2"/><text x="97.8639%" y="1039.50"></text></g><g><title>v8::internal::Snapshot::Initialize (2 samples, 0.04%)</title><rect x="97.6139%" y="1013" width="0.0359%" height="15" fill="rgb(198,198,58)" fg:x="5441" fg:w="2"/><text x="97.8639%" y="1023.50"></text></g><g><title>v8::internal::Isolate::InitWithSnapshot (2 samples, 0.04%)</title><rect x="97.6139%" y="997" width="0.0359%" height="15" fill="rgb(211,211,63)" fg:x="5441" fg:w="2"/><text x="97.8639%" y="1007.50"></text></g><g><title>v8::internal::Isolate::Init (2 samples, 0.04%)</title><rect x="97.6139%" y="981" width="0.0359%" height="15" fill="rgb(198,198,58)" fg:x="5441" fg:w="2"/><text x="97.8639%" y="991.50"></text></g><g><title>v8::internal::StartupDeserializer::DeserializeIntoIsolate (1 samples, 0.02%)</title><rect x="97.6319%" y="965" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="5442" fg:w="1"/><text x="97.8819%" y="975.50"></text></g><g><title>v8::internal::Heap::IterateRoots (1 samples, 0.02%)</title><rect x="97.6319%" y="949" width="0.0179%" height="15" fill="rgb(189,189,55)" fg:x="5442" fg:w="1"/><text x="97.8819%" y="959.50"></text></g><g><title>v8::internal::Heap::IterateBuiltins (1 samples, 0.02%)</title><rect x="97.6319%" y="933" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="5442" fg:w="1"/><text x="97.8819%" y="943.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::VisitRootPointers (1 samples, 0.02%)</title><rect x="97.6319%" y="917" width="0.0179%" height="15" fill="rgb(214,214,64)" fg:x="5442" fg:w="1"/><text x="97.8819%" y="927.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (1 samples, 0.02%)</title><rect x="97.6319%" y="901" width="0.0179%" height="15" fill="rgb(205,205,61)" fg:x="5442" fg:w="1"/><text x="97.8819%" y="911.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.6319%" y="885" width="0.0179%" height="15" fill="rgb(199,199,59)" fg:x="5442" fg:w="1"/><text x="97.8819%" y="895.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.6319%" y="869" width="0.0179%" height="15" fill="rgb(225,225,68)" fg:x="5442" fg:w="1"/><text x="97.8819%" y="879.50"></text></g><g><title>v8::internal::Heap::MarkCompact (1 samples, 0.02%)</title><rect x="97.6498%" y="981" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="5443" fg:w="1"/><text x="97.8998%" y="991.50"></text></g><g><title>v8::internal::MarkCompactCollector::CollectGarbage (1 samples, 0.02%)</title><rect x="97.6498%" y="965" width="0.0179%" height="15" fill="rgb(211,211,63)" fg:x="5443" fg:w="1"/><text x="97.8998%" y="975.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkLiveObjects (1 samples, 0.02%)</title><rect x="97.6498%" y="949" width="0.0179%" height="15" fill="rgb(186,186,54)" fg:x="5443" fg:w="1"/><text x="97.8998%" y="959.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkTransitiveClosureUntilFixpoint (1 samples, 0.02%)</title><rect x="97.6498%" y="933" width="0.0179%" height="15" fill="rgb(179,179,51)" fg:x="5443" fg:w="1"/><text x="97.8998%" y="943.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessEphemerons (1 samples, 0.02%)</title><rect x="97.6498%" y="917" width="0.0179%" height="15" fill="rgb(217,217,65)" fg:x="5443" fg:w="1"/><text x="97.8998%" y="927.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessMarkingWorklist (1 samples, 0.02%)</title><rect x="97.6498%" y="901" width="0.0179%" height="15" fill="rgb(193,193,56)" fg:x="5443" fg:w="1"/><text x="97.8998%" y="911.50"></text></g><g><title>&lt;v8::isolate::OwnedIsolate as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="97.6498%" y="1093" width="0.0359%" height="15" fill="rgb(197,197,58)" fg:x="5443" fg:w="2"/><text x="97.8998%" y="1103.50"></text></g><g><title>v8::isolate::Isolate::dispose (2 samples, 0.04%)</title><rect x="97.6498%" y="1077" width="0.0359%" height="15" fill="rgb(211,211,63)" fg:x="5443" fg:w="2"/><text x="97.8998%" y="1087.50"></text></g><g><title>v8::isolate::Isolate::low_memory_notification (2 samples, 0.04%)</title><rect x="97.6498%" y="1061" width="0.0359%" height="15" fill="rgb(177,177,51)" fg:x="5443" fg:w="2"/><text x="97.8998%" y="1071.50"></text></g><g><title>v8::Isolate::LowMemoryNotification (2 samples, 0.04%)</title><rect x="97.6498%" y="1045" width="0.0359%" height="15" fill="rgb(214,214,64)" fg:x="5443" fg:w="2"/><text x="97.8998%" y="1055.50"></text></g><g><title>v8::internal::Heap::CollectAllAvailableGarbage (2 samples, 0.04%)</title><rect x="97.6498%" y="1029" width="0.0359%" height="15" fill="rgb(222,222,67)" fg:x="5443" fg:w="2"/><text x="97.8998%" y="1039.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (2 samples, 0.04%)</title><rect x="97.6498%" y="1013" width="0.0359%" height="15" fill="rgb(191,191,56)" fg:x="5443" fg:w="2"/><text x="97.8998%" y="1023.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (2 samples, 0.04%)</title><rect x="97.6498%" y="997" width="0.0359%" height="15" fill="rgb(182,182,52)" fg:x="5443" fg:w="2"/><text x="97.8998%" y="1007.50"></text></g><g><title>v8::internal::MarkCompactCollector::EnsureSweepingCompleted (1 samples, 0.02%)</title><rect x="97.6677%" y="981" width="0.0179%" height="15" fill="rgb(227,227,69)" fg:x="5444" fg:w="1"/><text x="97.9177%" y="991.50"></text></g><g><title>v8::internal::Sweeper::EnsureCompleted (1 samples, 0.02%)</title><rect x="97.6677%" y="965" width="0.0179%" height="15" fill="rgb(190,190,55)" fg:x="5444" fg:w="1"/><text x="97.9177%" y="975.50"></text></g><g><title>v8::internal::Sweeper::ParallelSweepPage (1 samples, 0.02%)</title><rect x="97.6677%" y="949" width="0.0179%" height="15" fill="rgb(204,204,60)" fg:x="5444" fg:w="1"/><text x="97.9177%" y="959.50"></text></g><g><title>v8::internal::Sweeper::RawSweep (1 samples, 0.02%)</title><rect x="97.6677%" y="933" width="0.0179%" height="15" fill="rgb(212,212,63)" fg:x="5444" fg:w="1"/><text x="97.9177%" y="943.50"></text></g><g><title>v8::internal::LiveObjectRange&lt;(v8::internal::LiveObjectIterationMode)0&gt;::iterator::AdvanceToNextValidObject (1 samples, 0.02%)</title><rect x="97.6677%" y="917" width="0.0179%" height="15" fill="rgb(181,181,52)" fg:x="5444" fg:w="1"/><text x="97.9177%" y="927.50"></text></g><g><title>v8::internal::HeapObject::SizeFromMap (1 samples, 0.02%)</title><rect x="97.6677%" y="901" width="0.0179%" height="15" fill="rgb(184,184,53)" fg:x="5444" fg:w="1"/><text x="97.9177%" y="911.50"></text></g><g><title>deno::run_command::_{{closure}} (59 samples, 1.06%)</title><rect x="96.6451%" y="1157" width="1.0585%" height="15" fill="rgb(197,197,58)" fg:x="5387" fg:w="59"/><text x="96.8951%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;deno::worker::CliMainWorker&gt; (3 samples, 0.05%)</title><rect x="97.6498%" y="1141" width="0.0538%" height="15" fill="rgb(213,213,63)" fg:x="5443" fg:w="3"/><text x="97.8998%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;deno_runtime::worker::MainWorker&gt; (3 samples, 0.05%)</title><rect x="97.6498%" y="1125" width="0.0538%" height="15" fill="rgb(214,214,64)" fg:x="5443" fg:w="3"/><text x="97.8998%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;deno_core::runtime::JsRuntime&gt; (3 samples, 0.05%)</title><rect x="97.6498%" y="1109" width="0.0538%" height="15" fill="rgb(196,196,57)" fg:x="5443" fg:w="3"/><text x="97.8998%" y="1119.50"></text></g><g><title>v8::internal::Isolate::Delete (1 samples, 0.02%)</title><rect x="97.6857%" y="1093" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="1103.50"></text></g><g><title>v8::internal::Isolate::Deinit (1 samples, 0.02%)</title><rect x="97.6857%" y="1077" width="0.0179%" height="15" fill="rgb(194,194,57)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="1087.50"></text></g><g><title>v8::internal::Heap::TearDown (1 samples, 0.02%)</title><rect x="97.6857%" y="1061" width="0.0179%" height="15" fill="rgb(202,202,59)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="1071.50"></text></g><g><title>v8::internal::OldSpace::~OldSpace (1 samples, 0.02%)</title><rect x="97.6857%" y="1045" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="1055.50"></text></g><g><title>v8::internal::PagedSpace::~PagedSpace (1 samples, 0.02%)</title><rect x="97.6857%" y="1029" width="0.0179%" height="15" fill="rgb(191,191,55)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="1039.50"></text></g><g><title>v8::internal::PagedSpaceBase::TearDown (1 samples, 0.02%)</title><rect x="97.6857%" y="1013" width="0.0179%" height="15" fill="rgb(218,218,65)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="1023.50"></text></g><g><title>v8::internal::MemoryAllocator::Free (1 samples, 0.02%)</title><rect x="97.6857%" y="997" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="1007.50"></text></g><g><title>v8::internal::VirtualMemory::Free (1 samples, 0.02%)</title><rect x="97.6857%" y="981" width="0.0179%" height="15" fill="rgb(201,201,59)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="991.50"></text></g><g><title>v8::base::BoundedPageAllocator::FreePages (1 samples, 0.02%)</title><rect x="97.6857%" y="965" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="975.50"></text></g><g><title>v8::base::OS::SetPermissions (1 samples, 0.02%)</title><rect x="97.6857%" y="949" width="0.0179%" height="15" fill="rgb(188,188,54)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="959.50"></text></g><g><title>__GI_madvise (1 samples, 0.02%)</title><rect x="97.6857%" y="933" width="0.0179%" height="15" fill="rgb(246,118,118)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="97.6857%" y="917" width="0.0179%" height="15" fill="rgb(233,98,98)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="927.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="97.6857%" y="901" width="0.0179%" height="15" fill="rgb(226,88,88)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="911.50"></text></g><g><title>__x64_sys_madvise (1 samples, 0.02%)</title><rect x="97.6857%" y="885" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="895.50"></text></g><g><title>__do_sys_madvise (1 samples, 0.02%)</title><rect x="97.6857%" y="869" width="0.0179%" height="15" fill="rgb(216,74,74)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="879.50"></text></g><g><title>zap_page_range (1 samples, 0.02%)</title><rect x="97.6857%" y="853" width="0.0179%" height="15" fill="rgb(230,94,94)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="863.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="97.6857%" y="837" width="0.0179%" height="15" fill="rgb(243,112,112)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="847.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="97.6857%" y="821" width="0.0179%" height="15" fill="rgb(217,75,75)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="831.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="97.6857%" y="805" width="0.0179%" height="15" fill="rgb(250,123,123)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="815.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="97.6857%" y="789" width="0.0179%" height="15" fill="rgb(235,101,101)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="799.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="97.6857%" y="773" width="0.0179%" height="15" fill="rgb(230,94,94)" fg:x="5445" fg:w="1"/><text x="97.9357%" y="783.50"></text></g><g><title>deno_runtime::worker::MainWorker::from_options (1 samples, 0.02%)</title><rect x="97.7036%" y="1157" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1167.50"></text></g><g><title>deno_core::runtime::JsRuntime::new (1 samples, 0.02%)</title><rect x="97.7036%" y="1141" width="0.0179%" height="15" fill="rgb(182,182,52)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1151.50"></text></g><g><title>deno_core::bindings::initialize_context (1 samples, 0.02%)</title><rect x="97.7036%" y="1125" width="0.0179%" height="15" fill="rgb(175,175,50)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1135.50"></text></g><g><title>v8::context::&lt;impl v8::data::Context&gt;::new (1 samples, 0.02%)</title><rect x="97.7036%" y="1109" width="0.0179%" height="15" fill="rgb(209,209,62)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1119.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (1 samples, 0.02%)</title><rect x="97.7036%" y="1093" width="0.0179%" height="15" fill="rgb(214,214,64)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1103.50"></text></g><g><title>v8::context::_&lt;impl v8::data::Context&gt;::new::_{{closure}} (1 samples, 0.02%)</title><rect x="97.7036%" y="1077" width="0.0179%" height="15" fill="rgb(178,178,51)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1087.50"></text></g><g><title>v8__Context__New (1 samples, 0.02%)</title><rect x="97.7036%" y="1061" width="0.0179%" height="15" fill="rgb(215,73,73)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1071.50"></text></g><g><title>v8::Context::New (1 samples, 0.02%)</title><rect x="97.7036%" y="1045" width="0.0179%" height="15" fill="rgb(201,201,59)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1055.50"></text></g><g><title>v8::NewContext (1 samples, 0.02%)</title><rect x="97.7036%" y="1029" width="0.0179%" height="15" fill="rgb(196,196,57)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1039.50"></text></g><g><title>v8::internal::Bootstrapper::CreateEnvironment (1 samples, 0.02%)</title><rect x="97.7036%" y="1013" width="0.0179%" height="15" fill="rgb(189,189,55)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1023.50"></text></g><g><title>v8::internal::Genesis::Genesis (1 samples, 0.02%)</title><rect x="97.7036%" y="997" width="0.0179%" height="15" fill="rgb(188,188,55)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="1007.50"></text></g><g><title>v8::internal::Snapshot::NewContextFromSnapshot (1 samples, 0.02%)</title><rect x="97.7036%" y="981" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="991.50"></text></g><g><title>v8::internal::ContextDeserializer::DeserializeContext (1 samples, 0.02%)</title><rect x="97.7036%" y="965" width="0.0179%" height="15" fill="rgb(227,227,68)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="975.50"></text></g><g><title>v8::internal::ContextDeserializer::Deserialize (1 samples, 0.02%)</title><rect x="97.7036%" y="949" width="0.0179%" height="15" fill="rgb(210,210,62)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="959.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="933" width="0.0179%" height="15" fill="rgb(216,216,65)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="943.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="917" width="0.0179%" height="15" fill="rgb(198,198,58)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="927.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="901" width="0.0179%" height="15" fill="rgb(177,177,50)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="911.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="885" width="0.0179%" height="15" fill="rgb(176,176,50)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="895.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="869" width="0.0179%" height="15" fill="rgb(194,194,57)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="879.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="853" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="863.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="837" width="0.0179%" height="15" fill="rgb(199,199,58)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="847.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="821" width="0.0179%" height="15" fill="rgb(210,210,62)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="831.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="805" width="0.0179%" height="15" fill="rgb(209,209,62)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="815.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="789" width="0.0179%" height="15" fill="rgb(181,181,52)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="799.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="773" width="0.0179%" height="15" fill="rgb(214,214,64)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="783.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="757" width="0.0179%" height="15" fill="rgb(201,201,59)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="767.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="741" width="0.0179%" height="15" fill="rgb(222,222,67)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="751.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="725" width="0.0179%" height="15" fill="rgb(195,195,57)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="735.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="709" width="0.0179%" height="15" fill="rgb(179,179,51)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="719.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="693" width="0.0179%" height="15" fill="rgb(195,195,57)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="703.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="677" width="0.0179%" height="15" fill="rgb(219,219,66)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="687.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="661" width="0.0179%" height="15" fill="rgb(202,202,60)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="671.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="645" width="0.0179%" height="15" fill="rgb(216,216,65)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="655.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="629" width="0.0179%" height="15" fill="rgb(180,180,52)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="639.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="613" width="0.0179%" height="15" fill="rgb(225,225,68)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="623.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="597" width="0.0179%" height="15" fill="rgb(186,186,54)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="607.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="581" width="0.0179%" height="15" fill="rgb(198,198,58)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="591.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="565" width="0.0179%" height="15" fill="rgb(187,187,54)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="575.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="549" width="0.0179%" height="15" fill="rgb(205,205,61)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="559.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="533" width="0.0179%" height="15" fill="rgb(207,207,61)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="543.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="517" width="0.0179%" height="15" fill="rgb(178,178,51)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="527.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="501" width="0.0179%" height="15" fill="rgb(219,219,66)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="511.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="485" width="0.0179%" height="15" fill="rgb(175,175,50)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="495.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="469" width="0.0179%" height="15" fill="rgb(191,191,56)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="479.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="453" width="0.0179%" height="15" fill="rgb(177,177,50)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="463.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="437" width="0.0179%" height="15" fill="rgb(211,211,63)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="447.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="421" width="0.0179%" height="15" fill="rgb(213,213,64)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="431.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="405" width="0.0179%" height="15" fill="rgb(178,178,51)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="415.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="389" width="0.0179%" height="15" fill="rgb(222,222,67)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="399.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="373" width="0.0179%" height="15" fill="rgb(227,227,68)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="383.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="357" width="0.0179%" height="15" fill="rgb(210,210,62)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="367.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="341" width="0.0179%" height="15" fill="rgb(181,181,52)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="351.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="325" width="0.0179%" height="15" fill="rgb(227,227,68)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="335.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="309" width="0.0179%" height="15" fill="rgb(176,176,50)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="319.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="293" width="0.0179%" height="15" fill="rgb(203,203,60)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="303.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="277" width="0.0179%" height="15" fill="rgb(180,180,52)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="287.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="261" width="0.0179%" height="15" fill="rgb(177,177,50)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="271.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="245" width="0.0179%" height="15" fill="rgb(198,198,58)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="255.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="229" width="0.0179%" height="15" fill="rgb(206,206,61)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="239.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="213" width="0.0179%" height="15" fill="rgb(205,205,61)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="223.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="197" width="0.0179%" height="15" fill="rgb(190,190,55)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="207.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="181" width="0.0179%" height="15" fill="rgb(220,220,66)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="191.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="165" width="0.0179%" height="15" fill="rgb(200,200,59)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="175.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="149" width="0.0179%" height="15" fill="rgb(196,196,57)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="159.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="133" width="0.0179%" height="15" fill="rgb(210,210,62)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="143.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="117" width="0.0179%" height="15" fill="rgb(213,213,64)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="127.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="101" width="0.0179%" height="15" fill="rgb(211,211,63)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="111.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="85" width="0.0179%" height="15" fill="rgb(220,220,66)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="95.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="69" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="79.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="97.7036%" y="53" width="0.0179%" height="15" fill="rgb(199,199,59)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="63.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="97.7036%" y="37" width="0.0179%" height="15" fill="rgb(180,180,51)" fg:x="5446" fg:w="1"/><text x="97.9536%" y="47.50"></text></g><g><title>deno_web::op_encoding_encode_into::v8_func (3 samples, 0.05%)</title><rect x="97.7216%" y="1157" width="0.0538%" height="15" fill="rgb(206,206,61)" fg:x="5447" fg:w="3"/><text x="97.9716%" y="1167.50"></text></g><g><title>serde_v8::de::to_utf8 (5 samples, 0.09%)</title><rect x="97.7754%" y="1157" width="0.0897%" height="15" fill="rgb(197,197,58)" fg:x="5450" fg:w="5"/><text x="98.0254%" y="1167.50"></text></g><g><title>serde_v8::keys::v8_struct_key (1 samples, 0.02%)</title><rect x="97.8651%" y="1157" width="0.0179%" height="15" fill="rgb(228,228,69)" fg:x="5455" fg:w="1"/><text x="98.1151%" y="1167.50"></text></g><g><title>serde_v8::ser::ObjectSerializer::new (3 samples, 0.05%)</title><rect x="97.8830%" y="1157" width="0.0538%" height="15" fill="rgb(197,197,58)" fg:x="5456" fg:w="3"/><text x="98.1330%" y="1167.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (1 samples, 0.02%)</title><rect x="97.9368%" y="1157" width="0.0179%" height="15" fill="rgb(253,127,127)" fg:x="5459" fg:w="1"/><text x="98.1868%" y="1167.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__reset (2 samples, 0.04%)</title><rect x="97.9548%" y="1157" width="0.0359%" height="15" fill="rgb(242,111,111)" fg:x="5460" fg:w="2"/><text x="98.2048%" y="1167.50"></text></g><g><title>v8::ArrayBuffer::GetBackingStore (2 samples, 0.04%)</title><rect x="97.9907%" y="1157" width="0.0359%" height="15" fill="rgb(211,211,63)" fg:x="5462" fg:w="2"/><text x="98.2407%" y="1167.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::buffer (1 samples, 0.02%)</title><rect x="98.0266%" y="1157" width="0.0179%" height="15" fill="rgb(225,225,68)" fg:x="5464" fg:w="1"/><text x="98.2766%" y="1167.50"></text></g><g><title>v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;::VisitJSObjectSubclass&lt;v8::internal::JSFunction, v8::internal::JSFunction::BodyDescriptor&gt; (1 samples, 0.02%)</title><rect x="98.0445%" y="1157" width="0.0179%" height="15" fill="rgb(229,229,69)" fg:x="5465" fg:w="1"/><text x="98.2945%" y="1167.50"></text></g><g><title>v8::internal::Map::SetInstanceDescriptors (1 samples, 0.02%)</title><rect x="98.0624%" y="1157" width="0.0179%" height="15" fill="rgb(221,221,66)" fg:x="5466" fg:w="1"/><text x="98.3124%" y="1167.50"></text></g><g><title>v8::internal::TransitionsAccessor::GetPrototypeTransition (2 samples, 0.04%)</title><rect x="98.0804%" y="1157" width="0.0359%" height="15" fill="rgb(181,181,52)" fg:x="5467" fg:w="2"/><text x="98.3304%" y="1167.50"></text></g><g><title>v8::internal::TransitionsAccessor::GetPrototypeTransitions (2 samples, 0.04%)</title><rect x="98.1163%" y="1157" width="0.0359%" height="15" fill="rgb(215,215,64)" fg:x="5469" fg:w="2"/><text x="98.3663%" y="1167.50"></text></g><g><title>v8::number::&lt;impl v8::data::Number&gt;::new (1 samples, 0.02%)</title><rect x="98.1521%" y="1157" width="0.0179%" height="15" fill="rgb(229,229,69)" fg:x="5471" fg:w="1"/><text x="98.4021%" y="1167.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (8 samples, 0.14%)</title><rect x="98.1701%" y="1157" width="0.1435%" height="15" fill="rgb(184,184,53)" fg:x="5472" fg:w="8"/><text x="98.4201%" y="1167.50"></text></g><g><title>v8::scope::data::ScopeData::exit_scope (4 samples, 0.07%)</title><rect x="98.2418%" y="1141" width="0.0718%" height="15" fill="rgb(186,186,54)" fg:x="5476" fg:w="4"/><text x="98.4918%" y="1151.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (3 samples, 0.05%)</title><rect x="98.2598%" y="1125" width="0.0538%" height="15" fill="rgb(204,204,60)" fg:x="5477" fg:w="3"/><text x="98.5098%" y="1135.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::write_utf8 (6 samples, 0.11%)</title><rect x="98.3136%" y="1157" width="0.1076%" height="15" fill="rgb(191,191,55)" fg:x="5480" fg:w="6"/><text x="98.5636%" y="1167.50"></text></g><g><title>[unknown] (131 samples, 2.35%)</title><rect x="96.1249%" y="1173" width="2.3502%" height="15" fill="rgb(210,65,65)" fg:x="5358" fg:w="131"/><text x="96.3749%" y="1183.50">[..</text></g><g><title>v8__ArrayBufferView__ByteOffset (3 samples, 0.05%)</title><rect x="98.4212%" y="1157" width="0.0538%" height="15" fill="rgb(212,68,68)" fg:x="5486" fg:w="3"/><text x="98.6712%" y="1167.50"></text></g><g><title>_IO_file_jumps_mmap (1 samples, 0.02%)</title><rect x="98.4751%" y="1173" width="0.0179%" height="15" fill="rgb(231,96,96)" fg:x="5489" fg:w="1"/><text x="98.7251%" y="1183.50"></text></g><g><title>_IO_new_file_xsputn (1 samples, 0.02%)</title><rect x="98.4751%" y="1157" width="0.0179%" height="15" fill="rgb(254,128,128)" fg:x="5489" fg:w="1"/><text x="98.7251%" y="1167.50"></text></g><g><title>calculate_sigpending (1 samples, 0.02%)</title><rect x="98.4930%" y="1125" width="0.0179%" height="15" fill="rgb(223,83,83)" fg:x="5490" fg:w="1"/><text x="98.7430%" y="1135.50"></text></g><g><title>ret_from_fork (41 samples, 0.74%)</title><rect x="98.4930%" y="1157" width="0.7356%" height="15" fill="rgb(218,77,77)" fg:x="5490" fg:w="41"/><text x="98.7430%" y="1167.50"></text></g><g><title>schedule_tail (41 samples, 0.74%)</title><rect x="98.4930%" y="1141" width="0.7356%" height="15" fill="rgb(231,95,95)" fg:x="5490" fg:w="41"/><text x="98.7430%" y="1151.50"></text></g><g><title>finish_task_switch (40 samples, 0.72%)</title><rect x="98.5109%" y="1125" width="0.7176%" height="15" fill="rgb(212,67,67)" fg:x="5491" fg:w="40"/><text x="98.7609%" y="1135.50"></text></g><g><title>__perf_event_task_sched_in (40 samples, 0.72%)</title><rect x="98.5109%" y="1109" width="0.7176%" height="15" fill="rgb(220,80,80)" fg:x="5491" fg:w="40"/><text x="98.7609%" y="1119.50"></text></g><g><title>x86_pmu_enable (40 samples, 0.72%)</title><rect x="98.5109%" y="1093" width="0.7176%" height="15" fill="rgb(215,73,73)" fg:x="5491" fg:w="40"/><text x="98.7609%" y="1103.50"></text></g><g><title>intel_tfa_pmu_enable_all (40 samples, 0.72%)</title><rect x="98.5109%" y="1077" width="0.7176%" height="15" fill="rgb(235,101,101)" fg:x="5491" fg:w="40"/><text x="98.7609%" y="1087.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (40 samples, 0.72%)</title><rect x="98.5109%" y="1061" width="0.7176%" height="15" fill="rgb(235,101,101)" fg:x="5491" fg:w="40"/><text x="98.7609%" y="1071.50"></text></g><g><title>native_write_msr (40 samples, 0.72%)</title><rect x="98.5109%" y="1045" width="0.7176%" height="15" fill="rgb(243,113,113)" fg:x="5491" fg:w="40"/><text x="98.7609%" y="1055.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="99.2465%" y="1141" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="5532" fg:w="1"/><text x="99.4965%" y="1151.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.02%)</title><rect x="99.2644%" y="1141" width="0.0179%" height="15" fill="rgb(184,184,53)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="1151.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.02%)</title><rect x="99.2644%" y="1125" width="0.0179%" height="15" fill="rgb(215,215,64)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.02%)</title><rect x="99.2644%" y="1109" width="0.0179%" height="15" fill="rgb(194,194,56)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.02%)</title><rect x="99.2644%" y="1093" width="0.0179%" height="15" fill="rgb(217,217,65)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.02%)</title><rect x="99.2644%" y="1077" width="0.0179%" height="15" fill="rgb(179,179,51)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="1087.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.02%)</title><rect x="99.2644%" y="1061" width="0.0179%" height="15" fill="rgb(204,56,56)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.2644%" y="1045" width="0.0179%" height="15" fill="rgb(240,108,108)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="1055.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.2644%" y="1029" width="0.0179%" height="15" fill="rgb(221,81,81)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="1039.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="99.2644%" y="1013" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="1023.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.2644%" y="997" width="0.0179%" height="15" fill="rgb(221,81,81)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="1007.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.2644%" y="981" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="991.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="99.2644%" y="965" width="0.0179%" height="15" fill="rgb(230,94,94)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="975.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="99.2644%" y="949" width="0.0179%" height="15" fill="rgb(239,108,108)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="959.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="99.2644%" y="933" width="0.0179%" height="15" fill="rgb(205,57,57)" fg:x="5533" fg:w="1"/><text x="99.5144%" y="943.50"></text></g><g><title>__GI___clone (45 samples, 0.81%)</title><rect x="98.4930%" y="1173" width="0.8073%" height="15" fill="rgb(212,68,68)" fg:x="5490" fg:w="45"/><text x="98.7430%" y="1183.50"></text></g><g><title>start_thread (4 samples, 0.07%)</title><rect x="99.2286%" y="1157" width="0.0718%" height="15" fill="rgb(239,107,107)" fg:x="5531" fg:w="4"/><text x="99.4786%" y="1167.50"></text></g><g><title>v8::base::ThreadEntry (1 samples, 0.02%)</title><rect x="99.2824%" y="1141" width="0.0179%" height="15" fill="rgb(203,203,60)" fg:x="5534" fg:w="1"/><text x="99.5324%" y="1151.50"></text></g><g><title>__GI___prctl (1 samples, 0.02%)</title><rect x="99.2824%" y="1125" width="0.0179%" height="15" fill="rgb(228,91,91)" fg:x="5534" fg:w="1"/><text x="99.5324%" y="1135.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.2824%" y="1109" width="0.0179%" height="15" fill="rgb(216,73,73)" fg:x="5534" fg:w="1"/><text x="99.5324%" y="1119.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.2824%" y="1093" width="0.0179%" height="15" fill="rgb(246,117,117)" fg:x="5534" fg:w="1"/><text x="99.5324%" y="1103.50"></text></g><g><title>__x64_sys_prctl (1 samples, 0.02%)</title><rect x="99.2824%" y="1077" width="0.0179%" height="15" fill="rgb(220,79,79)" fg:x="5534" fg:w="1"/><text x="99.5324%" y="1087.50"></text></g><g><title>__set_task_comm (1 samples, 0.02%)</title><rect x="99.2824%" y="1061" width="0.0179%" height="15" fill="rgb(202,54,54)" fg:x="5534" fg:w="1"/><text x="99.5324%" y="1071.50"></text></g><g><title>perf_event_comm (1 samples, 0.02%)</title><rect x="99.2824%" y="1045" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="5534" fg:w="1"/><text x="99.5324%" y="1055.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="99.2824%" y="1029" width="0.0179%" height="15" fill="rgb(224,85,85)" fg:x="5534" fg:w="1"/><text x="99.5324%" y="1039.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="99.3003%" y="1173" width="0.0359%" height="15" fill="rgb(238,105,105)" fg:x="5535" fg:w="2"/><text x="99.5503%" y="1183.50"></text></g><g><title>__rdl_alloc (2 samples, 0.04%)</title><rect x="99.3362%" y="1173" width="0.0359%" height="15" fill="rgb(227,89,89)" fg:x="5537" fg:w="2"/><text x="99.5862%" y="1183.50"></text></g><g><title>_start (1 samples, 0.02%)</title><rect x="99.3721%" y="1173" width="0.0179%" height="15" fill="rgb(239,107,107)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1183.50"></text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="99.3721%" y="1157" width="0.0179%" height="15" fill="rgb(206,60,60)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1167.50"></text></g><g><title>_dl_start_final (1 samples, 0.02%)</title><rect x="99.3721%" y="1141" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1151.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="99.3721%" y="1125" width="0.0179%" height="15" fill="rgb(214,71,71)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1135.50"></text></g><g><title>dl_main (1 samples, 0.02%)</title><rect x="99.3721%" y="1109" width="0.0179%" height="15" fill="rgb(206,59,59)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1119.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="99.3721%" y="1093" width="0.0179%" height="15" fill="rgb(250,123,123)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1103.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="99.3721%" y="1077" width="0.0179%" height="15" fill="rgb(250,122,122)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1087.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="99.3721%" y="1061" width="0.0179%" height="15" fill="rgb(240,109,109)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1071.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="99.3721%" y="1045" width="0.0179%" height="15" fill="rgb(242,111,111)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1055.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.02%)</title><rect x="99.3721%" y="1029" width="0.0179%" height="15" fill="rgb(247,118,118)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1039.50"></text></g><g><title>elf_get_dynamic_info (1 samples, 0.02%)</title><rect x="99.3721%" y="1013" width="0.0179%" height="15" fill="rgb(216,74,74)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1023.50"></text></g><g><title>page_fault (1 samples, 0.02%)</title><rect x="99.3721%" y="997" width="0.0179%" height="15" fill="rgb(250,124,124)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="1007.50"></text></g><g><title>do_page_fault (1 samples, 0.02%)</title><rect x="99.3721%" y="981" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="991.50"></text></g><g><title>__do_page_fault (1 samples, 0.02%)</title><rect x="99.3721%" y="965" width="0.0179%" height="15" fill="rgb(219,78,78)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="975.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="99.3721%" y="949" width="0.0179%" height="15" fill="rgb(254,128,128)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="959.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="99.3721%" y="933" width="0.0179%" height="15" fill="rgb(223,84,84)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="943.50"></text></g><g><title>do_wp_page (1 samples, 0.02%)</title><rect x="99.3721%" y="917" width="0.0179%" height="15" fill="rgb(221,81,81)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="927.50"></text></g><g><title>wp_page_copy (1 samples, 0.02%)</title><rect x="99.3721%" y="901" width="0.0179%" height="15" fill="rgb(249,122,122)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="911.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="99.3721%" y="885" width="0.0179%" height="15" fill="rgb(207,60,60)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="895.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="99.3721%" y="869" width="0.0179%" height="15" fill="rgb(236,103,103)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="879.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="99.3721%" y="853" width="0.0179%" height="15" fill="rgb(239,106,106)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="863.50"></text></g><g><title>prep_new_page (1 samples, 0.02%)</title><rect x="99.3721%" y="837" width="0.0179%" height="15" fill="rgb(248,120,120)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="847.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.02%)</title><rect x="99.3721%" y="821" width="0.0179%" height="15" fill="rgb(202,53,53)" fg:x="5539" fg:w="1"/><text x="99.6221%" y="831.50"></text></g><g><title>anon.f1fc89adcf1b4c7c522ff8ef571a702c.489.llvm.8413825272954996097 (1 samples, 0.02%)</title><rect x="99.3900%" y="1173" width="0.0179%" height="15" fill="rgb(213,69,69)" fg:x="5540" fg:w="1"/><text x="99.6400%" y="1183.50"></text></g><g><title>v8::internal::Utf8DecoderBase&lt;v8::internal::Utf8Decoder&gt;::Utf8DecoderBase (1 samples, 0.02%)</title><rect x="99.3900%" y="1157" width="0.0179%" height="15" fill="rgb(220,220,66)" fg:x="5540" fg:w="1"/><text x="99.6400%" y="1167.50"></text></g><g><title>call_function_interrupt (1 samples, 0.02%)</title><rect x="99.4080%" y="1173" width="0.0179%" height="15" fill="rgb(210,65,65)" fg:x="5541" fg:w="1"/><text x="99.6580%" y="1183.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.4259%" y="1173" width="0.0179%" height="15" fill="rgb(210,64,64)" fg:x="5542" fg:w="1"/><text x="99.6759%" y="1183.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.4259%" y="1157" width="0.0179%" height="15" fill="rgb(226,88,88)" fg:x="5542" fg:w="1"/><text x="99.6759%" y="1167.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.4259%" y="1141" width="0.0179%" height="15" fill="rgb(215,72,72)" fg:x="5542" fg:w="1"/><text x="99.6759%" y="1151.50"></text></g><g><title>__do_execve_file.isra.39 (1 samples, 0.02%)</title><rect x="99.4259%" y="1125" width="0.0179%" height="15" fill="rgb(226,88,88)" fg:x="5542" fg:w="1"/><text x="99.6759%" y="1135.50"></text></g><g><title>search_binary_handler (1 samples, 0.02%)</title><rect x="99.4259%" y="1109" width="0.0179%" height="15" fill="rgb(228,91,91)" fg:x="5542" fg:w="1"/><text x="99.6759%" y="1119.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.4259%" y="1093" width="0.0179%" height="15" fill="rgb(220,79,79)" fg:x="5542" fg:w="1"/><text x="99.6759%" y="1103.50"></text></g><g><title>setup_arg_pages (1 samples, 0.02%)</title><rect x="99.4259%" y="1077" width="0.0179%" height="15" fill="rgb(241,109,109)" fg:x="5542" fg:w="1"/><text x="99.6759%" y="1087.50"></text></g><g><title>shift_arg_pages (1 samples, 0.02%)</title><rect x="99.4259%" y="1061" width="0.0179%" height="15" fill="rgb(236,102,102)" fg:x="5542" fg:w="1"/><text x="99.6759%" y="1071.50"></text></g><g><title>move_page_tables (1 samples, 0.02%)</title><rect x="99.4259%" y="1045" width="0.0179%" height="15" fill="rgb(247,118,118)" fg:x="5542" fg:w="1"/><text x="99.6759%" y="1055.50"></text></g><g><title>move_page_tables.part.30 (1 samples, 0.02%)</title><rect x="99.4259%" y="1029" width="0.0179%" height="15" fill="rgb(204,55,55)" fg:x="5542" fg:w="1"/><text x="99.6759%" y="1039.50"></text></g><g><title>page_fault (20 samples, 0.36%)</title><rect x="99.4438%" y="1173" width="0.3588%" height="15" fill="rgb(239,107,107)" fg:x="5543" fg:w="20"/><text x="99.6938%" y="1183.50"></text></g><g><title>v8__String__WriteUtf8 (4 samples, 0.07%)</title><rect x="99.8027%" y="1173" width="0.0718%" height="15" fill="rgb(224,85,85)" fg:x="5563" fg:w="4"/><text x="100.0527%" y="1183.50"></text></g><g><title>deno (5,122 samples, 91.89%)</title><rect x="8.0194%" y="1189" width="91.8909%" height="15" fill="rgb(224,86,86)" fg:x="447" fg:w="5122"/><text x="8.2694%" y="1199.50">deno</text></g><g><title>vtable for v8::internal::RootScavengeVisitor (2 samples, 0.04%)</title><rect x="99.8744%" y="1173" width="0.0359%" height="15" fill="rgb(220,220,66)" fg:x="5567" fg:w="2"/><text x="100.1244%" y="1183.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (2 samples, 0.04%)</title><rect x="99.8744%" y="1157" width="0.0359%" height="15" fill="rgb(223,223,67)" fg:x="5567" fg:w="2"/><text x="100.1244%" y="1167.50"></text></g><g><title>all (5,574 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(226,88,88)" fg:x="0" fg:w="5574"/><text x="0.2500%" y="1215.50"></text></g><g><title>perf (5 samples, 0.09%)</title><rect x="99.9103%" y="1189" width="0.0897%" height="15" fill="rgb(241,110,110)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1199.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="99.9103%" y="1173" width="0.0897%" height="15" fill="rgb(253,128,128)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1183.50"></text></g><g><title>do_syscall_64 (5 samples, 0.09%)</title><rect x="99.9103%" y="1157" width="0.0897%" height="15" fill="rgb(233,99,99)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1167.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.09%)</title><rect x="99.9103%" y="1141" width="0.0897%" height="15" fill="rgb(249,122,122)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1151.50"></text></g><g><title>__do_execve_file.isra.39 (5 samples, 0.09%)</title><rect x="99.9103%" y="1125" width="0.0897%" height="15" fill="rgb(243,113,113)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1135.50"></text></g><g><title>search_binary_handler (5 samples, 0.09%)</title><rect x="99.9103%" y="1109" width="0.0897%" height="15" fill="rgb(231,95,95)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1119.50"></text></g><g><title>load_elf_binary (5 samples, 0.09%)</title><rect x="99.9103%" y="1093" width="0.0897%" height="15" fill="rgb(228,90,90)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1103.50"></text></g><g><title>setup_new_exec (5 samples, 0.09%)</title><rect x="99.9103%" y="1077" width="0.0897%" height="15" fill="rgb(244,114,114)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1087.50"></text></g><g><title>perf_event_exec (5 samples, 0.09%)</title><rect x="99.9103%" y="1061" width="0.0897%" height="15" fill="rgb(235,102,102)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1071.50"></text></g><g><title>ctx_resched (5 samples, 0.09%)</title><rect x="99.9103%" y="1045" width="0.0897%" height="15" fill="rgb(254,129,129)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1055.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.09%)</title><rect x="99.9103%" y="1029" width="0.0897%" height="15" fill="rgb(218,76,76)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1039.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.09%)</title><rect x="99.9103%" y="1013" width="0.0897%" height="15" fill="rgb(251,124,124)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1023.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (5 samples, 0.09%)</title><rect x="99.9103%" y="997" width="0.0897%" height="15" fill="rgb(217,76,76)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="1007.50"></text></g><g><title>native_write_msr (5 samples, 0.09%)</title><rect x="99.9103%" y="981" width="0.0897%" height="15" fill="rgb(228,92,92)" fg:x="5569" fg:w="5"/><text x="100.1603%" y="991.50"></text></g></svg></svg>