<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="629.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="6348"><g><title>__GI___prctl (1 samples, 0.02%)</title><rect x="0.0158%" y="517" width="0.0158%" height="15" fill="rgb(200,50,50)" fg:x="1" fg:w="1"/><text x="0.2658%" y="527.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="0.0158%" y="501" width="0.0158%" height="15" fill="rgb(200,50,50)" fg:x="1" fg:w="1"/><text x="0.2658%" y="511.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::BytecodeGraphBuilder (1 samples, 0.02%)</title><rect x="0.0315%" y="373" width="0.0158%" height="15" fill="rgb(221,221,66)" fg:x="2" fg:w="1"/><text x="0.2815%" y="383.50"></text></g><g><title>v8::internal::compiler::BytecodeAnalysis::Analyze (1 samples, 0.02%)</title><rect x="0.0315%" y="357" width="0.0158%" height="15" fill="rgb(225,225,68)" fg:x="2" fg:w="1"/><text x="0.2815%" y="367.50"></text></g><g><title>std::__1::deque&lt;v8::internal::compiler::BytecodeAnalysis::LoopStackEntry, v8::internal::RecyclingZoneAllocator&lt;v8::internal::compiler::BytecodeAnalysis::LoopStackEntry&gt; &gt;::__add_back_capacity (1 samples, 0.02%)</title><rect x="0.0315%" y="341" width="0.0158%" height="15" fill="rgb(191,191,55)" fg:x="2" fg:w="1"/><text x="0.2815%" y="351.50"></text></g><g><title>v8::internal::Zone::NewExpand (1 samples, 0.02%)</title><rect x="0.0315%" y="325" width="0.0158%" height="15" fill="rgb(205,205,61)" fg:x="2" fg:w="1"/><text x="0.2815%" y="335.50"></text></g><g><title>v8::internal::AccountingAllocator::AllocateSegment (1 samples, 0.02%)</title><rect x="0.0315%" y="309" width="0.0158%" height="15" fill="rgb(213,213,63)" fg:x="2" fg:w="1"/><text x="0.2815%" y="319.50"></text></g><g><title>v8::internal::AllocWithRetry (1 samples, 0.02%)</title><rect x="0.0315%" y="293" width="0.0158%" height="15" fill="rgb(180,180,52)" fg:x="2" fg:w="1"/><text x="0.2815%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.0315%" y="277" width="0.0158%" height="15" fill="rgb(207,60,60)" fg:x="2" fg:w="1"/><text x="0.2815%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.0315%" y="261" width="0.0158%" height="15" fill="rgb(229,92,92)" fg:x="2" fg:w="1"/><text x="0.2815%" y="271.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="0.0315%" y="245" width="0.0158%" height="15" fill="rgb(254,129,129)" fg:x="2" fg:w="1"/><text x="0.2815%" y="255.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="0.0315%" y="229" width="0.0158%" height="15" fill="rgb(246,117,117)" fg:x="2" fg:w="1"/><text x="0.2815%" y="239.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GraphBuilderPhase&gt; (2 samples, 0.03%)</title><rect x="0.0315%" y="421" width="0.0315%" height="15" fill="rgb(179,179,51)" fg:x="2" fg:w="2"/><text x="0.2815%" y="431.50"></text></g><g><title>v8::internal::compiler::GraphBuilderPhase::Run (2 samples, 0.03%)</title><rect x="0.0315%" y="405" width="0.0315%" height="15" fill="rgb(219,219,66)" fg:x="2" fg:w="2"/><text x="0.2815%" y="415.50"></text></g><g><title>v8::internal::compiler::BuildGraphFromBytecode (2 samples, 0.03%)</title><rect x="0.0315%" y="389" width="0.0315%" height="15" fill="rgb(224,224,68)" fg:x="2" fg:w="2"/><text x="0.2815%" y="399.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (1 samples, 0.02%)</title><rect x="0.0473%" y="373" width="0.0158%" height="15" fill="rgb(192,192,56)" fg:x="3" fg:w="1"/><text x="0.2973%" y="383.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::VisitBytecodes (1 samples, 0.02%)</title><rect x="0.0473%" y="357" width="0.0158%" height="15" fill="rgb(179,179,51)" fg:x="3" fg:w="1"/><text x="0.2973%" y="367.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::VisitCreateFunctionContext (1 samples, 0.02%)</title><rect x="0.0473%" y="341" width="0.0158%" height="15" fill="rgb(182,182,52)" fg:x="3" fg:w="1"/><text x="0.2973%" y="351.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::CanonicalPersistentHandle&lt;v8::internal::ScopeInfo&gt; (1 samples, 0.02%)</title><rect x="0.0473%" y="325" width="0.0158%" height="15" fill="rgb(222,222,67)" fg:x="3" fg:w="1"/><text x="0.2973%" y="335.50"></text></g><g><title>page_fault (1 samples, 0.02%)</title><rect x="0.0473%" y="309" width="0.0158%" height="15" fill="rgb(206,59,59)" fg:x="3" fg:w="1"/><text x="0.2973%" y="319.50"></text></g><g><title>do_page_fault (1 samples, 0.02%)</title><rect x="0.0473%" y="293" width="0.0158%" height="15" fill="rgb(207,61,61)" fg:x="3" fg:w="1"/><text x="0.2973%" y="303.50"></text></g><g><title>__do_page_fault (1 samples, 0.02%)</title><rect x="0.0473%" y="277" width="0.0158%" height="15" fill="rgb(243,113,113)" fg:x="3" fg:w="1"/><text x="0.2973%" y="287.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="0.0473%" y="261" width="0.0158%" height="15" fill="rgb(201,51,51)" fg:x="3" fg:w="1"/><text x="0.2973%" y="271.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="0.0473%" y="245" width="0.0158%" height="15" fill="rgb(204,56,56)" fg:x="3" fg:w="1"/><text x="0.2973%" y="255.50"></text></g><g><title>filemap_map_pages (1 samples, 0.02%)</title><rect x="0.0473%" y="229" width="0.0158%" height="15" fill="rgb(231,95,95)" fg:x="3" fg:w="1"/><text x="0.2973%" y="239.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.02%)</title><rect x="0.0630%" y="373" width="0.0158%" height="15" fill="rgb(182,182,52)" fg:x="4" fg:w="1"/><text x="0.3130%" y="383.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.02%)</title><rect x="0.0630%" y="357" width="0.0158%" height="15" fill="rgb(201,201,59)" fg:x="4" fg:w="1"/><text x="0.3130%" y="367.50"></text></g><g><title>v8::internal::compiler::JSNativeContextSpecialization::ReduceJSLoadProperty (1 samples, 0.02%)</title><rect x="0.0630%" y="341" width="0.0158%" height="15" fill="rgb(213,213,63)" fg:x="4" fg:w="1"/><text x="0.3130%" y="351.50"></text></g><g><title>v8::internal::compiler::JSNativeContextSpecialization::ReduceNamedAccess (1 samples, 0.02%)</title><rect x="0.0630%" y="325" width="0.0158%" height="15" fill="rgb(210,210,62)" fg:x="4" fg:w="1"/><text x="0.3130%" y="335.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::GetPropertyAccessInfo (1 samples, 0.02%)</title><rect x="0.0630%" y="309" width="0.0158%" height="15" fill="rgb(183,183,53)" fg:x="4" fg:w="1"/><text x="0.3130%" y="319.50"></text></g><g><title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;v8::internal::compiler::PropertyAccessTarget, v8::internal::compiler::PropertyAccessInfo&gt;, std::__1::__unordered_map_hasher&lt;v8::internal::compiler::PropertyAccessTarget, std::__1::__hash_value_type&lt;v8::internal::compiler::PropertyAccessTarget, v8::internal::compiler::PropertyAccessInfo&gt;, v8::internal::compiler::PropertyAccessTarget::Hash, v8::internal::compiler::PropertyAccessTarget::Equal, true&gt;, std::__1::__unordered_map_equal&lt;v8::internal::compiler::PropertyAccessTarget, std::__1::__hash_value_type&lt;v8::internal::compiler::PropertyAccessTarget, v8::internal::compiler::PropertyAccessInfo&gt;, v8::internal::compiler::PropertyAccessTarget::Equal, v8::internal::compiler::PropertyAccessTarget::Hash, true&gt;, v8::internal::ZoneAllocator&lt;std::__1::__hash_value_type&lt;v8::internal::compiler::PropertyAccessTarget, v8::internal::compiler::PropertyAccessInfo&gt; &gt; &gt;::__emplace_unique_key_args&lt;v8::internal::compiler::PropertyAccessTarget, std::__1::pair&lt;v8::internal::compiler::PropertyAccessTarget const, v8::internal::compiler::PropertyAccessInfo&gt; &gt; (1 samples, 0.02%)</title><rect x="0.0630%" y="293" width="0.0158%" height="15" fill="rgb(199,199,58)" fg:x="4" fg:w="1"/><text x="0.3130%" y="303.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::CreateGraph (4 samples, 0.06%)</title><rect x="0.0315%" y="437" width="0.0630%" height="15" fill="rgb(196,196,57)" fg:x="2" fg:w="4"/><text x="0.2815%" y="447.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (2 samples, 0.03%)</title><rect x="0.0630%" y="421" width="0.0315%" height="15" fill="rgb(218,218,65)" fg:x="4" fg:w="2"/><text x="0.3130%" y="431.50"></text></g><g><title>v8::internal::compiler::InliningPhase::Run (2 samples, 0.03%)</title><rect x="0.0630%" y="405" width="0.0315%" height="15" fill="rgb(220,220,66)" fg:x="4" fg:w="2"/><text x="0.3130%" y="415.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (2 samples, 0.03%)</title><rect x="0.0630%" y="389" width="0.0315%" height="15" fill="rgb(195,195,57)" fg:x="4" fg:w="2"/><text x="0.3130%" y="399.50"></text></g><g><title>v8::internal::compiler::JSInliningHeuristic::Finalize (1 samples, 0.02%)</title><rect x="0.0788%" y="373" width="0.0158%" height="15" fill="rgb(183,183,53)" fg:x="5" fg:w="1"/><text x="0.3288%" y="383.50"></text></g><g><title>v8::internal::compiler::JSInliningHeuristic::InlineCandidate (1 samples, 0.02%)</title><rect x="0.0788%" y="357" width="0.0158%" height="15" fill="rgb(175,175,50)" fg:x="5" fg:w="1"/><text x="0.3288%" y="367.50"></text></g><g><title>v8::internal::compiler::JSInliner::ReduceJSCall (1 samples, 0.02%)</title><rect x="0.0788%" y="341" width="0.0158%" height="15" fill="rgb(221,221,66)" fg:x="5" fg:w="1"/><text x="0.3288%" y="351.50"></text></g><g><title>v8::internal::compiler::BuildGraphFromBytecode (1 samples, 0.02%)</title><rect x="0.0788%" y="325" width="0.0158%" height="15" fill="rgb(215,215,64)" fg:x="5" fg:w="1"/><text x="0.3288%" y="335.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (1 samples, 0.02%)</title><rect x="0.0788%" y="309" width="0.0158%" height="15" fill="rgb(218,218,65)" fg:x="5" fg:w="1"/><text x="0.3288%" y="319.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::VisitBytecodes (1 samples, 0.02%)</title><rect x="0.0788%" y="293" width="0.0158%" height="15" fill="rgb(189,189,55)" fg:x="5" fg:w="1"/><text x="0.3288%" y="303.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::BuildCreateArguments (1 samples, 0.02%)</title><rect x="0.0788%" y="277" width="0.0158%" height="15" fill="rgb(191,191,56)" fg:x="5" fg:w="1"/><text x="0.3288%" y="287.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::Environment::BindAccumulator (1 samples, 0.02%)</title><rect x="0.0788%" y="261" width="0.0158%" height="15" fill="rgb(197,197,58)" fg:x="5" fg:w="1"/><text x="0.3288%" y="271.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::Environment::Checkpoint (1 samples, 0.02%)</title><rect x="0.0788%" y="245" width="0.0158%" height="15" fill="rgb(202,202,60)" fg:x="5" fg:w="1"/><text x="0.3288%" y="255.50"></text></g><g><title>v8::internal::compiler::StateValuesCache::GetNodeForValues (1 samples, 0.02%)</title><rect x="0.0788%" y="229" width="0.0158%" height="15" fill="rgb(224,224,68)" fg:x="5" fg:w="1"/><text x="0.3288%" y="239.50"></text></g><g><title>v8::internal::compiler::StateValuesCache::BuildTree (1 samples, 0.02%)</title><rect x="0.0788%" y="213" width="0.0158%" height="15" fill="rgb(198,198,58)" fg:x="5" fg:w="1"/><text x="0.3288%" y="223.50"></text></g><g><title>std::__1::vector&lt;std::__1::array&lt;v8::internal::compiler::Node*, 8ul&gt;, v8::internal::ZoneAllocator&lt;std::__1::array&lt;v8::internal::compiler::Node*, 8ul&gt; &gt; &gt;::__append (1 samples, 0.02%)</title><rect x="0.0788%" y="197" width="0.0158%" height="15" fill="rgb(208,208,62)" fg:x="5" fg:w="1"/><text x="0.3288%" y="207.50"></text></g><g><title>[runjs] (1 samples, 0.02%)</title><rect x="0.0788%" y="181" width="0.0158%" height="15" fill="rgb(245,116,116)" fg:x="5" fg:w="1"/><text x="0.3288%" y="191.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::ComputeSchedulePhase&gt; (1 samples, 0.02%)</title><rect x="0.0945%" y="421" width="0.0158%" height="15" fill="rgb(189,189,55)" fg:x="6" fg:w="1"/><text x="0.3445%" y="431.50"></text></g><g><title>v8::internal::compiler::Scheduler::ComputeSchedule (1 samples, 0.02%)</title><rect x="0.0945%" y="405" width="0.0158%" height="15" fill="rgb(181,181,52)" fg:x="6" fg:w="1"/><text x="0.3445%" y="415.50"></text></g><g><title>v8::internal::compiler::Scheduler::ScheduleLate (1 samples, 0.02%)</title><rect x="0.0945%" y="389" width="0.0158%" height="15" fill="rgb(183,183,53)" fg:x="6" fg:w="1"/><text x="0.3445%" y="399.50"></text></g><g><title>v8::internal::compiler::ScheduleLateNodeVisitor::ProcessQueue (1 samples, 0.02%)</title><rect x="0.0945%" y="373" width="0.0158%" height="15" fill="rgb(226,226,68)" fg:x="6" fg:w="1"/><text x="0.3445%" y="383.50"></text></g><g><title>v8::internal::compiler::ScheduleLateNodeVisitor::VisitNode (1 samples, 0.02%)</title><rect x="0.0945%" y="357" width="0.0158%" height="15" fill="rgb(204,204,60)" fg:x="6" fg:w="1"/><text x="0.3445%" y="367.50"></text></g><g><title>v8::internal::compiler::ScheduleLateNodeVisitor::SplitNode (1 samples, 0.02%)</title><rect x="0.0945%" y="341" width="0.0158%" height="15" fill="rgb(208,208,62)" fg:x="6" fg:w="1"/><text x="0.3445%" y="351.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (6 samples, 0.09%)</title><rect x="0.0315%" y="501" width="0.0945%" height="15" fill="rgb(209,209,62)" fg:x="2" fg:w="6"/><text x="0.2815%" y="511.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (6 samples, 0.09%)</title><rect x="0.0315%" y="485" width="0.0945%" height="15" fill="rgb(203,203,60)" fg:x="2" fg:w="6"/><text x="0.2815%" y="495.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (6 samples, 0.09%)</title><rect x="0.0315%" y="469" width="0.0945%" height="15" fill="rgb(210,210,62)" fg:x="2" fg:w="6"/><text x="0.2815%" y="479.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (6 samples, 0.09%)</title><rect x="0.0315%" y="453" width="0.0945%" height="15" fill="rgb(194,194,57)" fg:x="2" fg:w="6"/><text x="0.2815%" y="463.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (2 samples, 0.03%)</title><rect x="0.0945%" y="437" width="0.0315%" height="15" fill="rgb(177,177,51)" fg:x="6" fg:w="2"/><text x="0.3445%" y="447.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::TypedLoweringPhase&gt; (1 samples, 0.02%)</title><rect x="0.1103%" y="421" width="0.0158%" height="15" fill="rgb(175,175,50)" fg:x="7" fg:w="1"/><text x="0.3603%" y="431.50"></text></g><g><title>v8::internal::compiler::TypedLoweringPhase::Run (1 samples, 0.02%)</title><rect x="0.1103%" y="405" width="0.0158%" height="15" fill="rgb(186,186,54)" fg:x="7" fg:w="1"/><text x="0.3603%" y="415.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.02%)</title><rect x="0.1103%" y="389" width="0.0158%" height="15" fill="rgb(177,177,50)" fg:x="7" fg:w="1"/><text x="0.3603%" y="399.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.02%)</title><rect x="0.1103%" y="373" width="0.0158%" height="15" fill="rgb(229,229,69)" fg:x="7" fg:w="1"/><text x="0.3603%" y="383.50"></text></g><g><title>v8::base::TimeTicks::Now (1 samples, 0.02%)</title><rect x="0.1260%" y="469" width="0.0158%" height="15" fill="rgb(210,210,62)" fg:x="8" fg:w="1"/><text x="0.3760%" y="479.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="0.1260%" y="453" width="0.0158%" height="15" fill="rgb(216,73,73)" fg:x="8" fg:w="1"/><text x="0.3760%" y="463.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="0.1260%" y="437" width="0.0158%" height="15" fill="rgb(223,84,84)" fg:x="8" fg:w="1"/><text x="0.3760%" y="447.50"></text></g><g><title>[[vdso]] (1 samples, 0.02%)</title><rect x="0.1260%" y="421" width="0.0158%" height="15" fill="rgb(233,98,98)" fg:x="8" fg:w="1"/><text x="0.3760%" y="431.50"></text></g><g><title>v8::internal::CodeDataContainer::BodyDescriptor::IterateBody&lt;v8::internal::ConcurrentMarkingVisitor&gt; (1 samples, 0.02%)</title><rect x="0.1575%" y="453" width="0.0158%" height="15" fill="rgb(193,193,56)" fg:x="10" fg:w="1"/><text x="0.4075%" y="463.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (1 samples, 0.02%)</title><rect x="0.1733%" y="453" width="0.0158%" height="15" fill="rgb(217,217,65)" fg:x="11" fg:w="1"/><text x="0.4233%" y="463.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::VisitLeftTrimmableArray&lt;v8::internal::FixedArray&gt; (1 samples, 0.02%)</title><rect x="0.1890%" y="453" width="0.0158%" height="15" fill="rgb(190,190,55)" fg:x="12" fg:w="1"/><text x="0.4390%" y="463.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (1 samples, 0.02%)</title><rect x="0.1890%" y="437" width="0.0158%" height="15" fill="rgb(211,211,63)" fg:x="12" fg:w="1"/><text x="0.4390%" y="447.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::VisitSeqOneByteString (1 samples, 0.02%)</title><rect x="0.2048%" y="453" width="0.0158%" height="15" fill="rgb(183,183,53)" fg:x="13" fg:w="1"/><text x="0.4548%" y="463.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (1 samples, 0.02%)</title><rect x="0.2048%" y="437" width="0.0158%" height="15" fill="rgb(202,202,60)" fg:x="13" fg:w="1"/><text x="0.4548%" y="447.50"></text></g><g><title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::__1::__unordered_map_hasher&lt;v8::internal::MemoryChunk*, std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, v8::internal::BasicMemoryChunk::Hasher, std::__1::equal_to&lt;v8::internal::MemoryChunk*&gt;, true&gt;, std::__1::__unordered_map_equal&lt;v8::internal::MemoryChunk*, std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::__1::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::internal::BasicMemoryChunk::Hasher, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt; &gt; &gt;::__emplace_unique_key_args&lt;v8::internal::MemoryChunk*, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;v8::internal::MemoryChunk* const&amp;&gt;, std::__1::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="0.2048%" y="421" width="0.0158%" height="15" fill="rgb(187,187,54)" fg:x="13" fg:w="1"/><text x="0.4548%" y="431.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitorUtility::VisitJSObjectSubclass&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::JSFunction, v8::internal::JSFunction::BodyDescriptor&gt; (2 samples, 0.03%)</title><rect x="0.2205%" y="453" width="0.0315%" height="15" fill="rgb(195,195,57)" fg:x="14" fg:w="2"/><text x="0.4705%" y="463.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (2 samples, 0.03%)</title><rect x="0.2205%" y="437" width="0.0315%" height="15" fill="rgb(203,203,60)" fg:x="14" fg:w="2"/><text x="0.4705%" y="447.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (9 samples, 0.14%)</title><rect x="0.1260%" y="501" width="0.1418%" height="15" fill="rgb(185,185,53)" fg:x="8" fg:w="9"/><text x="0.3760%" y="511.50"></text></g><g><title>v8::internal::ConcurrentMarking::JobTask::Run (9 samples, 0.14%)</title><rect x="0.1260%" y="485" width="0.1418%" height="15" fill="rgb(184,184,53)" fg:x="8" fg:w="9"/><text x="0.3760%" y="495.50"></text></g><g><title>v8::internal::ConcurrentMarking::Run (8 samples, 0.13%)</title><rect x="0.1418%" y="469" width="0.1260%" height="15" fill="rgb(225,225,68)" fg:x="9" fg:w="8"/><text x="0.3918%" y="479.50"></text></g><g><title>v8::internal::SharedFunctionInfo::ShouldFlushCode (1 samples, 0.02%)</title><rect x="0.2520%" y="453" width="0.0158%" height="15" fill="rgb(194,194,56)" fg:x="16" fg:w="1"/><text x="0.5020%" y="463.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="0.2678%" y="485" width="0.0158%" height="15" fill="rgb(223,83,83)" fg:x="17" fg:w="1"/><text x="0.5178%" y="495.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="0.2836%" y="485" width="0.0158%" height="15" fill="rgb(251,124,124)" fg:x="18" fg:w="1"/><text x="0.5336%" y="495.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="0.2836%" y="469" width="0.0158%" height="15" fill="rgb(219,78,78)" fg:x="18" fg:w="1"/><text x="0.5336%" y="479.50"></text></g><g><title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="0.2836%" y="453" width="0.0158%" height="15" fill="rgb(245,116,116)" fg:x="18" fg:w="1"/><text x="0.5336%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.2836%" y="437" width="0.0158%" height="15" fill="rgb(250,124,124)" fg:x="18" fg:w="1"/><text x="0.5336%" y="447.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.2836%" y="421" width="0.0158%" height="15" fill="rgb(229,92,92)" fg:x="18" fg:w="1"/><text x="0.5336%" y="431.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="0.2836%" y="405" width="0.0158%" height="15" fill="rgb(252,126,126)" fg:x="18" fg:w="1"/><text x="0.5336%" y="415.50"></text></g><g><title>__condvar_dec_grefs (1 samples, 0.02%)</title><rect x="0.2993%" y="453" width="0.0158%" height="15" fill="rgb(216,73,73)" fg:x="19" fg:w="1"/><text x="0.5493%" y="463.50"></text></g><g><title>futex_wake (1 samples, 0.02%)</title><rect x="0.2993%" y="437" width="0.0158%" height="15" fill="rgb(204,55,55)" fg:x="19" fg:w="1"/><text x="0.5493%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.2993%" y="421" width="0.0158%" height="15" fill="rgb(229,93,93)" fg:x="19" fg:w="1"/><text x="0.5493%" y="431.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.2993%" y="405" width="0.0158%" height="15" fill="rgb(240,109,109)" fg:x="19" fg:w="1"/><text x="0.5493%" y="415.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="0.2993%" y="389" width="0.0158%" height="15" fill="rgb(239,107,107)" fg:x="19" fg:w="1"/><text x="0.5493%" y="399.50"></text></g><g><title>do_futex (1 samples, 0.02%)</title><rect x="0.2993%" y="373" width="0.0158%" height="15" fill="rgb(251,125,125)" fg:x="19" fg:w="1"/><text x="0.5493%" y="383.50"></text></g><g><title>futex_wake (1 samples, 0.02%)</title><rect x="0.2993%" y="357" width="0.0158%" height="15" fill="rgb(227,90,90)" fg:x="19" fg:w="1"/><text x="0.5493%" y="367.50"></text></g><g><title>wake_up_q (1 samples, 0.02%)</title><rect x="0.2993%" y="341" width="0.0158%" height="15" fill="rgb(223,84,84)" fg:x="19" fg:w="1"/><text x="0.5493%" y="351.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="0.2993%" y="325" width="0.0158%" height="15" fill="rgb(202,53,53)" fg:x="19" fg:w="1"/><text x="0.5493%" y="335.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="0.2993%" y="309" width="0.0158%" height="15" fill="rgb(234,99,99)" fg:x="19" fg:w="1"/><text x="0.5493%" y="319.50"></text></g><g><title>activate_task (1 samples, 0.02%)</title><rect x="0.2993%" y="293" width="0.0158%" height="15" fill="rgb(223,83,83)" fg:x="19" fg:w="1"/><text x="0.5493%" y="303.50"></text></g><g><title>psi_task_change (1 samples, 0.02%)</title><rect x="0.2993%" y="277" width="0.0158%" height="15" fill="rgb(249,122,122)" fg:x="19" fg:w="1"/><text x="0.5493%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.17%)</title><rect x="0.3151%" y="421" width="0.1733%" height="15" fill="rgb(239,107,107)" fg:x="20" fg:w="11"/><text x="0.5651%" y="431.50"></text></g><g><title>do_syscall_64 (11 samples, 0.17%)</title><rect x="0.3151%" y="405" width="0.1733%" height="15" fill="rgb(230,94,94)" fg:x="20" fg:w="11"/><text x="0.5651%" y="415.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.17%)</title><rect x="0.3151%" y="389" width="0.1733%" height="15" fill="rgb(204,56,56)" fg:x="20" fg:w="11"/><text x="0.5651%" y="399.50"></text></g><g><title>do_futex (11 samples, 0.17%)</title><rect x="0.3151%" y="373" width="0.1733%" height="15" fill="rgb(225,87,87)" fg:x="20" fg:w="11"/><text x="0.5651%" y="383.50"></text></g><g><title>futex_wait (11 samples, 0.17%)</title><rect x="0.3151%" y="357" width="0.1733%" height="15" fill="rgb(206,60,60)" fg:x="20" fg:w="11"/><text x="0.5651%" y="367.50"></text></g><g><title>futex_wait_queue_me (11 samples, 0.17%)</title><rect x="0.3151%" y="341" width="0.1733%" height="15" fill="rgb(253,127,127)" fg:x="20" fg:w="11"/><text x="0.5651%" y="351.50"></text></g><g><title>schedule (11 samples, 0.17%)</title><rect x="0.3151%" y="325" width="0.1733%" height="15" fill="rgb(205,57,57)" fg:x="20" fg:w="11"/><text x="0.5651%" y="335.50"></text></g><g><title>__sched_text_start (11 samples, 0.17%)</title><rect x="0.3151%" y="309" width="0.1733%" height="15" fill="rgb(205,58,58)" fg:x="20" fg:w="11"/><text x="0.5651%" y="319.50"></text></g><g><title>finish_task_switch (11 samples, 0.17%)</title><rect x="0.3151%" y="293" width="0.1733%" height="15" fill="rgb(201,51,51)" fg:x="20" fg:w="11"/><text x="0.5651%" y="303.50"></text></g><g><title>__perf_event_task_sched_in (11 samples, 0.17%)</title><rect x="0.3151%" y="277" width="0.1733%" height="15" fill="rgb(219,78,78)" fg:x="20" fg:w="11"/><text x="0.5651%" y="287.50"></text></g><g><title>x86_pmu_enable (10 samples, 0.16%)</title><rect x="0.3308%" y="261" width="0.1575%" height="15" fill="rgb(216,74,74)" fg:x="21" fg:w="10"/><text x="0.5808%" y="271.50"></text></g><g><title>intel_tfa_pmu_enable_all (10 samples, 0.16%)</title><rect x="0.3308%" y="245" width="0.1575%" height="15" fill="rgb(216,73,73)" fg:x="21" fg:w="10"/><text x="0.5808%" y="255.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (10 samples, 0.16%)</title><rect x="0.3308%" y="229" width="0.1575%" height="15" fill="rgb(244,115,115)" fg:x="21" fg:w="10"/><text x="0.5808%" y="239.50"></text></g><g><title>native_write_msr (10 samples, 0.16%)</title><rect x="0.3308%" y="213" width="0.1575%" height="15" fill="rgb(227,89,89)" fg:x="21" fg:w="10"/><text x="0.5808%" y="223.50"></text></g><g><title>__pthread_mutex_cond_lock (12 samples, 0.19%)</title><rect x="0.3151%" y="453" width="0.1890%" height="15" fill="rgb(246,117,117)" fg:x="20" fg:w="12"/><text x="0.5651%" y="463.50"></text></g><g><title>__lll_lock_wait (12 samples, 0.19%)</title><rect x="0.3151%" y="437" width="0.1890%" height="15" fill="rgb(225,87,87)" fg:x="20" fg:w="12"/><text x="0.5651%" y="447.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="0.4883%" y="421" width="0.0158%" height="15" fill="rgb(241,110,110)" fg:x="31" fg:w="1"/><text x="0.7383%" y="431.50"></text></g><g><title>deactivate_task (2 samples, 0.03%)</title><rect x="0.5198%" y="309" width="0.0315%" height="15" fill="rgb(227,89,89)" fg:x="33" fg:w="2"/><text x="0.7698%" y="319.50"></text></g><g><title>dequeue_task (2 samples, 0.03%)</title><rect x="0.5198%" y="293" width="0.0315%" height="15" fill="rgb(238,105,105)" fg:x="33" fg:w="2"/><text x="0.7698%" y="303.50"></text></g><g><title>psi_task_change (2 samples, 0.03%)</title><rect x="0.5198%" y="277" width="0.0315%" height="15" fill="rgb(241,110,110)" fg:x="33" fg:w="2"/><text x="0.7698%" y="287.50"></text></g><g><title>record_times (1 samples, 0.02%)</title><rect x="0.5356%" y="261" width="0.0158%" height="15" fill="rgb(205,58,58)" fg:x="34" fg:w="1"/><text x="0.7856%" y="271.50"></text></g><g><title>__perf_event_task_sched_in (56 samples, 0.88%)</title><rect x="0.5514%" y="293" width="0.8822%" height="15" fill="rgb(228,91,91)" fg:x="35" fg:w="56"/><text x="0.8014%" y="303.50"></text></g><g><title>x86_pmu_enable (56 samples, 0.88%)</title><rect x="0.5514%" y="277" width="0.8822%" height="15" fill="rgb(217,75,75)" fg:x="35" fg:w="56"/><text x="0.8014%" y="287.50"></text></g><g><title>intel_tfa_pmu_enable_all (56 samples, 0.88%)</title><rect x="0.5514%" y="261" width="0.8822%" height="15" fill="rgb(216,74,74)" fg:x="35" fg:w="56"/><text x="0.8014%" y="271.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (56 samples, 0.88%)</title><rect x="0.5514%" y="245" width="0.8822%" height="15" fill="rgb(230,93,93)" fg:x="35" fg:w="56"/><text x="0.8014%" y="255.50"></text></g><g><title>native_write_msr (56 samples, 0.88%)</title><rect x="0.5514%" y="229" width="0.8822%" height="15" fill="rgb(208,62,62)" fg:x="35" fg:w="56"/><text x="0.8014%" y="239.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1.4335%" y="101" width="0.0158%" height="15" fill="rgb(229,93,93)" fg:x="91" fg:w="1"/><text x="1.6835%" y="111.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="1.4493%" y="69" width="0.0158%" height="15" fill="rgb(203,54,54)" fg:x="92" fg:w="1"/><text x="1.6993%" y="79.50"></text></g><g><title>enqueue_entity (1 samples, 0.02%)</title><rect x="1.4493%" y="53" width="0.0158%" height="15" fill="rgb(231,95,95)" fg:x="92" fg:w="1"/><text x="1.6993%" y="63.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1.4493%" y="37" width="0.0158%" height="15" fill="rgb(211,67,67)" fg:x="92" fg:w="1"/><text x="1.6993%" y="47.50"></text></g><g><title>finish_task_switch (59 samples, 0.93%)</title><rect x="0.5514%" y="309" width="0.9294%" height="15" fill="rgb(243,113,113)" fg:x="35" fg:w="59"/><text x="0.8014%" y="319.50"></text></g><g><title>irq_work_interrupt (3 samples, 0.05%)</title><rect x="1.4335%" y="293" width="0.0473%" height="15" fill="rgb(203,54,54)" fg:x="91" fg:w="3"/><text x="1.6835%" y="303.50"></text></g><g><title>smp_irq_work_interrupt (3 samples, 0.05%)</title><rect x="1.4335%" y="277" width="0.0473%" height="15" fill="rgb(254,129,129)" fg:x="91" fg:w="3"/><text x="1.6835%" y="287.50"></text></g><g><title>irq_work_run (3 samples, 0.05%)</title><rect x="1.4335%" y="261" width="0.0473%" height="15" fill="rgb(213,69,69)" fg:x="91" fg:w="3"/><text x="1.6835%" y="271.50"></text></g><g><title>irq_work_run_list (3 samples, 0.05%)</title><rect x="1.4335%" y="245" width="0.0473%" height="15" fill="rgb(202,53,53)" fg:x="91" fg:w="3"/><text x="1.6835%" y="255.50"></text></g><g><title>perf_pending_event (3 samples, 0.05%)</title><rect x="1.4335%" y="229" width="0.0473%" height="15" fill="rgb(214,70,70)" fg:x="91" fg:w="3"/><text x="1.6835%" y="239.50"></text></g><g><title>perf_event_wakeup (3 samples, 0.05%)</title><rect x="1.4335%" y="213" width="0.0473%" height="15" fill="rgb(229,92,92)" fg:x="91" fg:w="3"/><text x="1.6835%" y="223.50"></text></g><g><title>__wake_up (3 samples, 0.05%)</title><rect x="1.4335%" y="197" width="0.0473%" height="15" fill="rgb(226,88,88)" fg:x="91" fg:w="3"/><text x="1.6835%" y="207.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="1.4335%" y="181" width="0.0473%" height="15" fill="rgb(204,56,56)" fg:x="91" fg:w="3"/><text x="1.6835%" y="191.50"></text></g><g><title>__wake_up_common (3 samples, 0.05%)</title><rect x="1.4335%" y="165" width="0.0473%" height="15" fill="rgb(209,64,64)" fg:x="91" fg:w="3"/><text x="1.6835%" y="175.50"></text></g><g><title>pollwake (3 samples, 0.05%)</title><rect x="1.4335%" y="149" width="0.0473%" height="15" fill="rgb(229,93,93)" fg:x="91" fg:w="3"/><text x="1.6835%" y="159.50"></text></g><g><title>default_wake_function (3 samples, 0.05%)</title><rect x="1.4335%" y="133" width="0.0473%" height="15" fill="rgb(229,93,93)" fg:x="91" fg:w="3"/><text x="1.6835%" y="143.50"></text></g><g><title>try_to_wake_up (3 samples, 0.05%)</title><rect x="1.4335%" y="117" width="0.0473%" height="15" fill="rgb(223,84,84)" fg:x="91" fg:w="3"/><text x="1.6835%" y="127.50"></text></g><g><title>ttwu_do_activate (2 samples, 0.03%)</title><rect x="1.4493%" y="101" width="0.0315%" height="15" fill="rgb(244,114,114)" fg:x="92" fg:w="2"/><text x="1.6993%" y="111.50"></text></g><g><title>activate_task (2 samples, 0.03%)</title><rect x="1.4493%" y="85" width="0.0315%" height="15" fill="rgb(249,122,122)" fg:x="92" fg:w="2"/><text x="1.6993%" y="95.50"></text></g><g><title>psi_task_change (1 samples, 0.02%)</title><rect x="1.4650%" y="69" width="0.0158%" height="15" fill="rgb(247,119,119)" fg:x="93" fg:w="1"/><text x="1.7150%" y="79.50"></text></g><g><title>futex_wait (62 samples, 0.98%)</title><rect x="0.5198%" y="373" width="0.9767%" height="15" fill="rgb(248,119,119)" fg:x="33" fg:w="62"/><text x="0.7698%" y="383.50"></text></g><g><title>futex_wait_queue_me (62 samples, 0.98%)</title><rect x="0.5198%" y="357" width="0.9767%" height="15" fill="rgb(211,66,66)" fg:x="33" fg:w="62"/><text x="0.7698%" y="367.50"></text></g><g><title>schedule (62 samples, 0.98%)</title><rect x="0.5198%" y="341" width="0.9767%" height="15" fill="rgb(208,62,62)" fg:x="33" fg:w="62"/><text x="0.7698%" y="351.50"></text></g><g><title>__sched_text_start (62 samples, 0.98%)</title><rect x="0.5198%" y="325" width="0.9767%" height="15" fill="rgb(207,61,61)" fg:x="33" fg:w="62"/><text x="0.7698%" y="335.50"></text></g><g><title>irq_work_interrupt (1 samples, 0.02%)</title><rect x="1.4808%" y="309" width="0.0158%" height="15" fill="rgb(248,120,120)" fg:x="94" fg:w="1"/><text x="1.7308%" y="319.50"></text></g><g><title>__x64_sys_futex (63 samples, 0.99%)</title><rect x="0.5198%" y="405" width="0.9924%" height="15" fill="rgb(224,85,85)" fg:x="33" fg:w="63"/><text x="0.7698%" y="415.50"></text></g><g><title>do_futex (63 samples, 0.99%)</title><rect x="0.5198%" y="389" width="0.9924%" height="15" fill="rgb(226,88,88)" fg:x="33" fg:w="63"/><text x="0.7698%" y="399.50"></text></g><g><title>futex_wait_setup (1 samples, 0.02%)</title><rect x="1.4965%" y="373" width="0.0158%" height="15" fill="rgb(217,75,75)" fg:x="95" fg:w="1"/><text x="1.7465%" y="383.50"></text></g><g><title>__GI___clone (97 samples, 1.53%)</title><rect x="0.0000%" y="565" width="1.5280%" height="15" fill="rgb(223,84,84)" fg:x="0" fg:w="97"/><text x="0.2500%" y="575.50"></text></g><g><title>start_thread (97 samples, 1.53%)</title><rect x="0.0000%" y="549" width="1.5280%" height="15" fill="rgb(205,57,57)" fg:x="0" fg:w="97"/><text x="0.2500%" y="559.50"></text></g><g><title>v8::base::ThreadEntry (97 samples, 1.53%)</title><rect x="0.0000%" y="533" width="1.5280%" height="15" fill="rgb(214,214,64)" fg:x="0" fg:w="97"/><text x="0.2500%" y="543.50"></text></g><g><title>v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (95 samples, 1.50%)</title><rect x="0.0315%" y="517" width="1.4965%" height="15" fill="rgb(181,181,52)" fg:x="2" fg:w="95"/><text x="0.2815%" y="527.50"></text></g><g><title>v8::platform::DelayedTaskQueue::GetNext (80 samples, 1.26%)</title><rect x="0.2678%" y="501" width="1.2602%" height="15" fill="rgb(200,200,59)" fg:x="17" fg:w="80"/><text x="0.5178%" y="511.50"></text></g><g><title>__pthread_cond_wait (78 samples, 1.23%)</title><rect x="0.2993%" y="485" width="1.2287%" height="15" fill="rgb(209,63,63)" fg:x="19" fg:w="78"/><text x="0.5493%" y="495.50"></text></g><g><title>__pthread_cond_wait_common (78 samples, 1.23%)</title><rect x="0.2993%" y="469" width="1.2287%" height="15" fill="rgb(216,73,73)" fg:x="19" fg:w="78"/><text x="0.5493%" y="479.50"></text></g><g><title>futex_wait_cancelable (65 samples, 1.02%)</title><rect x="0.5041%" y="453" width="1.0239%" height="15" fill="rgb(201,52,52)" fg:x="32" fg:w="65"/><text x="0.7541%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (65 samples, 1.02%)</title><rect x="0.5041%" y="437" width="1.0239%" height="15" fill="rgb(204,57,57)" fg:x="32" fg:w="65"/><text x="0.7541%" y="447.50"></text></g><g><title>do_syscall_64 (64 samples, 1.01%)</title><rect x="0.5198%" y="421" width="1.0082%" height="15" fill="rgb(219,78,78)" fg:x="33" fg:w="64"/><text x="0.7698%" y="431.50"></text></g><g><title>switch_fpu_return (1 samples, 0.02%)</title><rect x="1.5123%" y="405" width="0.0158%" height="15" fill="rgb(206,59,59)" fg:x="96" fg:w="1"/><text x="1.7623%" y="415.50"></text></g><g><title>exit_sem (1 samples, 0.02%)</title><rect x="1.5280%" y="453" width="0.0158%" height="15" fill="rgb(244,114,114)" fg:x="97" fg:w="1"/><text x="1.7780%" y="463.50"></text></g><g><title>V8_DefaultWorke (99 samples, 1.56%)</title><rect x="0.0000%" y="581" width="1.5595%" height="15" fill="rgb(241,110,110)" fg:x="0" fg:w="99"/><text x="0.2500%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1.5280%" y="565" width="0.0315%" height="15" fill="rgb(248,120,120)" fg:x="97" fg:w="2"/><text x="1.7780%" y="575.50"></text></g><g><title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1.5280%" y="549" width="0.0315%" height="15" fill="rgb(218,77,77)" fg:x="97" fg:w="2"/><text x="1.7780%" y="559.50"></text></g><g><title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="1.5280%" y="533" width="0.0315%" height="15" fill="rgb(230,94,94)" fg:x="97" fg:w="2"/><text x="1.7780%" y="543.50"></text></g><g><title>do_signal (2 samples, 0.03%)</title><rect x="1.5280%" y="517" width="0.0315%" height="15" fill="rgb(211,67,67)" fg:x="97" fg:w="2"/><text x="1.7780%" y="527.50"></text></g><g><title>get_signal (2 samples, 0.03%)</title><rect x="1.5280%" y="501" width="0.0315%" height="15" fill="rgb(216,73,73)" fg:x="97" fg:w="2"/><text x="1.7780%" y="511.50"></text></g><g><title>do_group_exit (2 samples, 0.03%)</title><rect x="1.5280%" y="485" width="0.0315%" height="15" fill="rgb(220,79,79)" fg:x="97" fg:w="2"/><text x="1.7780%" y="495.50"></text></g><g><title>do_exit (2 samples, 0.03%)</title><rect x="1.5280%" y="469" width="0.0315%" height="15" fill="rgb(210,65,65)" fg:x="97" fg:w="2"/><text x="1.7780%" y="479.50"></text></g><g><title>task_work_run (1 samples, 0.02%)</title><rect x="1.5438%" y="453" width="0.0158%" height="15" fill="rgb(237,103,103)" fg:x="98" fg:w="1"/><text x="1.7938%" y="463.50"></text></g><g><title>____fput (1 samples, 0.02%)</title><rect x="1.5438%" y="437" width="0.0158%" height="15" fill="rgb(213,69,69)" fg:x="98" fg:w="1"/><text x="1.7938%" y="447.50"></text></g><g><title>__fput (1 samples, 0.02%)</title><rect x="1.5438%" y="421" width="0.0158%" height="15" fill="rgb(200,50,50)" fg:x="98" fg:w="1"/><text x="1.7938%" y="431.50"></text></g><g><title>sock_close (1 samples, 0.02%)</title><rect x="1.5438%" y="405" width="0.0158%" height="15" fill="rgb(207,60,60)" fg:x="98" fg:w="1"/><text x="1.7938%" y="415.50"></text></g><g><title>__sock_release (1 samples, 0.02%)</title><rect x="1.5438%" y="389" width="0.0158%" height="15" fill="rgb(218,77,77)" fg:x="98" fg:w="1"/><text x="1.7938%" y="399.50"></text></g><g><title>unix_release (1 samples, 0.02%)</title><rect x="1.5438%" y="373" width="0.0158%" height="15" fill="rgb(234,100,100)" fg:x="98" fg:w="1"/><text x="1.7938%" y="383.50"></text></g><g><title>unix_release_sock (1 samples, 0.02%)</title><rect x="1.5438%" y="357" width="0.0158%" height="15" fill="rgb(205,57,57)" fg:x="98" fg:w="1"/><text x="1.7938%" y="367.50"></text></g><g><title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="1.5438%" y="341" width="0.0158%" height="15" fill="rgb(240,108,108)" fg:x="98" fg:w="1"/><text x="1.7938%" y="351.50"></text></g><g><title>perf (5 samples, 0.08%)</title><rect x="1.5595%" y="581" width="0.0788%" height="15" fill="rgb(237,103,103)" fg:x="99" fg:w="5"/><text x="1.8095%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="1.5595%" y="565" width="0.0788%" height="15" fill="rgb(251,125,125)" fg:x="99" fg:w="5"/><text x="1.8095%" y="575.50"></text></g><g><title>do_syscall_64 (5 samples, 0.08%)</title><rect x="1.5595%" y="549" width="0.0788%" height="15" fill="rgb(201,51,51)" fg:x="99" fg:w="5"/><text x="1.8095%" y="559.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.08%)</title><rect x="1.5595%" y="533" width="0.0788%" height="15" fill="rgb(224,85,85)" fg:x="99" fg:w="5"/><text x="1.8095%" y="543.50"></text></g><g><title>__do_execve_file.isra.39 (5 samples, 0.08%)</title><rect x="1.5595%" y="517" width="0.0788%" height="15" fill="rgb(223,84,84)" fg:x="99" fg:w="5"/><text x="1.8095%" y="527.50"></text></g><g><title>search_binary_handler (5 samples, 0.08%)</title><rect x="1.5595%" y="501" width="0.0788%" height="15" fill="rgb(236,102,102)" fg:x="99" fg:w="5"/><text x="1.8095%" y="511.50"></text></g><g><title>load_elf_binary (5 samples, 0.08%)</title><rect x="1.5595%" y="485" width="0.0788%" height="15" fill="rgb(248,119,119)" fg:x="99" fg:w="5"/><text x="1.8095%" y="495.50"></text></g><g><title>setup_new_exec (5 samples, 0.08%)</title><rect x="1.5595%" y="469" width="0.0788%" height="15" fill="rgb(205,57,57)" fg:x="99" fg:w="5"/><text x="1.8095%" y="479.50"></text></g><g><title>perf_event_exec (5 samples, 0.08%)</title><rect x="1.5595%" y="453" width="0.0788%" height="15" fill="rgb(212,68,68)" fg:x="99" fg:w="5"/><text x="1.8095%" y="463.50"></text></g><g><title>ctx_resched (5 samples, 0.08%)</title><rect x="1.5595%" y="437" width="0.0788%" height="15" fill="rgb(206,58,58)" fg:x="99" fg:w="5"/><text x="1.8095%" y="447.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="1.5595%" y="421" width="0.0788%" height="15" fill="rgb(209,64,64)" fg:x="99" fg:w="5"/><text x="1.8095%" y="431.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.08%)</title><rect x="1.5595%" y="405" width="0.0788%" height="15" fill="rgb(252,126,126)" fg:x="99" fg:w="5"/><text x="1.8095%" y="415.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (5 samples, 0.08%)</title><rect x="1.5595%" y="389" width="0.0788%" height="15" fill="rgb(206,59,59)" fg:x="99" fg:w="5"/><text x="1.8095%" y="399.50"></text></g><g><title>native_write_msr (5 samples, 0.08%)</title><rect x="1.5595%" y="373" width="0.0788%" height="15" fill="rgb(213,69,69)" fg:x="99" fg:w="5"/><text x="1.8095%" y="383.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (2 samples, 0.03%)</title><rect x="1.6383%" y="549" width="0.0315%" height="15" fill="rgb(206,206,61)" fg:x="104" fg:w="2"/><text x="1.8883%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="1.6698%" y="549" width="0.0315%" height="15" fill="rgb(250,123,123)" fg:x="106" fg:w="2"/><text x="1.9198%" y="559.50"></text></g><g><title>__libc_write (6 samples, 0.09%)</title><rect x="1.7013%" y="549" width="0.0945%" height="15" fill="rgb(207,61,61)" fg:x="108" fg:w="6"/><text x="1.9513%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (1 samples, 0.02%)</title><rect x="1.7958%" y="549" width="0.0158%" height="15" fill="rgb(210,210,63)" fg:x="114" fg:w="1"/><text x="2.0458%" y="559.50"></text></g><g><title>serde_v8::de::from_v8 (12 samples, 0.19%)</title><rect x="1.8116%" y="549" width="0.1890%" height="15" fill="rgb(212,212,63)" fg:x="115" fg:w="12"/><text x="2.0616%" y="559.50"></text></g><g><title>serde_v8::de::to_utf8 (19 samples, 0.30%)</title><rect x="2.0006%" y="549" width="0.2993%" height="15" fill="rgb(221,221,66)" fg:x="127" fg:w="19"/><text x="2.2506%" y="559.50"></text></g><g><title>v8::Integer::New (3 samples, 0.05%)</title><rect x="2.2999%" y="549" width="0.0473%" height="15" fill="rgb(207,207,61)" fg:x="146" fg:w="3"/><text x="2.5499%" y="559.50"></text></g><g><title>v8::Number::Value (6 samples, 0.09%)</title><rect x="2.3472%" y="549" width="0.0945%" height="15" fill="rgb(186,186,54)" fg:x="149" fg:w="6"/><text x="2.5972%" y="559.50"></text></g><g><title>v8::String::WriteUtf8 (6 samples, 0.09%)</title><rect x="2.4417%" y="549" width="0.0945%" height="15" fill="rgb(185,185,53)" fg:x="155" fg:w="6"/><text x="2.6917%" y="559.50"></text></g><g><title>v8::Value::IsNumber (20 samples, 0.32%)</title><rect x="2.5362%" y="549" width="0.3151%" height="15" fill="rgb(178,178,51)" fg:x="161" fg:w="20"/><text x="2.7862%" y="559.50"></text></g><g><title>v8::number::&lt;impl v8::data::Integer&gt;::new (4 samples, 0.06%)</title><rect x="2.8513%" y="549" width="0.0630%" height="15" fill="rgb(218,218,65)" fg:x="181" fg:w="4"/><text x="3.1013%" y="559.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (7 samples, 0.11%)</title><rect x="2.9143%" y="549" width="0.1103%" height="15" fill="rgb(216,216,65)" fg:x="185" fg:w="7"/><text x="3.1643%" y="559.50"></text></g><g><title>v8__FunctionCallbackInfo__GetArgument (1 samples, 0.02%)</title><rect x="3.0246%" y="549" width="0.0158%" height="15" fill="rgb(200,50,50)" fg:x="192" fg:w="1"/><text x="3.2746%" y="559.50"></text></g><g><title>v8__Isolate__SetData (5 samples, 0.08%)</title><rect x="3.0403%" y="549" width="0.0788%" height="15" fill="rgb(229,93,93)" fg:x="193" fg:w="5"/><text x="3.2903%" y="559.50"></text></g><g><title>v8__Number__Value (6 samples, 0.09%)</title><rect x="3.1191%" y="549" width="0.0945%" height="15" fill="rgb(205,57,57)" fg:x="198" fg:w="6"/><text x="3.3691%" y="559.50"></text></g><g><title>[[heap]] (102 samples, 1.61%)</title><rect x="1.6383%" y="565" width="1.6068%" height="15" fill="rgb(248,120,120)" fg:x="104" fg:w="102"/><text x="1.8883%" y="575.50"></text></g><g><title>v8__Value__IsNumber (2 samples, 0.03%)</title><rect x="3.2136%" y="549" width="0.0315%" height="15" fill="rgb(214,71,71)" fg:x="204" fg:w="2"/><text x="3.4636%" y="559.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (50 samples, 0.79%)</title><rect x="3.2451%" y="549" width="0.7876%" height="15" fill="rgb(224,224,68)" fg:x="206" fg:w="50"/><text x="3.4951%" y="559.50"></text></g><g><title>__GI___libc_free (5 samples, 0.08%)</title><rect x="4.0328%" y="549" width="0.0788%" height="15" fill="rgb(213,69,69)" fg:x="256" fg:w="5"/><text x="4.2828%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="4.1115%" y="549" width="0.0158%" height="15" fill="rgb(218,76,76)" fg:x="261" fg:w="1"/><text x="4.3615%" y="559.50"></text></g><g><title>serde_v8::de::from_v8 (25 samples, 0.39%)</title><rect x="4.1273%" y="549" width="0.3938%" height="15" fill="rgb(204,204,60)" fg:x="262" fg:w="25"/><text x="4.3773%" y="559.50"></text></g><g><title>v8::String::WriteUtf8 (1 samples, 0.02%)</title><rect x="4.5211%" y="549" width="0.0158%" height="15" fill="rgb(221,221,66)" fg:x="287" fg:w="1"/><text x="4.7711%" y="559.50"></text></g><g><title>[[stack]] (83 samples, 1.31%)</title><rect x="3.2451%" y="565" width="1.3075%" height="15" fill="rgb(241,110,110)" fg:x="206" fg:w="83"/><text x="3.4951%" y="575.50"></text></g><g><title>v8__String__Length (1 samples, 0.02%)</title><rect x="4.5369%" y="549" width="0.0158%" height="15" fill="rgb(248,119,119)" fg:x="288" fg:w="1"/><text x="4.7869%" y="559.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="4.5526%" y="549" width="0.0158%" height="15" fill="rgb(188,188,55)" fg:x="289" fg:w="1"/><text x="4.8026%" y="559.50"></text></g><g><title>[anon] (2 samples, 0.03%)</title><rect x="4.5526%" y="565" width="0.0315%" height="15" fill="rgb(242,111,111)" fg:x="289" fg:w="2"/><text x="4.8026%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="4.5684%" y="549" width="0.0158%" height="15" fill="rgb(250,123,123)" fg:x="290" fg:w="1"/><text x="4.8184%" y="559.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.02%)</title><rect x="5.2142%" y="549" width="0.0158%" height="15" fill="rgb(230,94,94)" fg:x="331" fg:w="1"/><text x="5.4642%" y="559.50"></text></g><g><title>v8::internal::Builtin_HandleApiCall (1 samples, 0.02%)</title><rect x="5.2142%" y="533" width="0.0158%" height="15" fill="rgb(214,214,64)" fg:x="331" fg:w="1"/><text x="5.4642%" y="543.50"></text></g><g><title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (1 samples, 0.02%)</title><rect x="5.2142%" y="517" width="0.0158%" height="15" fill="rgb(215,215,64)" fg:x="331" fg:w="1"/><text x="5.4642%" y="527.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="5.2142%" y="501" width="0.0158%" height="15" fill="rgb(209,209,62)" fg:x="331" fg:w="1"/><text x="5.4642%" y="511.50"></text></g><g><title>__libc_write (1 samples, 0.02%)</title><rect x="5.2142%" y="485" width="0.0158%" height="15" fill="rgb(235,102,102)" fg:x="331" fg:w="1"/><text x="5.4642%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="5.2142%" y="469" width="0.0158%" height="15" fill="rgb(208,62,62)" fg:x="331" fg:w="1"/><text x="5.4642%" y="479.50"></text></g><g><title>__GI___libc_free (83 samples, 1.31%)</title><rect x="8.9319%" y="517" width="1.3075%" height="15" fill="rgb(221,81,81)" fg:x="567" fg:w="83"/><text x="9.1819%" y="527.50"></text></g><g><title>_int_free (56 samples, 0.88%)</title><rect x="9.3573%" y="501" width="0.8822%" height="15" fill="rgb(251,124,124)" fg:x="594" fg:w="56"/><text x="9.6073%" y="511.50"></text></g><g><title>tcache_put (12 samples, 0.19%)</title><rect x="10.0504%" y="485" width="0.1890%" height="15" fill="rgb(233,99,99)" fg:x="638" fg:w="12"/><text x="10.3004%" y="495.50"></text></g><g><title>__pthread_disable_asynccancel (53 samples, 0.83%)</title><rect x="12.8544%" y="501" width="0.8349%" height="15" fill="rgb(240,108,108)" fg:x="816" fg:w="53"/><text x="13.1044%" y="511.50"></text></g><g><title>__pthread_enable_asynccancel (61 samples, 0.96%)</title><rect x="13.6894%" y="501" width="0.9609%" height="15" fill="rgb(251,125,125)" fg:x="869" fg:w="61"/><text x="13.9394%" y="511.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="14.6503%" y="453" width="0.0158%" height="15" fill="rgb(221,80,80)" fg:x="930" fg:w="1"/><text x="14.9003%" y="463.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="14.6503%" y="437" width="0.0158%" height="15" fill="rgb(246,117,117)" fg:x="930" fg:w="1"/><text x="14.9003%" y="447.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="14.6503%" y="421" width="0.0158%" height="15" fill="rgb(221,81,81)" fg:x="930" fg:w="1"/><text x="14.9003%" y="431.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="14.6503%" y="405" width="0.0158%" height="15" fill="rgb(225,87,87)" fg:x="930" fg:w="1"/><text x="14.9003%" y="415.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="14.6503%" y="389" width="0.0158%" height="15" fill="rgb(217,75,75)" fg:x="930" fg:w="1"/><text x="14.9003%" y="399.50"></text></g><g><title>trigger_load_balance (1 samples, 0.02%)</title><rect x="14.6503%" y="373" width="0.0158%" height="15" fill="rgb(233,98,98)" fg:x="930" fg:w="1"/><text x="14.9003%" y="383.50"></text></g><g><title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="14.6503%" y="501" width="0.0315%" height="15" fill="rgb(243,113,113)" fg:x="930" fg:w="2"/><text x="14.9003%" y="511.50"></text></g><g><title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="14.6503%" y="485" width="0.0315%" height="15" fill="rgb(203,55,55)" fg:x="930" fg:w="2"/><text x="14.9003%" y="495.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="14.6503%" y="469" width="0.0315%" height="15" fill="rgb(202,53,53)" fg:x="930" fg:w="2"/><text x="14.9003%" y="479.50"></text></g><g><title>tick_program_event (1 samples, 0.02%)</title><rect x="14.6660%" y="453" width="0.0158%" height="15" fill="rgb(207,61,61)" fg:x="931" fg:w="1"/><text x="14.9160%" y="463.50"></text></g><g><title>clockevents_program_event (1 samples, 0.02%)</title><rect x="14.6660%" y="437" width="0.0158%" height="15" fill="rgb(213,68,68)" fg:x="931" fg:w="1"/><text x="14.9160%" y="447.50"></text></g><g><title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="14.6660%" y="421" width="0.0158%" height="15" fill="rgb(223,84,84)" fg:x="931" fg:w="1"/><text x="14.9160%" y="431.50"></text></g><g><title>native_write_msr (1 samples, 0.02%)</title><rect x="14.6660%" y="405" width="0.0158%" height="15" fill="rgb(225,87,87)" fg:x="931" fg:w="1"/><text x="14.9160%" y="415.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="14.6818%" y="501" width="0.0158%" height="15" fill="rgb(211,66,66)" fg:x="932" fg:w="1"/><text x="14.9318%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (722 samples, 11.37%)</title><rect x="14.6975%" y="501" width="11.3737%" height="15" fill="rgb(231,96,96)" fg:x="933" fg:w="722"/><text x="14.9475%" y="511.50">entry_SYSCALL_64</text></g><g><title>__x64_sys_write (78 samples, 1.23%)</title><rect x="27.0006%" y="485" width="1.2287%" height="15" fill="rgb(206,59,59)" fg:x="1714" fg:w="78"/><text x="27.2506%" y="495.50"></text></g><g><title>__x86_indirect_thunk_rax (7 samples, 0.11%)</title><rect x="28.2294%" y="485" width="0.1103%" height="15" fill="rgb(218,76,76)" fg:x="1792" fg:w="7"/><text x="28.4794%" y="495.50"></text></g><g><title>__fdget_pos (8 samples, 0.13%)</title><rect x="51.5438%" y="453" width="0.1260%" height="15" fill="rgb(223,84,84)" fg:x="3272" fg:w="8"/><text x="51.7938%" y="463.50"></text></g><g><title>fput (5 samples, 0.08%)</title><rect x="51.6698%" y="453" width="0.0788%" height="15" fill="rgb(216,73,73)" fg:x="3280" fg:w="5"/><text x="51.9198%" y="463.50"></text></g><g><title>__fdget_pos (186 samples, 2.93%)</title><rect x="52.5677%" y="437" width="2.9301%" height="15" fill="rgb(231,96,96)" fg:x="3337" fg:w="186"/><text x="52.8177%" y="447.50">__..</text></g><g><title>__fget_light (181 samples, 2.85%)</title><rect x="52.6465%" y="421" width="2.8513%" height="15" fill="rgb(211,66,66)" fg:x="3342" fg:w="181"/><text x="52.8965%" y="431.50">__..</text></g><g><title>__fget_light (4 samples, 0.06%)</title><rect x="55.4978%" y="437" width="0.0630%" height="15" fill="rgb(244,114,114)" fg:x="3523" fg:w="4"/><text x="55.7478%" y="447.50"></text></g><g><title>__fsnotify_parent (27 samples, 0.43%)</title><rect x="55.5608%" y="437" width="0.4253%" height="15" fill="rgb(232,97,97)" fg:x="3527" fg:w="27"/><text x="55.8108%" y="447.50"></text></g><g><title>__vfs_write (1 samples, 0.02%)</title><rect x="55.9861%" y="437" width="0.0158%" height="15" fill="rgb(233,98,98)" fg:x="3554" fg:w="1"/><text x="56.2361%" y="447.50"></text></g><g><title>fput (74 samples, 1.17%)</title><rect x="56.0019%" y="437" width="1.1657%" height="15" fill="rgb(212,67,67)" fg:x="3555" fg:w="74"/><text x="56.2519%" y="447.50"></text></g><g><title>fput_many (74 samples, 1.17%)</title><rect x="56.0019%" y="421" width="1.1657%" height="15" fill="rgb(253,127,127)" fg:x="3555" fg:w="74"/><text x="56.2519%" y="431.50"></text></g><g><title>fput_many (14 samples, 0.22%)</title><rect x="57.1676%" y="437" width="0.2205%" height="15" fill="rgb(253,127,127)" fg:x="3629" fg:w="14"/><text x="57.4176%" y="447.50"></text></g><g><title>fsnotify (4 samples, 0.06%)</title><rect x="57.3882%" y="437" width="0.0630%" height="15" fill="rgb(238,106,106)" fg:x="3643" fg:w="4"/><text x="57.6382%" y="447.50"></text></g><g><title>rw_verify_area (5 samples, 0.08%)</title><rect x="57.4512%" y="437" width="0.0788%" height="15" fill="rgb(222,82,82)" fg:x="3647" fg:w="5"/><text x="57.7012%" y="447.50"></text></g><g><title>__fsnotify_parent (39 samples, 0.61%)</title><rect x="59.0265%" y="421" width="0.6144%" height="15" fill="rgb(216,73,73)" fg:x="3747" fg:w="39"/><text x="59.2765%" y="431.50"></text></g><g><title>__vfs_write (5 samples, 0.08%)</title><rect x="59.6408%" y="421" width="0.0788%" height="15" fill="rgb(220,80,80)" fg:x="3786" fg:w="5"/><text x="59.8908%" y="431.50"></text></g><g><title>__x86_indirect_thunk_rax (7 samples, 0.11%)</title><rect x="59.7196%" y="421" width="0.1103%" height="15" fill="rgb(236,102,102)" fg:x="3791" fg:w="7"/><text x="59.9696%" y="431.50"></text></g><g><title>fsnotify (79 samples, 1.24%)</title><rect x="59.8299%" y="421" width="1.2445%" height="15" fill="rgb(251,125,125)" fg:x="3798" fg:w="79"/><text x="60.0799%" y="431.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="61.4052%" y="405" width="0.0158%" height="15" fill="rgb(252,126,126)" fg:x="3898" fg:w="1"/><text x="61.6552%" y="415.50"></text></g><g><title>apparmor_file_permission (10 samples, 0.16%)</title><rect x="61.4209%" y="405" width="0.1575%" height="15" fill="rgb(231,96,96)" fg:x="3899" fg:w="10"/><text x="61.6709%" y="415.50"></text></g><g><title>aa_file_perm (4 samples, 0.06%)</title><rect x="62.0353%" y="373" width="0.0630%" height="15" fill="rgb(246,117,117)" fg:x="3938" fg:w="4"/><text x="62.2853%" y="383.50"></text></g><g><title>aa_file_perm (33 samples, 0.52%)</title><rect x="64.2250%" y="357" width="0.5198%" height="15" fill="rgb(230,94,94)" fg:x="4077" fg:w="33"/><text x="64.4750%" y="367.50"></text></g><g><title>aa_label_is_subset (3 samples, 0.05%)</title><rect x="64.6975%" y="341" width="0.0473%" height="15" fill="rgb(227,89,89)" fg:x="4107" fg:w="3"/><text x="64.9475%" y="351.50"></text></g><g><title>apparmor_file_permission (177 samples, 2.79%)</title><rect x="62.0353%" y="389" width="2.7883%" height="15" fill="rgb(253,127,127)" fg:x="3938" fg:w="177"/><text x="62.2853%" y="399.50">ap..</text></g><g><title>common_file_perm (173 samples, 2.73%)</title><rect x="62.0983%" y="373" width="2.7253%" height="15" fill="rgb(253,128,128)" fg:x="3942" fg:w="173"/><text x="62.3483%" y="383.50">co..</text></g><g><title>aa_label_is_subset (5 samples, 0.08%)</title><rect x="64.7448%" y="357" width="0.0788%" height="15" fill="rgb(226,87,87)" fg:x="4110" fg:w="5"/><text x="64.9948%" y="367.50"></text></g><g><title>rw_verify_area (249 samples, 3.92%)</title><rect x="61.0744%" y="421" width="3.9225%" height="15" fill="rgb(249,122,122)" fg:x="3877" fg:w="249"/><text x="61.3244%" y="431.50">rw_v..</text></g><g><title>security_file_permission (217 samples, 3.42%)</title><rect x="61.5784%" y="405" width="3.4184%" height="15" fill="rgb(210,65,65)" fg:x="3909" fg:w="217"/><text x="61.8284%" y="415.50">sec..</text></g><g><title>common_file_perm (11 samples, 0.17%)</title><rect x="64.8236%" y="389" width="0.1733%" height="15" fill="rgb(229,93,93)" fg:x="4115" fg:w="11"/><text x="65.0736%" y="399.50"></text></g><g><title>security_file_permission (3 samples, 0.05%)</title><rect x="64.9968%" y="421" width="0.0473%" height="15" fill="rgb(246,117,117)" fg:x="4126" fg:w="3"/><text x="65.2468%" y="431.50"></text></g><g><title>ksys_write (863 samples, 13.59%)</title><rect x="51.7486%" y="453" width="13.5948%" height="15" fill="rgb(219,78,78)" fg:x="3285" fg:w="863"/><text x="51.9986%" y="463.50">ksys_write</text></g><g><title>vfs_write (496 samples, 7.81%)</title><rect x="57.5299%" y="437" width="7.8135%" height="15" fill="rgb(215,72,72)" fg:x="3652" fg:w="496"/><text x="57.7799%" y="447.50">vfs_write</text></g><g><title>write_null (19 samples, 0.30%)</title><rect x="65.0441%" y="421" width="0.2993%" height="15" fill="rgb(211,67,67)" fg:x="4129" fg:w="19"/><text x="65.2941%" y="431.50"></text></g><g><title>__x64_sys_write (889 samples, 14.00%)</title><rect x="51.4020%" y="469" width="14.0044%" height="15" fill="rgb(207,61,61)" fg:x="3263" fg:w="889"/><text x="51.6520%" y="479.50">__x64_sys_write</text></g><g><title>vfs_write (4 samples, 0.06%)</title><rect x="65.3434%" y="453" width="0.0630%" height="15" fill="rgb(233,99,99)" fg:x="4148" fg:w="4"/><text x="65.5934%" y="463.50"></text></g><g><title>fpregs_assert_state_consistent (7 samples, 0.11%)</title><rect x="65.4064%" y="469" width="0.1103%" height="15" fill="rgb(238,105,105)" fg:x="4152" fg:w="7"/><text x="65.6564%" y="479.50"></text></g><g><title>do_syscall_64 (2,385 samples, 37.57%)</title><rect x="28.3396%" y="485" width="37.5709%" height="15" fill="rgb(253,127,127)" fg:x="1799" fg:w="2385"/><text x="28.5896%" y="495.50">do_syscall_64</text></g><g><title>ksys_write (25 samples, 0.39%)</title><rect x="65.5167%" y="469" width="0.3938%" height="15" fill="rgb(252,125,125)" fg:x="4159" fg:w="25"/><text x="65.7667%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,536 samples, 39.95%)</title><rect x="26.0712%" y="501" width="39.9496%" height="15" fill="rgb(242,111,111)" fg:x="1655" fg:w="2536"/><text x="26.3212%" y="511.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>fpregs_assert_state_consistent (7 samples, 0.11%)</title><rect x="65.9105%" y="485" width="0.1103%" height="15" fill="rgb(232,97,97)" fg:x="4184" fg:w="7"/><text x="66.1605%" y="495.50"></text></g><g><title>__libc_write (4,282 samples, 67.45%)</title><rect x="10.2394%" y="517" width="67.4543%" height="15" fill="rgb(247,119,119)" fg:x="650" fg:w="4282"/><text x="10.4894%" y="527.50">__libc_write</text></g><g><title>syscall_return_via_sysret (741 samples, 11.67%)</title><rect x="66.0208%" y="501" width="11.6730%" height="15" fill="rgb(253,127,127)" fg:x="4191" fg:w="741"/><text x="66.2708%" y="511.50">syscall_return_vi..</text></g><g><title>v8::Number::Value (12 samples, 0.19%)</title><rect x="79.2533%" y="501" width="0.1890%" height="15" fill="rgb(219,219,66)" fg:x="5031" fg:w="12"/><text x="79.5033%" y="511.50"></text></g><g><title>v8::Value::IsNumber (5 samples, 0.08%)</title><rect x="79.4423%" y="501" width="0.0788%" height="15" fill="rgb(223,223,67)" fg:x="5043" fg:w="5"/><text x="79.6923%" y="511.50"></text></g><g><title>serde_v8::de::from_v8 (118 samples, 1.86%)</title><rect x="77.6938%" y="517" width="1.8589%" height="15" fill="rgb(229,229,69)" fg:x="4932" fg:w="118"/><text x="77.9438%" y="527.50">s..</text></g><g><title>v8__Number__Value (2 samples, 0.03%)</title><rect x="79.5211%" y="501" width="0.0315%" height="15" fill="rgb(241,110,110)" fg:x="5048" fg:w="2"/><text x="79.7711%" y="511.50"></text></g><g><title>__GI___libc_malloc (53 samples, 0.83%)</title><rect x="81.5060%" y="501" width="0.8349%" height="15" fill="rgb(208,61,61)" fg:x="5174" fg:w="53"/><text x="81.7560%" y="511.50"></text></g><g><title>tcache_get (22 samples, 0.35%)</title><rect x="81.9943%" y="485" width="0.3466%" height="15" fill="rgb(213,70,70)" fg:x="5205" fg:w="22"/><text x="82.2443%" y="495.50"></text></g><g><title>v8::String::Length (1 samples, 0.02%)</title><rect x="82.3409%" y="501" width="0.0158%" height="15" fill="rgb(191,191,55)" fg:x="5227" fg:w="1"/><text x="82.5909%" y="511.50"></text></g><g><title>[runjs] (5 samples, 0.08%)</title><rect x="87.3346%" y="485" width="0.0788%" height="15" fill="rgb(254,129,129)" fg:x="5544" fg:w="5"/><text x="87.5846%" y="495.50"></text></g><g><title>v8::String::WriteUtf8 (352 samples, 5.55%)</title><rect x="82.3566%" y="501" width="5.5451%" height="15" fill="rgb(182,182,52)" fg:x="5228" fg:w="352"/><text x="82.6066%" y="511.50">v8::Str..</text></g><g><title>__memmove_avx_unaligned_erms (31 samples, 0.49%)</title><rect x="87.4134%" y="485" width="0.4883%" height="15" fill="rgb(238,105,105)" fg:x="5549" fg:w="31"/><text x="87.6634%" y="495.50"></text></g><g><title>v8__String__Length (4 samples, 0.06%)</title><rect x="87.9017%" y="501" width="0.0630%" height="15" fill="rgb(237,104,104)" fg:x="5580" fg:w="4"/><text x="88.1517%" y="511.50"></text></g><g><title>serde_v8::de::to_utf8 (536 samples, 8.44%)</title><rect x="79.5526%" y="517" width="8.4436%" height="15" fill="rgb(175,175,50)" fg:x="5050" fg:w="536"/><text x="79.8026%" y="527.50">serde_v8::de..</text></g><g><title>v8__String__WriteUtf8 (2 samples, 0.03%)</title><rect x="87.9647%" y="501" width="0.0315%" height="15" fill="rgb(242,111,111)" fg:x="5584" fg:w="2"/><text x="88.2147%" y="511.50"></text></g><g><title>v8::External::Value (4 samples, 0.06%)</title><rect x="87.9962%" y="517" width="0.0630%" height="15" fill="rgb(180,180,52)" fg:x="5586" fg:w="4"/><text x="88.2462%" y="527.50"></text></g><g><title>v8::Integer::New (21 samples, 0.33%)</title><rect x="88.1380%" y="501" width="0.3308%" height="15" fill="rgb(178,178,51)" fg:x="5595" fg:w="21"/><text x="88.3880%" y="511.50"></text></g><g><title>v8::number::&lt;impl v8::data::Integer&gt;::new (28 samples, 0.44%)</title><rect x="88.0592%" y="517" width="0.4411%" height="15" fill="rgb(227,227,69)" fg:x="5590" fg:w="28"/><text x="88.3092%" y="527.50"></text></g><g><title>v8__Integer__New (2 samples, 0.03%)</title><rect x="88.4688%" y="501" width="0.0315%" height="15" fill="rgb(247,119,119)" fg:x="5616" fg:w="2"/><text x="88.7188%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (5 samples, 0.08%)</title><rect x="88.6421%" y="501" width="0.0788%" height="15" fill="rgb(198,198,58)" fg:x="5627" fg:w="5"/><text x="88.8921%" y="511.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (15 samples, 0.24%)</title><rect x="88.5003%" y="517" width="0.2363%" height="15" fill="rgb(201,201,59)" fg:x="5618" fg:w="15"/><text x="88.7503%" y="527.50"></text></g><g><title>v8__Isolate__SetData (1 samples, 0.02%)</title><rect x="88.7209%" y="501" width="0.0158%" height="15" fill="rgb(219,78,78)" fg:x="5632" fg:w="1"/><text x="88.9709%" y="511.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (3 samples, 0.05%)</title><rect x="88.7366%" y="517" width="0.0473%" height="15" fill="rgb(235,102,102)" fg:x="5633" fg:w="3"/><text x="88.9866%" y="527.50"></text></g><g><title>v8__FunctionCallbackInfo__GetArgument (25 samples, 0.39%)</title><rect x="88.7839%" y="517" width="0.3938%" height="15" fill="rgb(208,62,62)" fg:x="5636" fg:w="25"/><text x="89.0339%" y="527.50"></text></g><g><title>v8__FunctionCallbackInfo__GetIsolate (1 samples, 0.02%)</title><rect x="89.1777%" y="517" width="0.0158%" height="15" fill="rgb(219,77,77)" fg:x="5661" fg:w="1"/><text x="89.4277%" y="527.50"></text></g><g><title>v8__FunctionCallbackInfo__GetReturnValue (1 samples, 0.02%)</title><rect x="89.1934%" y="517" width="0.0158%" height="15" fill="rgb(253,127,127)" fg:x="5662" fg:w="1"/><text x="89.4434%" y="527.50"></text></g><g><title>v8__Isolate__GetData (2 samples, 0.03%)</title><rect x="89.2092%" y="517" width="0.0315%" height="15" fill="rgb(232,97,97)" fg:x="5663" fg:w="2"/><text x="89.4592%" y="527.50"></text></g><g><title>v8__Isolate__SetData (7 samples, 0.11%)</title><rect x="89.2407%" y="517" width="0.1103%" height="15" fill="rgb(207,61,61)" fg:x="5665" fg:w="7"/><text x="89.4907%" y="527.50"></text></g><g><title>v8__ReturnValue__Set (6 samples, 0.09%)</title><rect x="89.3510%" y="517" width="0.0945%" height="15" fill="rgb(232,97,97)" fg:x="5672" fg:w="6"/><text x="89.6010%" y="527.50"></text></g><g><title>Builtins_CallApiCallback (5,394 samples, 84.97%)</title><rect x="5.2300%" y="549" width="84.9716%" height="15" fill="rgb(220,80,80)" fg:x="332" fg:w="5394"/><text x="5.4800%" y="559.50">Builtins_CallApiCallback</text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (5,333 samples, 84.01%)</title><rect x="6.1909%" y="533" width="84.0107%" height="15" fill="rgb(217,217,65)" fg:x="393" fg:w="5333"/><text x="6.4409%" y="543.50">&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn</text></g><g><title>v8__Value__IsString (48 samples, 0.76%)</title><rect x="89.4455%" y="517" width="0.7561%" height="15" fill="rgb(215,72,72)" fg:x="5678" fg:w="48"/><text x="89.6955%" y="527.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="90.2016%" y="549" width="0.0158%" height="15" fill="rgb(208,62,62)" fg:x="5726" fg:w="1"/><text x="90.4516%" y="559.50"></text></g><g><title>Builtins_GetNamedPropertyHandler (1 samples, 0.02%)</title><rect x="90.2016%" y="533" width="0.0158%" height="15" fill="rgb(215,72,72)" fg:x="5726" fg:w="1"/><text x="90.4516%" y="543.50"></text></g><g><title>Builtins_LoadIC_NoFeedback (1 samples, 0.02%)</title><rect x="90.2016%" y="517" width="0.0158%" height="15" fill="rgb(217,76,76)" fg:x="5726" fg:w="1"/><text x="90.4516%" y="527.50"></text></g><g><title>Builtins_KeyedLoadIC (34 samples, 0.54%)</title><rect x="90.2174%" y="549" width="0.5356%" height="15" fill="rgb(221,80,80)" fg:x="5727" fg:w="34"/><text x="90.4674%" y="559.50"></text></g><g><title>Builtins_KeyedLoadIC_PolymorphicName (46 samples, 0.72%)</title><rect x="90.7530%" y="549" width="0.7246%" height="15" fill="rgb(248,121,121)" fg:x="5761" fg:w="46"/><text x="91.0030%" y="559.50"></text></g><g><title>Builtins_LoadIC (66 samples, 1.04%)</title><rect x="91.4776%" y="549" width="1.0397%" height="15" fill="rgb(218,77,77)" fg:x="5807" fg:w="66"/><text x="91.7276%" y="559.50"></text></g><g><title>[perf-459.map] (5,585 samples, 87.98%)</title><rect x="4.5841%" y="565" width="87.9805%" height="15" fill="rgb(218,76,76)" fg:x="291" fg:w="5585"/><text x="4.8341%" y="575.50">[perf-459.map]</text></g><g><title>v8__FunctionCallbackInfo__GetIsolate (3 samples, 0.05%)</title><rect x="92.5173%" y="549" width="0.0473%" height="15" fill="rgb(233,98,98)" fg:x="5873" fg:w="3"/><text x="92.7673%" y="559.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="92.5646%" y="549" width="0.0158%" height="15" fill="rgb(207,207,61)" fg:x="5876" fg:w="1"/><text x="92.8146%" y="559.50"></text></g><g><title>__GI___libc_free (5 samples, 0.08%)</title><rect x="92.5803%" y="549" width="0.0788%" height="15" fill="rgb(206,59,59)" fg:x="5877" fg:w="5"/><text x="92.8303%" y="559.50"></text></g><g><title>__libc_write (14 samples, 0.22%)</title><rect x="92.6591%" y="549" width="0.2205%" height="15" fill="rgb(239,107,107)" fg:x="5882" fg:w="14"/><text x="92.9091%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (3 samples, 0.05%)</title><rect x="92.8796%" y="549" width="0.0473%" height="15" fill="rgb(215,215,64)" fg:x="5896" fg:w="3"/><text x="93.1296%" y="559.50"></text></g><g><title>serde_v8::de::from_v8 (3 samples, 0.05%)</title><rect x="92.9269%" y="549" width="0.0473%" height="15" fill="rgb(195,195,57)" fg:x="5899" fg:w="3"/><text x="93.1769%" y="559.50"></text></g><g><title>serde_v8::de::to_utf8 (5 samples, 0.08%)</title><rect x="92.9742%" y="549" width="0.0788%" height="15" fill="rgb(186,186,54)" fg:x="5902" fg:w="5"/><text x="93.2242%" y="559.50"></text></g><g><title>v8::External::Value (2 samples, 0.03%)</title><rect x="93.0529%" y="549" width="0.0315%" height="15" fill="rgb(179,179,51)" fg:x="5907" fg:w="2"/><text x="93.3029%" y="559.50"></text></g><g><title>v8::Number::Value (10 samples, 0.16%)</title><rect x="93.0844%" y="549" width="0.1575%" height="15" fill="rgb(194,194,57)" fg:x="5909" fg:w="10"/><text x="93.3344%" y="559.50"></text></g><g><title>v8::String::Length (3 samples, 0.05%)</title><rect x="93.2420%" y="549" width="0.0473%" height="15" fill="rgb(222,222,67)" fg:x="5919" fg:w="3"/><text x="93.4920%" y="559.50"></text></g><g><title>v8::Value::IsNumber (21 samples, 0.33%)</title><rect x="93.2892%" y="549" width="0.3308%" height="15" fill="rgb(220,220,66)" fg:x="5922" fg:w="21"/><text x="93.5392%" y="559.50"></text></g><g><title>v8::number::&lt;impl v8::data::Integer&gt;::new (4 samples, 0.06%)</title><rect x="93.6200%" y="549" width="0.0630%" height="15" fill="rgb(225,225,68)" fg:x="5943" fg:w="4"/><text x="93.8700%" y="559.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (1 samples, 0.02%)</title><rect x="93.6830%" y="549" width="0.0158%" height="15" fill="rgb(213,213,64)" fg:x="5947" fg:w="1"/><text x="93.9330%" y="559.50"></text></g><g><title>v8__External__Value (3 samples, 0.05%)</title><rect x="93.6988%" y="549" width="0.0473%" height="15" fill="rgb(254,129,129)" fg:x="5948" fg:w="3"/><text x="93.9488%" y="559.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (6 samples, 0.09%)</title><rect x="93.7461%" y="549" width="0.0945%" height="15" fill="rgb(220,80,80)" fg:x="5951" fg:w="6"/><text x="93.9961%" y="559.50"></text></g><g><title>v8__FunctionCallbackInfo__GetArgument (2 samples, 0.03%)</title><rect x="93.8406%" y="549" width="0.0315%" height="15" fill="rgb(210,65,65)" fg:x="5957" fg:w="2"/><text x="94.0906%" y="559.50"></text></g><g><title>v8__Isolate__SetData (5 samples, 0.08%)</title><rect x="93.8721%" y="549" width="0.0788%" height="15" fill="rgb(242,111,111)" fg:x="5959" fg:w="5"/><text x="94.1221%" y="559.50"></text></g><g><title>v8__Number__Value (9 samples, 0.14%)</title><rect x="93.9509%" y="549" width="0.1418%" height="15" fill="rgb(242,112,112)" fg:x="5964" fg:w="9"/><text x="94.2009%" y="559.50"></text></g><g><title>[unknown] (99 samples, 1.56%)</title><rect x="92.5646%" y="565" width="1.5595%" height="15" fill="rgb(252,126,126)" fg:x="5876" fg:w="99"/><text x="92.8146%" y="575.50"></text></g><g><title>v8__Value__IsNumber (2 samples, 0.03%)</title><rect x="94.0926%" y="549" width="0.0315%" height="15" fill="rgb(240,108,108)" fg:x="5973" fg:w="2"/><text x="94.3426%" y="559.50"></text></g><g><title>ret_from_fork (35 samples, 0.55%)</title><rect x="94.1241%" y="549" width="0.5514%" height="15" fill="rgb(204,56,56)" fg:x="5975" fg:w="35"/><text x="94.3741%" y="559.50"></text></g><g><title>schedule_tail (35 samples, 0.55%)</title><rect x="94.1241%" y="533" width="0.5514%" height="15" fill="rgb(201,52,52)" fg:x="5975" fg:w="35"/><text x="94.3741%" y="543.50"></text></g><g><title>finish_task_switch (35 samples, 0.55%)</title><rect x="94.1241%" y="517" width="0.5514%" height="15" fill="rgb(234,100,100)" fg:x="5975" fg:w="35"/><text x="94.3741%" y="527.50"></text></g><g><title>__perf_event_task_sched_in (35 samples, 0.55%)</title><rect x="94.1241%" y="501" width="0.5514%" height="15" fill="rgb(231,95,95)" fg:x="5975" fg:w="35"/><text x="94.3741%" y="511.50"></text></g><g><title>x86_pmu_enable (35 samples, 0.55%)</title><rect x="94.1241%" y="485" width="0.5514%" height="15" fill="rgb(201,52,52)" fg:x="5975" fg:w="35"/><text x="94.3741%" y="495.50"></text></g><g><title>intel_tfa_pmu_enable_all (35 samples, 0.55%)</title><rect x="94.1241%" y="469" width="0.5514%" height="15" fill="rgb(223,83,83)" fg:x="5975" fg:w="35"/><text x="94.3741%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (35 samples, 0.55%)</title><rect x="94.1241%" y="453" width="0.5514%" height="15" fill="rgb(200,51,51)" fg:x="5975" fg:w="35"/><text x="94.3741%" y="463.50"></text></g><g><title>native_write_msr (35 samples, 0.55%)</title><rect x="94.1241%" y="437" width="0.5514%" height="15" fill="rgb(250,123,123)" fg:x="5975" fg:w="35"/><text x="94.3741%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="94.6755%" y="533" width="0.0158%" height="15" fill="rgb(232,97,97)" fg:x="6010" fg:w="1"/><text x="94.9255%" y="543.50"></text></g><g><title>__GI___clone (37 samples, 0.58%)</title><rect x="94.1241%" y="565" width="0.5829%" height="15" fill="rgb(232,97,97)" fg:x="5975" fg:w="37"/><text x="94.3741%" y="575.50"></text></g><g><title>start_thread (2 samples, 0.03%)</title><rect x="94.6755%" y="549" width="0.0315%" height="15" fill="rgb(204,56,56)" fg:x="6010" fg:w="2"/><text x="94.9255%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="94.6912%" y="533" width="0.0158%" height="15" fill="rgb(244,114,114)" fg:x="6011" fg:w="1"/><text x="94.9412%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="94.6912%" y="517" width="0.0158%" height="15" fill="rgb(252,126,126)" fg:x="6011" fg:w="1"/><text x="94.9412%" y="527.50"></text></g><g><title>__GI___libc_free (2 samples, 0.03%)</title><rect x="94.7070%" y="565" width="0.0315%" height="15" fill="rgb(243,113,113)" fg:x="6012" fg:w="2"/><text x="94.9570%" y="575.50"></text></g><g><title>v8::internal::LiveObjectVisitor::VisitBlackObjects&lt;v8::internal::EvacuateOldSpaceVisitor, v8::internal::NonAtomicMarkingState&gt; (1 samples, 0.02%)</title><rect x="94.7385%" y="229" width="0.0158%" height="15" fill="rgb(188,188,54)" fg:x="6014" fg:w="1"/><text x="94.9885%" y="239.50"></text></g><g><title>v8::internal::EvacuateVisitorBase::TryEvacuateObject (1 samples, 0.02%)</title><rect x="94.7385%" y="213" width="0.0158%" height="15" fill="rgb(198,198,58)" fg:x="6014" fg:w="1"/><text x="94.9885%" y="223.50"></text></g><g><title>v8::internal::EvacuateVisitorBase::RawMigrateObject&lt;(v8::internal::EvacuateVisitorBase::MigrationMode)0&gt; (1 samples, 0.02%)</title><rect x="94.7385%" y="197" width="0.0158%" height="15" fill="rgb(225,225,68)" fg:x="6014" fg:w="1"/><text x="94.9885%" y="207.50"></text></g><g><title>v8::internal::CallIterateBody::apply&lt;v8::internal::FixedArray::BodyDescriptor, v8::internal::RecordMigratedSlotVisitor&gt; (1 samples, 0.02%)</title><rect x="94.7385%" y="181" width="0.0158%" height="15" fill="rgb(176,176,50)" fg:x="6014" fg:w="1"/><text x="94.9885%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;deno_core::runtime::JsRuntime&gt; (2 samples, 0.03%)</title><rect x="94.7385%" y="469" width="0.0315%" height="15" fill="rgb(223,223,67)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="479.50"></text></g><g><title>&lt;v8::isolate::OwnedIsolate as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="94.7385%" y="453" width="0.0315%" height="15" fill="rgb(224,224,67)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="463.50"></text></g><g><title>v8::Isolate::LowMemoryNotification (2 samples, 0.03%)</title><rect x="94.7385%" y="437" width="0.0315%" height="15" fill="rgb(188,188,54)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="447.50"></text></g><g><title>v8::internal::Heap::CollectAllAvailableGarbage (2 samples, 0.03%)</title><rect x="94.7385%" y="421" width="0.0315%" height="15" fill="rgb(219,219,66)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="431.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (2 samples, 0.03%)</title><rect x="94.7385%" y="405" width="0.0315%" height="15" fill="rgb(201,201,59)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="415.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (2 samples, 0.03%)</title><rect x="94.7385%" y="389" width="0.0315%" height="15" fill="rgb(210,210,62)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="399.50"></text></g><g><title>v8::internal::Heap::MarkCompact (2 samples, 0.03%)</title><rect x="94.7385%" y="373" width="0.0315%" height="15" fill="rgb(224,224,67)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="383.50"></text></g><g><title>v8::internal::MarkCompactCollector::CollectGarbage (2 samples, 0.03%)</title><rect x="94.7385%" y="357" width="0.0315%" height="15" fill="rgb(211,211,63)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="367.50"></text></g><g><title>v8::internal::MarkCompactCollector::Evacuate (2 samples, 0.03%)</title><rect x="94.7385%" y="341" width="0.0315%" height="15" fill="rgb(211,211,63)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="351.50"></text></g><g><title>v8::internal::MarkCompactCollector::EvacuatePagesInParallel (2 samples, 0.03%)</title><rect x="94.7385%" y="325" width="0.0315%" height="15" fill="rgb(208,208,62)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="335.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (2 samples, 0.03%)</title><rect x="94.7385%" y="309" width="0.0315%" height="15" fill="rgb(190,190,55)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="319.50"></text></g><g><title>v8::platform::DefaultJobState::Join (2 samples, 0.03%)</title><rect x="94.7385%" y="293" width="0.0315%" height="15" fill="rgb(186,186,54)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="303.50"></text></g><g><title>v8::internal::PageEvacuationJob::Run (2 samples, 0.03%)</title><rect x="94.7385%" y="277" width="0.0315%" height="15" fill="rgb(192,192,56)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="287.50"></text></g><g><title>v8::internal::Evacuator::EvacuatePage (2 samples, 0.03%)</title><rect x="94.7385%" y="261" width="0.0315%" height="15" fill="rgb(185,185,53)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="271.50"></text></g><g><title>v8::internal::FullEvacuator::RawEvacuatePage (2 samples, 0.03%)</title><rect x="94.7385%" y="245" width="0.0315%" height="15" fill="rgb(210,210,63)" fg:x="6014" fg:w="2"/><text x="94.9885%" y="255.50"></text></g><g><title>v8::internal::LiveObjectVisitor::VisitBlackObjectsNoFail&lt;v8::internal::EvacuateNewSpaceVisitor, v8::internal::NonAtomicMarkingState&gt; (1 samples, 0.02%)</title><rect x="94.7543%" y="229" width="0.0158%" height="15" fill="rgb(181,181,52)" fg:x="6015" fg:w="1"/><text x="95.0043%" y="239.50"></text></g><g><title>v8::internal::EvacuateNewSpaceVisitor::Visit (1 samples, 0.02%)</title><rect x="94.7543%" y="213" width="0.0158%" height="15" fill="rgb(206,206,61)" fg:x="6015" fg:w="1"/><text x="95.0043%" y="223.50"></text></g><g><title>v8::internal::EvacuateVisitorBase::TryEvacuateObject (1 samples, 0.02%)</title><rect x="94.7543%" y="197" width="0.0158%" height="15" fill="rgb(191,191,55)" fg:x="6015" fg:w="1"/><text x="95.0043%" y="207.50"></text></g><g><title>v8::internal::EvacuateVisitorBase::RawMigrateObject&lt;(v8::internal::EvacuateVisitorBase::MigrationMode)0&gt; (1 samples, 0.02%)</title><rect x="94.7543%" y="181" width="0.0158%" height="15" fill="rgb(191,191,55)" fg:x="6015" fg:w="1"/><text x="95.0043%" y="191.50"></text></g><g><title>deno_core::runtime::JsRealm::execute_script (1 samples, 0.02%)</title><rect x="94.7700%" y="453" width="0.0158%" height="15" fill="rgb(209,209,62)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="463.50"></text></g><g><title>v8::Script::Run (1 samples, 0.02%)</title><rect x="94.7700%" y="437" width="0.0158%" height="15" fill="rgb(181,181,52)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="447.50"></text></g><g><title>v8::internal::Execution::CallScript (1 samples, 0.02%)</title><rect x="94.7700%" y="421" width="0.0158%" height="15" fill="rgb(203,203,60)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="431.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (1 samples, 0.02%)</title><rect x="94.7700%" y="405" width="0.0158%" height="15" fill="rgb(198,198,58)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="415.50"></text></g><g><title>Builtins_JSEntry (1 samples, 0.02%)</title><rect x="94.7700%" y="389" width="0.0158%" height="15" fill="rgb(206,59,59)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="399.50"></text></g><g><title>Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="94.7700%" y="373" width="0.0158%" height="15" fill="rgb(234,99,99)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="383.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="94.7700%" y="357" width="0.0158%" height="15" fill="rgb(220,79,79)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="367.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="94.7700%" y="341" width="0.0158%" height="15" fill="rgb(220,79,79)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="351.50"></text></g><g><title>Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="94.7700%" y="325" width="0.0158%" height="15" fill="rgb(249,121,121)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="335.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="94.7700%" y="309" width="0.0158%" height="15" fill="rgb(248,120,120)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="319.50"></text></g><g><title>v8::internal::Runtime_CompileLazy (1 samples, 0.02%)</title><rect x="94.7700%" y="293" width="0.0158%" height="15" fill="rgb(189,189,55)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="303.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="94.7700%" y="277" width="0.0158%" height="15" fill="rgb(217,217,65)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="287.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="94.7700%" y="261" width="0.0158%" height="15" fill="rgb(178,178,51)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="271.50"></text></g><g><title>v8::internal::(anonymous namespace)::IterativelyExecuteAndFinalizeUnoptimizedCompilationJobs&lt;v8::internal::Isolate&gt; (1 samples, 0.02%)</title><rect x="94.7700%" y="245" width="0.0158%" height="15" fill="rgb(181,181,52)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="255.50"></text></g><g><title>v8::internal::(anonymous namespace)::ExecuteSingleUnoptimizedCompilationJob (1 samples, 0.02%)</title><rect x="94.7700%" y="229" width="0.0158%" height="15" fill="rgb(183,183,53)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="239.50"></text></g><g><title>v8::internal::interpreter::InterpreterCompilationJob::ExecuteJobImpl (1 samples, 0.02%)</title><rect x="94.7700%" y="213" width="0.0158%" height="15" fill="rgb(191,191,55)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="223.50"></text></g><g><title>v8::internal::interpreter::BytecodeGenerator::GenerateBytecode (1 samples, 0.02%)</title><rect x="94.7700%" y="197" width="0.0158%" height="15" fill="rgb(203,203,60)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="207.50"></text></g><g><title>v8::internal::interpreter::BytecodeGenerator::GenerateBytecodeBody (1 samples, 0.02%)</title><rect x="94.7700%" y="181" width="0.0158%" height="15" fill="rgb(198,198,58)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="191.50"></text></g><g><title>v8::internal::interpreter::BytecodeGenerator::VisitExpressionStatement (1 samples, 0.02%)</title><rect x="94.7700%" y="165" width="0.0158%" height="15" fill="rgb(176,176,50)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="175.50"></text></g><g><title>v8::internal::interpreter::BytecodeGenerator::VisitAssignment (1 samples, 0.02%)</title><rect x="94.7700%" y="149" width="0.0158%" height="15" fill="rgb(198,198,58)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="159.50"></text></g><g><title>v8::internal::interpreter::BytecodeGenerator::BuildVariableAssignment (1 samples, 0.02%)</title><rect x="94.7700%" y="133" width="0.0158%" height="15" fill="rgb(176,176,50)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="143.50"></text></g><g><title>v8::internal::interpreter::BytecodeArrayBuilder::ThrowReferenceErrorIfHole (1 samples, 0.02%)</title><rect x="94.7700%" y="117" width="0.0158%" height="15" fill="rgb(220,220,66)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="127.50"></text></g><g><title>v8::internal::interpreter::BytecodeArrayWriter::Write (1 samples, 0.02%)</title><rect x="94.7700%" y="101" width="0.0158%" height="15" fill="rgb(195,195,57)" fg:x="6016" fg:w="1"/><text x="95.0200%" y="111.50"></text></g><g><title>deno_core::runtime::JsRuntime::new (2 samples, 0.03%)</title><rect x="94.7700%" y="469" width="0.0315%" height="15" fill="rgb(199,199,58)" fg:x="6016" fg:w="2"/><text x="95.0200%" y="479.50"></text></g><g><title>v8::Isolate::New (1 samples, 0.02%)</title><rect x="94.7858%" y="453" width="0.0158%" height="15" fill="rgb(215,215,64)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="463.50"></text></g><g><title>v8::Isolate::Initialize (1 samples, 0.02%)</title><rect x="94.7858%" y="437" width="0.0158%" height="15" fill="rgb(202,202,59)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="447.50"></text></g><g><title>v8::internal::Snapshot::Initialize (1 samples, 0.02%)</title><rect x="94.7858%" y="421" width="0.0158%" height="15" fill="rgb(219,219,66)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="431.50"></text></g><g><title>v8::internal::Isolate::InitWithSnapshot (1 samples, 0.02%)</title><rect x="94.7858%" y="405" width="0.0158%" height="15" fill="rgb(197,197,58)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="415.50"></text></g><g><title>v8::internal::Isolate::Init (1 samples, 0.02%)</title><rect x="94.7858%" y="389" width="0.0158%" height="15" fill="rgb(220,220,66)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="399.50"></text></g><g><title>v8::internal::StartupDeserializer::DeserializeIntoIsolate (1 samples, 0.02%)</title><rect x="94.7858%" y="373" width="0.0158%" height="15" fill="rgb(211,211,63)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="383.50"></text></g><g><title>v8::internal::Heap::IterateRoots (1 samples, 0.02%)</title><rect x="94.7858%" y="357" width="0.0158%" height="15" fill="rgb(180,180,51)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="367.50"></text></g><g><title>v8::internal::Heap::IterateBuiltins (1 samples, 0.02%)</title><rect x="94.7858%" y="341" width="0.0158%" height="15" fill="rgb(225,225,68)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="351.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::VisitRootPointers (1 samples, 0.02%)</title><rect x="94.7858%" y="325" width="0.0158%" height="15" fill="rgb(208,208,62)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="335.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (1 samples, 0.02%)</title><rect x="94.7858%" y="309" width="0.0158%" height="15" fill="rgb(197,197,58)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="319.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="94.7858%" y="293" width="0.0158%" height="15" fill="rgb(217,217,65)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="303.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="94.7858%" y="277" width="0.0158%" height="15" fill="rgb(214,214,64)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="287.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="94.7858%" y="261" width="0.0158%" height="15" fill="rgb(183,183,53)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="271.50"></text></g><g><title>page_fault (1 samples, 0.02%)</title><rect x="94.7858%" y="245" width="0.0158%" height="15" fill="rgb(239,107,107)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="255.50"></text></g><g><title>do_page_fault (1 samples, 0.02%)</title><rect x="94.7858%" y="229" width="0.0158%" height="15" fill="rgb(249,121,121)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="239.50"></text></g><g><title>__do_page_fault (1 samples, 0.02%)</title><rect x="94.7858%" y="213" width="0.0158%" height="15" fill="rgb(228,90,90)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="223.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="94.7858%" y="197" width="0.0158%" height="15" fill="rgb(225,87,87)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="207.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="94.7858%" y="181" width="0.0158%" height="15" fill="rgb(233,98,98)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="191.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="94.7858%" y="165" width="0.0158%" height="15" fill="rgb(220,79,79)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="175.50"></text></g><g><title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="94.7858%" y="149" width="0.0158%" height="15" fill="rgb(245,115,115)" fg:x="6017" fg:w="1"/><text x="95.0358%" y="159.50"></text></g><g><title>Builtins_CallApiCallback (15 samples, 0.24%)</title><rect x="94.8015%" y="293" width="0.2363%" height="15" fill="rgb(226,89,89)" fg:x="6018" fg:w="15"/><text x="95.0515%" y="303.50"></text></g><g><title>Builtins_KeyedLoadIC (5 samples, 0.08%)</title><rect x="95.0378%" y="293" width="0.0788%" height="15" fill="rgb(220,79,79)" fg:x="6033" fg:w="5"/><text x="95.2878%" y="303.50"></text></g><g><title>Builtins_KeyedLoadIC_PolymorphicName (50 samples, 0.79%)</title><rect x="95.1166%" y="293" width="0.7876%" height="15" fill="rgb(246,117,117)" fg:x="6038" fg:w="50"/><text x="95.3666%" y="303.50"></text></g><g><title>v8::internal::Isolate::FireCallCompletedCallbackInternal (95 samples, 1.50%)</title><rect x="94.8015%" y="453" width="1.4965%" height="15" fill="rgb(181,181,52)" fg:x="6018" fg:w="95"/><text x="95.0515%" y="463.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (95 samples, 1.50%)</title><rect x="94.8015%" y="437" width="1.4965%" height="15" fill="rgb(188,188,54)" fg:x="6018" fg:w="95"/><text x="95.0515%" y="447.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (95 samples, 1.50%)</title><rect x="94.8015%" y="421" width="1.4965%" height="15" fill="rgb(226,226,68)" fg:x="6018" fg:w="95"/><text x="95.0515%" y="431.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (95 samples, 1.50%)</title><rect x="94.8015%" y="405" width="1.4965%" height="15" fill="rgb(223,223,67)" fg:x="6018" fg:w="95"/><text x="95.0515%" y="415.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (95 samples, 1.50%)</title><rect x="94.8015%" y="389" width="1.4965%" height="15" fill="rgb(202,202,60)" fg:x="6018" fg:w="95"/><text x="95.0515%" y="399.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (95 samples, 1.50%)</title><rect x="94.8015%" y="373" width="1.4965%" height="15" fill="rgb(192,192,56)" fg:x="6018" fg:w="95"/><text x="95.0515%" y="383.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (95 samples, 1.50%)</title><rect x="94.8015%" y="357" width="1.4965%" height="15" fill="rgb(233,98,98)" fg:x="6018" fg:w="95"/><text x="95.0515%" y="367.50"></text></g><g><title>Builtins_RunMicrotasks (95 samples, 1.50%)</title><rect x="94.8015%" y="341" width="1.4965%" height="15" fill="rgb(204,56,56)" fg:x="6018" fg:w="95"/><text x="95.0515%" y="351.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (95 samples, 1.50%)</title><rect x="94.8015%" y="325" width="1.4965%" height="15" fill="rgb(247,119,119)" fg:x="6018" fg:w="95"/><text x="95.0515%" y="335.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (95 samples, 1.50%)</title><rect x="94.8015%" y="309" width="1.4965%" height="15" fill="rgb(226,88,88)" fg:x="6018" fg:w="95"/><text x="95.0515%" y="319.50"></text></g><g><title>Builtins_LoadIC (25 samples, 0.39%)</title><rect x="95.9042%" y="293" width="0.3938%" height="15" fill="rgb(229,92,92)" fg:x="6088" fg:w="25"/><text x="96.1542%" y="303.50"></text></g><g><title>Builtins_CallApiCallback (2 samples, 0.03%)</title><rect x="96.2980%" y="293" width="0.0315%" height="15" fill="rgb(221,81,81)" fg:x="6113" fg:w="2"/><text x="96.5480%" y="303.50"></text></g><g><title>Builtins_KeyedLoadIC_PolymorphicName (6 samples, 0.09%)</title><rect x="96.3296%" y="293" width="0.0945%" height="15" fill="rgb(236,103,103)" fg:x="6115" fg:w="6"/><text x="96.5796%" y="303.50"></text></g><g><title>__libc_start_main (108 samples, 1.70%)</title><rect x="94.7385%" y="549" width="1.7013%" height="15" fill="rgb(235,101,101)" fg:x="6014" fg:w="108"/><text x="94.9885%" y="559.50"></text></g><g><title>main (108 samples, 1.70%)</title><rect x="94.7385%" y="533" width="1.7013%" height="15" fill="rgb(238,105,105)" fg:x="6014" fg:w="108"/><text x="94.9885%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (108 samples, 1.70%)</title><rect x="94.7385%" y="517" width="1.7013%" height="15" fill="rgb(187,187,54)" fg:x="6014" fg:w="108"/><text x="94.9885%" y="527.50"></text></g><g><title>runjs::main (108 samples, 1.70%)</title><rect x="94.7385%" y="501" width="1.7013%" height="15" fill="rgb(207,207,61)" fg:x="6014" fg:w="108"/><text x="94.9885%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 1.70%)</title><rect x="94.7385%" y="485" width="1.7013%" height="15" fill="rgb(194,194,56)" fg:x="6014" fg:w="108"/><text x="94.9885%" y="495.50"></text></g><g><title>v8::Module::Evaluate (104 samples, 1.64%)</title><rect x="94.8015%" y="469" width="1.6383%" height="15" fill="rgb(200,200,59)" fg:x="6018" fg:w="104"/><text x="95.0515%" y="479.50"></text></g><g><title>v8::internal::SourceTextModule::Evaluate (9 samples, 0.14%)</title><rect x="96.2980%" y="453" width="0.1418%" height="15" fill="rgb(217,217,65)" fg:x="6113" fg:w="9"/><text x="96.5480%" y="463.50"></text></g><g><title>v8::internal::SourceTextModule::InnerModuleEvaluation (9 samples, 0.14%)</title><rect x="96.2980%" y="437" width="0.1418%" height="15" fill="rgb(177,177,50)" fg:x="6113" fg:w="9"/><text x="96.5480%" y="447.50"></text></g><g><title>v8::internal::SourceTextModule::ExecuteModule (9 samples, 0.14%)</title><rect x="96.2980%" y="421" width="0.1418%" height="15" fill="rgb(200,200,59)" fg:x="6113" fg:w="9"/><text x="96.5480%" y="431.50"></text></g><g><title>v8::internal::Execution::TryCall (9 samples, 0.14%)</title><rect x="96.2980%" y="405" width="0.1418%" height="15" fill="rgb(227,227,69)" fg:x="6113" fg:w="9"/><text x="96.5480%" y="415.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (9 samples, 0.14%)</title><rect x="96.2980%" y="389" width="0.1418%" height="15" fill="rgb(187,187,54)" fg:x="6113" fg:w="9"/><text x="96.5480%" y="399.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (9 samples, 0.14%)</title><rect x="96.2980%" y="373" width="0.1418%" height="15" fill="rgb(212,212,63)" fg:x="6113" fg:w="9"/><text x="96.5480%" y="383.50"></text></g><g><title>Builtins_JSEntry (9 samples, 0.14%)</title><rect x="96.2980%" y="357" width="0.1418%" height="15" fill="rgb(205,57,57)" fg:x="6113" fg:w="9"/><text x="96.5480%" y="367.50"></text></g><g><title>Builtins_JSEntryTrampoline (9 samples, 0.14%)</title><rect x="96.2980%" y="341" width="0.1418%" height="15" fill="rgb(204,56,56)" fg:x="6113" fg:w="9"/><text x="96.5480%" y="351.50"></text></g><g><title>Builtins_GeneratorPrototypeNext (9 samples, 0.14%)</title><rect x="96.2980%" y="325" width="0.1418%" height="15" fill="rgb(210,65,65)" fg:x="6113" fg:w="9"/><text x="96.5480%" y="335.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (9 samples, 0.14%)</title><rect x="96.2980%" y="309" width="0.1418%" height="15" fill="rgb(224,86,86)" fg:x="6113" fg:w="9"/><text x="96.5480%" y="319.50"></text></g><g><title>Builtins_LoadIC (1 samples, 0.02%)</title><rect x="96.4241%" y="293" width="0.0158%" height="15" fill="rgb(219,78,78)" fg:x="6121" fg:w="1"/><text x="96.6741%" y="303.50"></text></g><g><title>_start (109 samples, 1.72%)</title><rect x="94.7385%" y="565" width="1.7171%" height="15" fill="rgb(208,61,61)" fg:x="6014" fg:w="109"/><text x="94.9885%" y="575.50"></text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="96.4398%" y="549" width="0.0158%" height="15" fill="rgb(250,123,123)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="559.50"></text></g><g><title>_dl_start_final (1 samples, 0.02%)</title><rect x="96.4398%" y="533" width="0.0158%" height="15" fill="rgb(236,103,103)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="543.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="96.4398%" y="517" width="0.0158%" height="15" fill="rgb(215,72,72)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="527.50"></text></g><g><title>dl_main (1 samples, 0.02%)</title><rect x="96.4398%" y="501" width="0.0158%" height="15" fill="rgb(238,106,106)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="511.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="96.4398%" y="485" width="0.0158%" height="15" fill="rgb(233,98,98)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="495.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="96.4398%" y="469" width="0.0158%" height="15" fill="rgb(254,129,129)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="479.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="96.4398%" y="453" width="0.0158%" height="15" fill="rgb(250,122,122)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="463.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="96.4398%" y="437" width="0.0158%" height="15" fill="rgb(239,107,107)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="447.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.02%)</title><rect x="96.4398%" y="421" width="0.0158%" height="15" fill="rgb(203,55,55)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="431.50"></text></g><g><title>_dl_map_segments (1 samples, 0.02%)</title><rect x="96.4398%" y="405" width="0.0158%" height="15" fill="rgb(208,62,62)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="415.50"></text></g><g><title>__mmap64 (1 samples, 0.02%)</title><rect x="96.4398%" y="389" width="0.0158%" height="15" fill="rgb(243,113,113)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="96.4398%" y="373" width="0.0158%" height="15" fill="rgb(209,63,63)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="383.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="96.4398%" y="357" width="0.0158%" height="15" fill="rgb(226,88,88)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="367.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="96.4398%" y="341" width="0.0158%" height="15" fill="rgb(246,117,117)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="351.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="96.4398%" y="325" width="0.0158%" height="15" fill="rgb(225,86,86)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="335.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="96.4398%" y="309" width="0.0158%" height="15" fill="rgb(253,128,128)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="319.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="96.4398%" y="293" width="0.0158%" height="15" fill="rgb(254,129,129)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="303.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="96.4398%" y="277" width="0.0158%" height="15" fill="rgb(247,118,118)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="287.50"></text></g><g><title>vma_link (1 samples, 0.02%)</title><rect x="96.4398%" y="261" width="0.0158%" height="15" fill="rgb(250,122,122)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="271.50"></text></g><g><title>__vma_link_rb (1 samples, 0.02%)</title><rect x="96.4398%" y="245" width="0.0158%" height="15" fill="rgb(246,118,118)" fg:x="6122" fg:w="1"/><text x="96.6898%" y="255.50"></text></g><g><title>entry_SYSCALL_64 (155 samples, 2.44%)</title><rect x="96.4556%" y="565" width="2.4417%" height="15" fill="rgb(222,82,82)" fg:x="6123" fg:w="155"/><text x="96.7056%" y="575.50">en..</text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.2596%" y="533" width="0.0158%" height="15" fill="rgb(209,64,64)" fg:x="6301" fg:w="1"/><text x="99.5096%" y="543.50"></text></g><g><title>__do_execve_file.isra.39 (1 samples, 0.02%)</title><rect x="99.2596%" y="517" width="0.0158%" height="15" fill="rgb(226,88,88)" fg:x="6301" fg:w="1"/><text x="99.5096%" y="527.50"></text></g><g><title>search_binary_handler (1 samples, 0.02%)</title><rect x="99.2596%" y="501" width="0.0158%" height="15" fill="rgb(235,101,101)" fg:x="6301" fg:w="1"/><text x="99.5096%" y="511.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.2596%" y="485" width="0.0158%" height="15" fill="rgb(207,60,60)" fg:x="6301" fg:w="1"/><text x="99.5096%" y="495.50"></text></g><g><title>setup_arg_pages (1 samples, 0.02%)</title><rect x="99.2596%" y="469" width="0.0158%" height="15" fill="rgb(217,75,75)" fg:x="6301" fg:w="1"/><text x="99.5096%" y="479.50"></text></g><g><title>shift_arg_pages (1 samples, 0.02%)</title><rect x="99.2596%" y="453" width="0.0158%" height="15" fill="rgb(251,124,124)" fg:x="6301" fg:w="1"/><text x="99.5096%" y="463.50"></text></g><g><title>move_page_tables (1 samples, 0.02%)</title><rect x="99.2596%" y="437" width="0.0158%" height="15" fill="rgb(226,88,88)" fg:x="6301" fg:w="1"/><text x="99.5096%" y="447.50"></text></g><g><title>move_page_tables.part.30 (1 samples, 0.02%)</title><rect x="99.2596%" y="421" width="0.0158%" height="15" fill="rgb(205,57,57)" fg:x="6301" fg:w="1"/><text x="99.5096%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.39%)</title><rect x="98.8973%" y="565" width="0.3938%" height="15" fill="rgb(233,98,98)" fg:x="6278" fg:w="25"/><text x="99.1473%" y="575.50"></text></g><g><title>do_syscall_64 (2 samples, 0.03%)</title><rect x="99.2596%" y="549" width="0.0315%" height="15" fill="rgb(240,109,109)" fg:x="6301" fg:w="2"/><text x="99.5096%" y="559.50"></text></g><g><title>__x64_sys_exit_group (1 samples, 0.02%)</title><rect x="99.2754%" y="533" width="0.0158%" height="15" fill="rgb(228,91,91)" fg:x="6302" fg:w="1"/><text x="99.5254%" y="543.50"></text></g><g><title>do_group_exit (1 samples, 0.02%)</title><rect x="99.2754%" y="517" width="0.0158%" height="15" fill="rgb(220,79,79)" fg:x="6302" fg:w="1"/><text x="99.5254%" y="527.50"></text></g><g><title>do_exit (1 samples, 0.02%)</title><rect x="99.2754%" y="501" width="0.0158%" height="15" fill="rgb(209,63,63)" fg:x="6302" fg:w="1"/><text x="99.5254%" y="511.50"></text></g><g><title>mm_update_next_owner (1 samples, 0.02%)</title><rect x="99.2754%" y="485" width="0.0158%" height="15" fill="rgb(228,91,91)" fg:x="6302" fg:w="1"/><text x="99.5254%" y="495.50"></text></g><g><title>serde_v8::de::from_v8 (5 samples, 0.08%)</title><rect x="99.2911%" y="565" width="0.0788%" height="15" fill="rgb(214,214,64)" fg:x="6303" fg:w="5"/><text x="99.5411%" y="575.50"></text></g><g><title>serde_v8::de::to_utf8 (6 samples, 0.09%)</title><rect x="99.3699%" y="565" width="0.0945%" height="15" fill="rgb(202,202,59)" fg:x="6308" fg:w="6"/><text x="99.6199%" y="575.50"></text></g><g><title>syscall_return_via_sysret (18 samples, 0.28%)</title><rect x="99.4644%" y="565" width="0.2836%" height="15" fill="rgb(201,52,52)" fg:x="6314" fg:w="18"/><text x="99.7144%" y="575.50"></text></g><g><title>v8::External::Value (1 samples, 0.02%)</title><rect x="99.7480%" y="565" width="0.0158%" height="15" fill="rgb(182,182,52)" fg:x="6332" fg:w="1"/><text x="99.9980%" y="575.50"></text></g><g><title>v8::Integer::New (2 samples, 0.03%)</title><rect x="99.7637%" y="565" width="0.0315%" height="15" fill="rgb(196,196,57)" fg:x="6333" fg:w="2"/><text x="100.0137%" y="575.50"></text></g><g><title>v8::number::&lt;impl v8::data::Integer&gt;::new (2 samples, 0.03%)</title><rect x="99.7952%" y="565" width="0.0315%" height="15" fill="rgb(224,224,68)" fg:x="6335" fg:w="2"/><text x="100.0452%" y="575.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (3 samples, 0.05%)</title><rect x="99.8267%" y="565" width="0.0473%" height="15" fill="rgb(212,212,63)" fg:x="6337" fg:w="3"/><text x="100.0767%" y="575.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (1 samples, 0.02%)</title><rect x="99.8740%" y="565" width="0.0158%" height="15" fill="rgb(246,117,117)" fg:x="6340" fg:w="1"/><text x="100.1240%" y="575.50"></text></g><g><title>v8__FunctionCallbackInfo__GetArgument (4 samples, 0.06%)</title><rect x="99.8897%" y="565" width="0.0630%" height="15" fill="rgb(226,88,88)" fg:x="6341" fg:w="4"/><text x="100.1397%" y="575.50"></text></g><g><title>all (6,348 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(216,74,74)" fg:x="0" fg:w="6348"/><text x="0.2500%" y="607.50"></text></g><g><title>runjs (6,244 samples, 98.36%)</title><rect x="1.6383%" y="581" width="98.3617%" height="15" fill="rgb(206,59,59)" fg:x="104" fg:w="6244"/><text x="1.8883%" y="591.50">runjs</text></g><g><title>v8__Integer__New (3 samples, 0.05%)</title><rect x="99.9527%" y="565" width="0.0473%" height="15" fill="rgb(225,86,86)" fg:x="6345" fg:w="3"/><text x="100.2027%" y="575.50"></text></g></svg></svg>