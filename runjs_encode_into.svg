<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="4568"><g><title>[anon] (1 samples, 0.02%)</title><rect x="0.0000%" y="917" width="0.0219%" height="15" fill="rgb(200,50,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>v8::platform::(anonymous namespace)::DefaultTimeFunction (1 samples, 0.02%)</title><rect x="0.0000%" y="901" width="0.0219%" height="15" fill="rgb(175,175,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>__GI___prctl (1 samples, 0.02%)</title><rect x="0.0219%" y="869" width="0.0219%" height="15" fill="rgb(246,117,117)" fg:x="1" fg:w="1"/><text x="0.2719%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.0219%" y="853" width="0.0219%" height="15" fill="rgb(250,123,123)" fg:x="1" fg:w="1"/><text x="0.2719%" y="863.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.0219%" y="837" width="0.0219%" height="15" fill="rgb(216,73,73)" fg:x="1" fg:w="1"/><text x="0.2719%" y="847.50"></text></g><g><title>v8::internal::LocalIsolate::LocalIsolate (1 samples, 0.02%)</title><rect x="0.0438%" y="837" width="0.0219%" height="15" fill="rgb(205,205,61)" fg:x="2" fg:w="1"/><text x="0.2938%" y="847.50"></text></g><g><title>v8::internal::LocalHeap::LocalHeap (1 samples, 0.02%)</title><rect x="0.0438%" y="821" width="0.0219%" height="15" fill="rgb(213,213,63)" fg:x="2" fg:w="1"/><text x="0.2938%" y="831.50"></text></g><g><title>operator new (1 samples, 0.02%)</title><rect x="0.0438%" y="805" width="0.0219%" height="15" fill="rgb(205,58,58)" fg:x="2" fg:w="1"/><text x="0.2938%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.0438%" y="789" width="0.0219%" height="15" fill="rgb(207,60,60)" fg:x="2" fg:w="1"/><text x="0.2938%" y="799.50"></text></g><g><title>tcache_init (1 samples, 0.02%)</title><rect x="0.0438%" y="773" width="0.0219%" height="15" fill="rgb(229,92,92)" fg:x="2" fg:w="1"/><text x="0.2938%" y="783.50"></text></g><g><title>tcache_init (1 samples, 0.02%)</title><rect x="0.0438%" y="757" width="0.0219%" height="15" fill="rgb(254,129,129)" fg:x="2" fg:w="1"/><text x="0.2938%" y="767.50"></text></g><g><title>arena_get2 (1 samples, 0.02%)</title><rect x="0.0438%" y="741" width="0.0219%" height="15" fill="rgb(246,117,117)" fg:x="2" fg:w="1"/><text x="0.2938%" y="751.50"></text></g><g><title>arena_get2 (1 samples, 0.02%)</title><rect x="0.0438%" y="725" width="0.0219%" height="15" fill="rgb(204,57,57)" fg:x="2" fg:w="1"/><text x="0.2938%" y="735.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::Environment::Environment (1 samples, 0.02%)</title><rect x="0.0657%" y="709" width="0.0219%" height="15" fill="rgb(219,219,66)" fg:x="3" fg:w="1"/><text x="0.3157%" y="719.50"></text></g><g><title>v8::internal::compiler::JSGraph::UndefinedConstant (1 samples, 0.02%)</title><rect x="0.0657%" y="693" width="0.0219%" height="15" fill="rgb(224,224,68)" fg:x="3" fg:w="1"/><text x="0.3157%" y="703.50"></text></g><g><title>v8::internal::compiler::CommonNodeCache::FindHeapConstant (1 samples, 0.02%)</title><rect x="0.0657%" y="677" width="0.0219%" height="15" fill="rgb(192,192,56)" fg:x="3" fg:w="1"/><text x="0.3157%" y="687.50"></text></g><g><title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, v8::internal::compiler::Node*&gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, v8::internal::compiler::Node*&gt;, v8::base::hash&lt;long&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, v8::internal::compiler::Node*&gt;, std::__1::equal_to&lt;long&gt;, v8::base::hash&lt;long&gt;, true&gt;, v8::internal::ZoneAllocator&lt;std::__1::__hash_value_type&lt;long, v8::internal::compiler::Node*&gt; &gt; &gt;::__emplace_unique_key_args&lt;long, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;long const&amp;&gt;, std::__1::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="0.0657%" y="661" width="0.0219%" height="15" fill="rgb(179,179,51)" fg:x="3" fg:w="1"/><text x="0.3157%" y="671.50"></text></g><g><title>page_fault (1 samples, 0.02%)</title><rect x="0.0657%" y="645" width="0.0219%" height="15" fill="rgb(207,60,60)" fg:x="3" fg:w="1"/><text x="0.3157%" y="655.50"></text></g><g><title>do_page_fault (1 samples, 0.02%)</title><rect x="0.0657%" y="629" width="0.0219%" height="15" fill="rgb(247,119,119)" fg:x="3" fg:w="1"/><text x="0.3157%" y="639.50"></text></g><g><title>__do_page_fault (1 samples, 0.02%)</title><rect x="0.0657%" y="613" width="0.0219%" height="15" fill="rgb(206,59,59)" fg:x="3" fg:w="1"/><text x="0.3157%" y="623.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="0.0657%" y="597" width="0.0219%" height="15" fill="rgb(207,61,61)" fg:x="3" fg:w="1"/><text x="0.3157%" y="607.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="0.0657%" y="581" width="0.0219%" height="15" fill="rgb(243,113,113)" fg:x="3" fg:w="1"/><text x="0.3157%" y="591.50"></text></g><g><title>filemap_map_pages (1 samples, 0.02%)</title><rect x="0.0657%" y="565" width="0.0219%" height="15" fill="rgb(201,51,51)" fg:x="3" fg:w="1"/><text x="0.3157%" y="575.50"></text></g><g><title>xas_find (1 samples, 0.02%)</title><rect x="0.0657%" y="549" width="0.0219%" height="15" fill="rgb(204,56,56)" fg:x="3" fg:w="1"/><text x="0.3157%" y="559.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GraphBuilderPhase&gt; (2 samples, 0.04%)</title><rect x="0.0657%" y="773" width="0.0438%" height="15" fill="rgb(206,206,61)" fg:x="3" fg:w="2"/><text x="0.3157%" y="783.50"></text></g><g><title>v8::internal::compiler::GraphBuilderPhase::Run (2 samples, 0.04%)</title><rect x="0.0657%" y="757" width="0.0438%" height="15" fill="rgb(182,182,52)" fg:x="3" fg:w="2"/><text x="0.3157%" y="767.50"></text></g><g><title>v8::internal::compiler::BuildGraphFromBytecode (2 samples, 0.04%)</title><rect x="0.0657%" y="741" width="0.0438%" height="15" fill="rgb(201,201,59)" fg:x="3" fg:w="2"/><text x="0.3157%" y="751.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (2 samples, 0.04%)</title><rect x="0.0657%" y="725" width="0.0438%" height="15" fill="rgb(213,213,63)" fg:x="3" fg:w="2"/><text x="0.3157%" y="735.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::VisitBytecodes (1 samples, 0.02%)</title><rect x="0.0876%" y="709" width="0.0219%" height="15" fill="rgb(210,210,62)" fg:x="4" fg:w="1"/><text x="0.3376%" y="719.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::VisitThrowReferenceErrorIfHole (1 samples, 0.02%)</title><rect x="0.0876%" y="693" width="0.0219%" height="15" fill="rgb(183,183,53)" fg:x="4" fg:w="1"/><text x="0.3376%" y="703.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::CanonicalPersistentHandle&lt;v8::internal::Object&gt; (1 samples, 0.02%)</title><rect x="0.0876%" y="677" width="0.0219%" height="15" fill="rgb(199,199,58)" fg:x="4" fg:w="1"/><text x="0.3376%" y="687.50"></text></g><g><title>v8::internal::RootIndexMap::Lookup (1 samples, 0.02%)</title><rect x="0.0876%" y="661" width="0.0219%" height="15" fill="rgb(196,196,57)" fg:x="4" fg:w="1"/><text x="0.3376%" y="671.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.02%)</title><rect x="0.1095%" y="725" width="0.0219%" height="15" fill="rgb(218,218,65)" fg:x="5" fg:w="1"/><text x="0.3595%" y="735.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.02%)</title><rect x="0.1095%" y="709" width="0.0219%" height="15" fill="rgb(220,220,66)" fg:x="5" fg:w="1"/><text x="0.3595%" y="719.50"></text></g><g><title>v8::internal::compiler::JSInliningHeuristic::Reduce (1 samples, 0.02%)</title><rect x="0.1095%" y="693" width="0.0219%" height="15" fill="rgb(195,195,57)" fg:x="5" fg:w="1"/><text x="0.3595%" y="703.50"></text></g><g><title>v8::internal::compiler::JSInliningHeuristic::InlineCandidate (1 samples, 0.02%)</title><rect x="0.1095%" y="677" width="0.0219%" height="15" fill="rgb(183,183,53)" fg:x="5" fg:w="1"/><text x="0.3595%" y="687.50"></text></g><g><title>v8::internal::compiler::JSInliner::ReduceJSCall (1 samples, 0.02%)</title><rect x="0.1095%" y="661" width="0.0219%" height="15" fill="rgb(175,175,50)" fg:x="5" fg:w="1"/><text x="0.3595%" y="671.50"></text></g><g><title>v8::internal::compiler::NodeProperties::CanBePrimitive (1 samples, 0.02%)</title><rect x="0.1095%" y="645" width="0.0219%" height="15" fill="rgb(221,221,66)" fg:x="5" fg:w="1"/><text x="0.3595%" y="655.50"></text></g><g><title>v8::internal::compiler::MapInference::MapInference (1 samples, 0.02%)</title><rect x="0.1095%" y="629" width="0.0219%" height="15" fill="rgb(215,215,64)" fg:x="5" fg:w="1"/><text x="0.3595%" y="639.50"></text></g><g><title>v8::internal::compiler::NodeProperties::InferMapsUnsafe (1 samples, 0.02%)</title><rect x="0.1095%" y="613" width="0.0219%" height="15" fill="rgb(218,218,65)" fg:x="5" fg:w="1"/><text x="0.3595%" y="623.50"></text></g><g><title>v8::internal::compiler::(anonymous namespace)::ToRefSet (1 samples, 0.02%)</title><rect x="0.1095%" y="597" width="0.0219%" height="15" fill="rgb(189,189,55)" fg:x="5" fg:w="1"/><text x="0.3595%" y="607.50"></text></g><g><title>v8::internal::compiler::TryMakeRef&lt;v8::internal::Map, void&gt; (1 samples, 0.02%)</title><rect x="0.1095%" y="581" width="0.0219%" height="15" fill="rgb(191,191,56)" fg:x="5" fg:w="1"/><text x="0.3595%" y="591.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::TryGetOrCreateData (1 samples, 0.02%)</title><rect x="0.1095%" y="565" width="0.0219%" height="15" fill="rgb(197,197,58)" fg:x="5" fg:w="1"/><text x="0.3595%" y="575.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::CanonicalPersistentHandle&lt;v8::internal::Object&gt; (1 samples, 0.02%)</title><rect x="0.1095%" y="549" width="0.0219%" height="15" fill="rgb(202,202,60)" fg:x="5" fg:w="1"/><text x="0.3595%" y="559.50"></text></g><g><title>v8::internal::RootIndexMap::Lookup (1 samples, 0.02%)</title><rect x="0.1095%" y="533" width="0.0219%" height="15" fill="rgb(224,224,68)" fg:x="5" fg:w="1"/><text x="0.3595%" y="543.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (5 samples, 0.11%)</title><rect x="0.0438%" y="853" width="0.1095%" height="15" fill="rgb(198,198,58)" fg:x="2" fg:w="5"/><text x="0.2938%" y="863.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (4 samples, 0.09%)</title><rect x="0.0657%" y="837" width="0.0876%" height="15" fill="rgb(208,208,62)" fg:x="3" fg:w="4"/><text x="0.3157%" y="847.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (4 samples, 0.09%)</title><rect x="0.0657%" y="821" width="0.0876%" height="15" fill="rgb(220,220,66)" fg:x="3" fg:w="4"/><text x="0.3157%" y="831.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (4 samples, 0.09%)</title><rect x="0.0657%" y="805" width="0.0876%" height="15" fill="rgb(189,189,55)" fg:x="3" fg:w="4"/><text x="0.3157%" y="815.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::CreateGraph (4 samples, 0.09%)</title><rect x="0.0657%" y="789" width="0.0876%" height="15" fill="rgb(181,181,52)" fg:x="3" fg:w="4"/><text x="0.3157%" y="799.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (2 samples, 0.04%)</title><rect x="0.1095%" y="773" width="0.0438%" height="15" fill="rgb(183,183,53)" fg:x="5" fg:w="2"/><text x="0.3595%" y="783.50"></text></g><g><title>v8::internal::compiler::InliningPhase::Run (2 samples, 0.04%)</title><rect x="0.1095%" y="757" width="0.0438%" height="15" fill="rgb(226,226,68)" fg:x="5" fg:w="2"/><text x="0.3595%" y="767.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (2 samples, 0.04%)</title><rect x="0.1095%" y="741" width="0.0438%" height="15" fill="rgb(204,204,60)" fg:x="5" fg:w="2"/><text x="0.3595%" y="751.50"></text></g><g><title>v8::internal::compiler::JSInliningHeuristic::Finalize (1 samples, 0.02%)</title><rect x="0.1313%" y="725" width="0.0219%" height="15" fill="rgb(208,208,62)" fg:x="6" fg:w="1"/><text x="0.3813%" y="735.50"></text></g><g><title>v8::internal::compiler::JSInliningHeuristic::InlineCandidate (1 samples, 0.02%)</title><rect x="0.1313%" y="709" width="0.0219%" height="15" fill="rgb(209,209,62)" fg:x="6" fg:w="1"/><text x="0.3813%" y="719.50"></text></g><g><title>v8::internal::compiler::JSInliner::ReduceJSCall (1 samples, 0.02%)</title><rect x="0.1313%" y="693" width="0.0219%" height="15" fill="rgb(203,203,60)" fg:x="6" fg:w="1"/><text x="0.3813%" y="703.50"></text></g><g><title>v8::internal::compiler::BuildGraphFromBytecode (1 samples, 0.02%)</title><rect x="0.1313%" y="677" width="0.0219%" height="15" fill="rgb(210,210,62)" fg:x="6" fg:w="1"/><text x="0.3813%" y="687.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (1 samples, 0.02%)</title><rect x="0.1313%" y="661" width="0.0219%" height="15" fill="rgb(194,194,57)" fg:x="6" fg:w="1"/><text x="0.3813%" y="671.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::VisitBytecodes (1 samples, 0.02%)</title><rect x="0.1313%" y="645" width="0.0219%" height="15" fill="rgb(177,177,51)" fg:x="6" fg:w="1"/><text x="0.3813%" y="655.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::BuildCall (1 samples, 0.02%)</title><rect x="0.1313%" y="629" width="0.0219%" height="15" fill="rgb(175,175,50)" fg:x="6" fg:w="1"/><text x="0.3813%" y="639.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::GetFeedbackForCall (1 samples, 0.02%)</title><rect x="0.1313%" y="613" width="0.0219%" height="15" fill="rgb(186,186,54)" fg:x="6" fg:w="1"/><text x="0.3813%" y="623.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::ReadFeedbackForCall (1 samples, 0.02%)</title><rect x="0.1313%" y="597" width="0.0219%" height="15" fill="rgb(177,177,50)" fg:x="6" fg:w="1"/><text x="0.3813%" y="607.50"></text></g><g><title>v8::internal::compiler::TryMakeRef&lt;v8::internal::HeapObject, void&gt; (1 samples, 0.02%)</title><rect x="0.1313%" y="581" width="0.0219%" height="15" fill="rgb(229,229,69)" fg:x="6" fg:w="1"/><text x="0.3813%" y="591.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::TryGetOrCreateData (1 samples, 0.02%)</title><rect x="0.1313%" y="565" width="0.0219%" height="15" fill="rgb(210,210,62)" fg:x="6" fg:w="1"/><text x="0.3813%" y="575.50"></text></g><g><title>v8::internal::Zone::New&lt;v8::internal::compiler::JSFunctionData, v8::internal::compiler::JSHeapBroker*, v8::internal::compiler::ObjectData**, v8::internal::Handle&lt;v8::internal::JSFunction&gt; const, v8::internal::compiler::ObjectDataKind&gt; (1 samples, 0.02%)</title><rect x="0.1313%" y="549" width="0.0219%" height="15" fill="rgb(191,191,55)" fg:x="6" fg:w="1"/><text x="0.3813%" y="559.50"></text></g><g><title>v8::internal::compiler::JSFunctionData::Cache (1 samples, 0.02%)</title><rect x="0.1313%" y="533" width="0.0219%" height="15" fill="rgb(198,198,58)" fg:x="6" fg:w="1"/><text x="0.3813%" y="543.50"></text></g><g><title>v8::internal::compiler::TryMakeRef&lt;v8::internal::Context, void&gt; (1 samples, 0.02%)</title><rect x="0.1313%" y="517" width="0.0219%" height="15" fill="rgb(208,208,62)" fg:x="6" fg:w="1"/><text x="0.3813%" y="527.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::TryGetOrCreateData (1 samples, 0.02%)</title><rect x="0.1313%" y="501" width="0.0219%" height="15" fill="rgb(193,193,56)" fg:x="6" fg:w="1"/><text x="0.3813%" y="511.50"></text></g><g><title>v8::internal::compiler::RefsMap::Lookup (1 samples, 0.02%)</title><rect x="0.1313%" y="485" width="0.0219%" height="15" fill="rgb(217,217,65)" fg:x="6" fg:w="1"/><text x="0.3813%" y="495.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::RecordSlot&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="0.2189%" y="805" width="0.0219%" height="15" fill="rgb(190,190,55)" fg:x="10" fg:w="1"/><text x="0.4689%" y="815.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::VisitLeftTrimmableArray&lt;v8::internal::FixedArray&gt; (2 samples, 0.04%)</title><rect x="0.2408%" y="805" width="0.0438%" height="15" fill="rgb(211,211,63)" fg:x="11" fg:w="2"/><text x="0.4908%" y="815.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (2 samples, 0.04%)</title><rect x="0.2408%" y="789" width="0.0438%" height="15" fill="rgb(183,183,53)" fg:x="11" fg:w="2"/><text x="0.4908%" y="799.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::RecordSlot&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="0.2627%" y="773" width="0.0219%" height="15" fill="rgb(202,202,60)" fg:x="12" fg:w="1"/><text x="0.5127%" y="783.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (7 samples, 0.15%)</title><rect x="0.1532%" y="853" width="0.1532%" height="15" fill="rgb(187,187,54)" fg:x="7" fg:w="7"/><text x="0.4032%" y="863.50"></text></g><g><title>v8::internal::ConcurrentMarking::JobTask::Run (7 samples, 0.15%)</title><rect x="0.1532%" y="837" width="0.1532%" height="15" fill="rgb(195,195,57)" fg:x="7" fg:w="7"/><text x="0.4032%" y="847.50"></text></g><g><title>v8::internal::ConcurrentMarking::Run (7 samples, 0.15%)</title><rect x="0.1532%" y="821" width="0.1532%" height="15" fill="rgb(203,203,60)" fg:x="7" fg:w="7"/><text x="0.4032%" y="831.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitorUtility::VisitJSObjectSubclass&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::JSFunction, v8::internal::JSFunction::BodyDescriptor&gt; (1 samples, 0.02%)</title><rect x="0.2846%" y="805" width="0.0219%" height="15" fill="rgb(185,185,53)" fg:x="13" fg:w="1"/><text x="0.5346%" y="815.50"></text></g><g><title>v8::internal::JSFunction::BodyDescriptor::IterateBody&lt;v8::internal::ConcurrentMarkingVisitor&gt; (1 samples, 0.02%)</title><rect x="0.2846%" y="789" width="0.0219%" height="15" fill="rgb(184,184,53)" fg:x="13" fg:w="1"/><text x="0.5346%" y="799.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (1 samples, 0.02%)</title><rect x="0.2846%" y="773" width="0.0219%" height="15" fill="rgb(225,225,68)" fg:x="13" fg:w="1"/><text x="0.5346%" y="783.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="0.3065%" y="837" width="0.0219%" height="15" fill="rgb(219,77,77)" fg:x="14" fg:w="1"/><text x="0.5565%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="0.3284%" y="837" width="0.0219%" height="15" fill="rgb(223,83,83)" fg:x="15" fg:w="1"/><text x="0.5784%" y="847.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="0.3284%" y="821" width="0.0219%" height="15" fill="rgb(251,124,124)" fg:x="15" fg:w="1"/><text x="0.5784%" y="831.50"></text></g><g><title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="0.3284%" y="805" width="0.0219%" height="15" fill="rgb(219,78,78)" fg:x="15" fg:w="1"/><text x="0.5784%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.3284%" y="789" width="0.0219%" height="15" fill="rgb(245,116,116)" fg:x="15" fg:w="1"/><text x="0.5784%" y="799.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="0.3284%" y="773" width="0.0219%" height="15" fill="rgb(250,124,124)" fg:x="15" fg:w="1"/><text x="0.5784%" y="783.50"></text></g><g><title>__pthread_mutex_cond_lock (11 samples, 0.24%)</title><rect x="0.3503%" y="805" width="0.2408%" height="15" fill="rgb(229,92,92)" fg:x="16" fg:w="11"/><text x="0.6003%" y="815.50"></text></g><g><title>__lll_lock_wait (11 samples, 0.24%)</title><rect x="0.3503%" y="789" width="0.2408%" height="15" fill="rgb(252,126,126)" fg:x="16" fg:w="11"/><text x="0.6003%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.24%)</title><rect x="0.3503%" y="773" width="0.2408%" height="15" fill="rgb(216,73,73)" fg:x="16" fg:w="11"/><text x="0.6003%" y="783.50"></text></g><g><title>do_syscall_64 (11 samples, 0.24%)</title><rect x="0.3503%" y="757" width="0.2408%" height="15" fill="rgb(204,55,55)" fg:x="16" fg:w="11"/><text x="0.6003%" y="767.50"></text></g><g><title>__x64_sys_futex (10 samples, 0.22%)</title><rect x="0.3722%" y="741" width="0.2189%" height="15" fill="rgb(229,93,93)" fg:x="17" fg:w="10"/><text x="0.6222%" y="751.50"></text></g><g><title>do_futex (10 samples, 0.22%)</title><rect x="0.3722%" y="725" width="0.2189%" height="15" fill="rgb(240,109,109)" fg:x="17" fg:w="10"/><text x="0.6222%" y="735.50"></text></g><g><title>futex_wait (10 samples, 0.22%)</title><rect x="0.3722%" y="709" width="0.2189%" height="15" fill="rgb(239,107,107)" fg:x="17" fg:w="10"/><text x="0.6222%" y="719.50"></text></g><g><title>futex_wait_queue_me (10 samples, 0.22%)</title><rect x="0.3722%" y="693" width="0.2189%" height="15" fill="rgb(251,125,125)" fg:x="17" fg:w="10"/><text x="0.6222%" y="703.50"></text></g><g><title>schedule (10 samples, 0.22%)</title><rect x="0.3722%" y="677" width="0.2189%" height="15" fill="rgb(227,90,90)" fg:x="17" fg:w="10"/><text x="0.6222%" y="687.50"></text></g><g><title>__sched_text_start (10 samples, 0.22%)</title><rect x="0.3722%" y="661" width="0.2189%" height="15" fill="rgb(223,84,84)" fg:x="17" fg:w="10"/><text x="0.6222%" y="671.50"></text></g><g><title>finish_task_switch (10 samples, 0.22%)</title><rect x="0.3722%" y="645" width="0.2189%" height="15" fill="rgb(202,53,53)" fg:x="17" fg:w="10"/><text x="0.6222%" y="655.50"></text></g><g><title>__perf_event_task_sched_in (10 samples, 0.22%)</title><rect x="0.3722%" y="629" width="0.2189%" height="15" fill="rgb(234,99,99)" fg:x="17" fg:w="10"/><text x="0.6222%" y="639.50"></text></g><g><title>x86_pmu_enable (10 samples, 0.22%)</title><rect x="0.3722%" y="613" width="0.2189%" height="15" fill="rgb(223,83,83)" fg:x="17" fg:w="10"/><text x="0.6222%" y="623.50"></text></g><g><title>intel_tfa_pmu_enable_all (10 samples, 0.22%)</title><rect x="0.3722%" y="597" width="0.2189%" height="15" fill="rgb(249,122,122)" fg:x="17" fg:w="10"/><text x="0.6222%" y="607.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (10 samples, 0.22%)</title><rect x="0.3722%" y="581" width="0.2189%" height="15" fill="rgb(239,107,107)" fg:x="17" fg:w="10"/><text x="0.6222%" y="591.50"></text></g><g><title>native_write_msr (10 samples, 0.22%)</title><rect x="0.3722%" y="565" width="0.2189%" height="15" fill="rgb(230,94,94)" fg:x="17" fg:w="10"/><text x="0.6222%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="0.5911%" y="789" width="0.0219%" height="15" fill="rgb(204,56,56)" fg:x="27" fg:w="1"/><text x="0.8411%" y="799.50"></text></g><g><title>deactivate_task (1 samples, 0.02%)</title><rect x="0.6130%" y="661" width="0.0219%" height="15" fill="rgb(225,87,87)" fg:x="28" fg:w="1"/><text x="0.8630%" y="671.50"></text></g><g><title>dequeue_task (1 samples, 0.02%)</title><rect x="0.6130%" y="645" width="0.0219%" height="15" fill="rgb(206,60,60)" fg:x="28" fg:w="1"/><text x="0.8630%" y="655.50"></text></g><g><title>psi_task_change (1 samples, 0.02%)</title><rect x="0.6130%" y="629" width="0.0219%" height="15" fill="rgb(253,127,127)" fg:x="28" fg:w="1"/><text x="0.8630%" y="639.50"></text></g><g><title>__perf_event_task_sched_in (34 samples, 0.74%)</title><rect x="0.6349%" y="645" width="0.7443%" height="15" fill="rgb(205,57,57)" fg:x="29" fg:w="34"/><text x="0.8849%" y="655.50"></text></g><g><title>x86_pmu_enable (34 samples, 0.74%)</title><rect x="0.6349%" y="629" width="0.7443%" height="15" fill="rgb(205,58,58)" fg:x="29" fg:w="34"/><text x="0.8849%" y="639.50"></text></g><g><title>intel_tfa_pmu_enable_all (34 samples, 0.74%)</title><rect x="0.6349%" y="613" width="0.7443%" height="15" fill="rgb(201,51,51)" fg:x="29" fg:w="34"/><text x="0.8849%" y="623.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (34 samples, 0.74%)</title><rect x="0.6349%" y="597" width="0.7443%" height="15" fill="rgb(219,78,78)" fg:x="29" fg:w="34"/><text x="0.8849%" y="607.50"></text></g><g><title>native_write_msr (34 samples, 0.74%)</title><rect x="0.6349%" y="581" width="0.7443%" height="15" fill="rgb(216,74,74)" fg:x="29" fg:w="34"/><text x="0.8849%" y="591.50"></text></g><g><title>call_function_interrupt (1 samples, 0.02%)</title><rect x="1.3792%" y="645" width="0.0219%" height="15" fill="rgb(216,73,73)" fg:x="63" fg:w="1"/><text x="1.6292%" y="655.50"></text></g><g><title>smp_call_function_interrupt (1 samples, 0.02%)</title><rect x="1.3792%" y="629" width="0.0219%" height="15" fill="rgb(244,115,115)" fg:x="63" fg:w="1"/><text x="1.6292%" y="639.50"></text></g><g><title>generic_smp_call_function_single_interrupt (1 samples, 0.02%)</title><rect x="1.3792%" y="613" width="0.0219%" height="15" fill="rgb(227,89,89)" fg:x="63" fg:w="1"/><text x="1.6292%" y="623.50"></text></g><g><title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="1.3792%" y="597" width="0.0219%" height="15" fill="rgb(246,117,117)" fg:x="63" fg:w="1"/><text x="1.6292%" y="607.50"></text></g><g><title>irq_work_run (1 samples, 0.02%)</title><rect x="1.3792%" y="581" width="0.0219%" height="15" fill="rgb(225,87,87)" fg:x="63" fg:w="1"/><text x="1.6292%" y="591.50"></text></g><g><title>irq_work_run_list (1 samples, 0.02%)</title><rect x="1.3792%" y="565" width="0.0219%" height="15" fill="rgb(241,110,110)" fg:x="63" fg:w="1"/><text x="1.6292%" y="575.50"></text></g><g><title>perf_event_wakeup (1 samples, 0.02%)</title><rect x="1.3792%" y="549" width="0.0219%" height="15" fill="rgb(227,89,89)" fg:x="63" fg:w="1"/><text x="1.6292%" y="559.50"></text></g><g><title>__x64_sys_futex (37 samples, 0.81%)</title><rect x="0.6130%" y="757" width="0.8100%" height="15" fill="rgb(238,105,105)" fg:x="28" fg:w="37"/><text x="0.8630%" y="767.50"></text></g><g><title>do_futex (37 samples, 0.81%)</title><rect x="0.6130%" y="741" width="0.8100%" height="15" fill="rgb(241,110,110)" fg:x="28" fg:w="37"/><text x="0.8630%" y="751.50"></text></g><g><title>futex_wait (37 samples, 0.81%)</title><rect x="0.6130%" y="725" width="0.8100%" height="15" fill="rgb(205,58,58)" fg:x="28" fg:w="37"/><text x="0.8630%" y="735.50"></text></g><g><title>futex_wait_queue_me (37 samples, 0.81%)</title><rect x="0.6130%" y="709" width="0.8100%" height="15" fill="rgb(228,91,91)" fg:x="28" fg:w="37"/><text x="0.8630%" y="719.50"></text></g><g><title>schedule (37 samples, 0.81%)</title><rect x="0.6130%" y="693" width="0.8100%" height="15" fill="rgb(217,75,75)" fg:x="28" fg:w="37"/><text x="0.8630%" y="703.50"></text></g><g><title>__sched_text_start (37 samples, 0.81%)</title><rect x="0.6130%" y="677" width="0.8100%" height="15" fill="rgb(216,74,74)" fg:x="28" fg:w="37"/><text x="0.8630%" y="687.50"></text></g><g><title>finish_task_switch (36 samples, 0.79%)</title><rect x="0.6349%" y="661" width="0.7881%" height="15" fill="rgb(230,93,93)" fg:x="29" fg:w="36"/><text x="0.8849%" y="671.50"></text></g><g><title>irq_work_interrupt (1 samples, 0.02%)</title><rect x="1.4011%" y="645" width="0.0219%" height="15" fill="rgb(208,62,62)" fg:x="64" fg:w="1"/><text x="1.6511%" y="655.50"></text></g><g><title>smp_irq_work_interrupt (1 samples, 0.02%)</title><rect x="1.4011%" y="629" width="0.0219%" height="15" fill="rgb(229,93,93)" fg:x="64" fg:w="1"/><text x="1.6511%" y="639.50"></text></g><g><title>irq_work_run (1 samples, 0.02%)</title><rect x="1.4011%" y="613" width="0.0219%" height="15" fill="rgb(203,54,54)" fg:x="64" fg:w="1"/><text x="1.6511%" y="623.50"></text></g><g><title>irq_work_run_list (1 samples, 0.02%)</title><rect x="1.4011%" y="597" width="0.0219%" height="15" fill="rgb(231,95,95)" fg:x="64" fg:w="1"/><text x="1.6511%" y="607.50"></text></g><g><title>perf_pending_event (1 samples, 0.02%)</title><rect x="1.4011%" y="581" width="0.0219%" height="15" fill="rgb(211,67,67)" fg:x="64" fg:w="1"/><text x="1.6511%" y="591.50"></text></g><g><title>perf_event_wakeup (1 samples, 0.02%)</title><rect x="1.4011%" y="565" width="0.0219%" height="15" fill="rgb(243,113,113)" fg:x="64" fg:w="1"/><text x="1.6511%" y="575.50"></text></g><g><title>__wake_up (1 samples, 0.02%)</title><rect x="1.4011%" y="549" width="0.0219%" height="15" fill="rgb(203,54,54)" fg:x="64" fg:w="1"/><text x="1.6511%" y="559.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1.4011%" y="533" width="0.0219%" height="15" fill="rgb(254,129,129)" fg:x="64" fg:w="1"/><text x="1.6511%" y="543.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="1.4011%" y="517" width="0.0219%" height="15" fill="rgb(213,69,69)" fg:x="64" fg:w="1"/><text x="1.6511%" y="527.50"></text></g><g><title>pollwake (1 samples, 0.02%)</title><rect x="1.4011%" y="501" width="0.0219%" height="15" fill="rgb(202,53,53)" fg:x="64" fg:w="1"/><text x="1.6511%" y="511.50"></text></g><g><title>default_wake_function (1 samples, 0.02%)</title><rect x="1.4011%" y="485" width="0.0219%" height="15" fill="rgb(214,70,70)" fg:x="64" fg:w="1"/><text x="1.6511%" y="495.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1.4011%" y="469" width="0.0219%" height="15" fill="rgb(229,92,92)" fg:x="64" fg:w="1"/><text x="1.6511%" y="479.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="1.4011%" y="453" width="0.0219%" height="15" fill="rgb(226,88,88)" fg:x="64" fg:w="1"/><text x="1.6511%" y="463.50"></text></g><g><title>activate_task (1 samples, 0.02%)</title><rect x="1.4011%" y="437" width="0.0219%" height="15" fill="rgb(204,56,56)" fg:x="64" fg:w="1"/><text x="1.6511%" y="447.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="1.4011%" y="421" width="0.0219%" height="15" fill="rgb(209,64,64)" fg:x="64" fg:w="1"/><text x="1.6511%" y="431.50"></text></g><g><title>enqueue_entity (1 samples, 0.02%)</title><rect x="1.4011%" y="405" width="0.0219%" height="15" fill="rgb(229,93,93)" fg:x="64" fg:w="1"/><text x="1.6511%" y="415.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="1.4011%" y="389" width="0.0219%" height="15" fill="rgb(229,93,93)" fg:x="64" fg:w="1"/><text x="1.6511%" y="399.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1.4011%" y="373" width="0.0219%" height="15" fill="rgb(223,84,84)" fg:x="64" fg:w="1"/><text x="1.6511%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (38 samples, 0.83%)</title><rect x="0.6130%" y="789" width="0.8319%" height="15" fill="rgb(244,114,114)" fg:x="28" fg:w="38"/><text x="0.8630%" y="799.50"></text></g><g><title>do_syscall_64 (38 samples, 0.83%)</title><rect x="0.6130%" y="773" width="0.8319%" height="15" fill="rgb(249,122,122)" fg:x="28" fg:w="38"/><text x="0.8630%" y="783.50"></text></g><g><title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1.4229%" y="757" width="0.0219%" height="15" fill="rgb(247,119,119)" fg:x="65" fg:w="1"/><text x="1.6729%" y="767.50"></text></g><g><title>do_signal (1 samples, 0.02%)</title><rect x="1.4229%" y="741" width="0.0219%" height="15" fill="rgb(248,119,119)" fg:x="65" fg:w="1"/><text x="1.6729%" y="751.50"></text></g><g><title>get_signal (1 samples, 0.02%)</title><rect x="1.4229%" y="725" width="0.0219%" height="15" fill="rgb(211,66,66)" fg:x="65" fg:w="1"/><text x="1.6729%" y="735.50"></text></g><g><title>do_group_exit (1 samples, 0.02%)</title><rect x="1.4229%" y="709" width="0.0219%" height="15" fill="rgb(208,62,62)" fg:x="65" fg:w="1"/><text x="1.6729%" y="719.50"></text></g><g><title>do_exit (1 samples, 0.02%)</title><rect x="1.4229%" y="693" width="0.0219%" height="15" fill="rgb(207,61,61)" fg:x="65" fg:w="1"/><text x="1.6729%" y="703.50"></text></g><g><title>exit_mm_release (1 samples, 0.02%)</title><rect x="1.4229%" y="677" width="0.0219%" height="15" fill="rgb(248,120,120)" fg:x="65" fg:w="1"/><text x="1.6729%" y="687.50"></text></g><g><title>mm_release (1 samples, 0.02%)</title><rect x="1.4229%" y="661" width="0.0219%" height="15" fill="rgb(224,85,85)" fg:x="65" fg:w="1"/><text x="1.6729%" y="671.50"></text></g><g><title>do_futex (1 samples, 0.02%)</title><rect x="1.4229%" y="645" width="0.0219%" height="15" fill="rgb(226,88,88)" fg:x="65" fg:w="1"/><text x="1.6729%" y="655.50"></text></g><g><title>futex_wake (1 samples, 0.02%)</title><rect x="1.4229%" y="629" width="0.0219%" height="15" fill="rgb(217,75,75)" fg:x="65" fg:w="1"/><text x="1.6729%" y="639.50"></text></g><g><title>__GI___clone (66 samples, 1.44%)</title><rect x="0.0219%" y="917" width="1.4448%" height="15" fill="rgb(223,84,84)" fg:x="1" fg:w="66"/><text x="0.2719%" y="927.50"></text></g><g><title>start_thread (66 samples, 1.44%)</title><rect x="0.0219%" y="901" width="1.4448%" height="15" fill="rgb(205,57,57)" fg:x="1" fg:w="66"/><text x="0.2719%" y="911.50"></text></g><g><title>v8::base::ThreadEntry (66 samples, 1.44%)</title><rect x="0.0219%" y="885" width="1.4448%" height="15" fill="rgb(214,214,64)" fg:x="1" fg:w="66"/><text x="0.2719%" y="895.50"></text></g><g><title>v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (65 samples, 1.42%)</title><rect x="0.0438%" y="869" width="1.4229%" height="15" fill="rgb(181,181,52)" fg:x="2" fg:w="65"/><text x="0.2938%" y="879.50"></text></g><g><title>v8::platform::DelayedTaskQueue::GetNext (53 samples, 1.16%)</title><rect x="0.3065%" y="853" width="1.1602%" height="15" fill="rgb(200,200,59)" fg:x="14" fg:w="53"/><text x="0.5565%" y="863.50"></text></g><g><title>__pthread_cond_wait (51 samples, 1.12%)</title><rect x="0.3503%" y="837" width="1.1165%" height="15" fill="rgb(209,63,63)" fg:x="16" fg:w="51"/><text x="0.6003%" y="847.50"></text></g><g><title>__pthread_cond_wait_common (51 samples, 1.12%)</title><rect x="0.3503%" y="821" width="1.1165%" height="15" fill="rgb(216,73,73)" fg:x="16" fg:w="51"/><text x="0.6003%" y="831.50"></text></g><g><title>futex_wait_cancelable (40 samples, 0.88%)</title><rect x="0.5911%" y="805" width="0.8757%" height="15" fill="rgb(201,52,52)" fg:x="27" fg:w="40"/><text x="0.8411%" y="815.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="1.4448%" y="789" width="0.0219%" height="15" fill="rgb(204,57,57)" fg:x="66" fg:w="1"/><text x="1.6948%" y="799.50"></text></g><g><title>V8_DefaultWorke (68 samples, 1.49%)</title><rect x="0.0000%" y="933" width="1.4886%" height="15" fill="rgb(219,78,78)" fg:x="0" fg:w="68"/><text x="0.2500%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1.4667%" y="917" width="0.0219%" height="15" fill="rgb(206,59,59)" fg:x="67" fg:w="1"/><text x="1.7167%" y="927.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1.4667%" y="901" width="0.0219%" height="15" fill="rgb(244,114,114)" fg:x="67" fg:w="1"/><text x="1.7167%" y="911.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1.4667%" y="885" width="0.0219%" height="15" fill="rgb(241,110,110)" fg:x="67" fg:w="1"/><text x="1.7167%" y="895.50"></text></g><g><title>do_futex (1 samples, 0.02%)</title><rect x="1.4667%" y="869" width="0.0219%" height="15" fill="rgb(248,120,120)" fg:x="67" fg:w="1"/><text x="1.7167%" y="879.50"></text></g><g><title>futex_wait (1 samples, 0.02%)</title><rect x="1.4667%" y="853" width="0.0219%" height="15" fill="rgb(218,77,77)" fg:x="67" fg:w="1"/><text x="1.7167%" y="863.50"></text></g><g><title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="1.4667%" y="837" width="0.0219%" height="15" fill="rgb(230,94,94)" fg:x="67" fg:w="1"/><text x="1.7167%" y="847.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="1.4667%" y="821" width="0.0219%" height="15" fill="rgb(211,67,67)" fg:x="67" fg:w="1"/><text x="1.7167%" y="831.50"></text></g><g><title>__sched_text_start (1 samples, 0.02%)</title><rect x="1.4667%" y="805" width="0.0219%" height="15" fill="rgb(216,73,73)" fg:x="67" fg:w="1"/><text x="1.7167%" y="815.50"></text></g><g><title>finish_task_switch (1 samples, 0.02%)</title><rect x="1.4667%" y="789" width="0.0219%" height="15" fill="rgb(220,79,79)" fg:x="67" fg:w="1"/><text x="1.7167%" y="799.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.02%)</title><rect x="1.4667%" y="773" width="0.0219%" height="15" fill="rgb(210,65,65)" fg:x="67" fg:w="1"/><text x="1.7167%" y="783.50"></text></g><g><title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="1.4667%" y="757" width="0.0219%" height="15" fill="rgb(237,103,103)" fg:x="67" fg:w="1"/><text x="1.7167%" y="767.50"></text></g><g><title>intel_tfa_pmu_enable_all (1 samples, 0.02%)</title><rect x="1.4667%" y="741" width="0.0219%" height="15" fill="rgb(213,69,69)" fg:x="67" fg:w="1"/><text x="1.7167%" y="751.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (1 samples, 0.02%)</title><rect x="1.4667%" y="725" width="0.0219%" height="15" fill="rgb(200,50,50)" fg:x="67" fg:w="1"/><text x="1.7167%" y="735.50"></text></g><g><title>native_write_msr (1 samples, 0.02%)</title><rect x="1.4667%" y="709" width="0.0219%" height="15" fill="rgb(207,60,60)" fg:x="67" fg:w="1"/><text x="1.7167%" y="719.50"></text></g><g><title>perf (5 samples, 0.11%)</title><rect x="1.4886%" y="933" width="0.1095%" height="15" fill="rgb(218,77,77)" fg:x="68" fg:w="5"/><text x="1.7386%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.11%)</title><rect x="1.4886%" y="917" width="0.1095%" height="15" fill="rgb(234,100,100)" fg:x="68" fg:w="5"/><text x="1.7386%" y="927.50"></text></g><g><title>do_syscall_64 (5 samples, 0.11%)</title><rect x="1.4886%" y="901" width="0.1095%" height="15" fill="rgb(205,57,57)" fg:x="68" fg:w="5"/><text x="1.7386%" y="911.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.11%)</title><rect x="1.4886%" y="885" width="0.1095%" height="15" fill="rgb(240,108,108)" fg:x="68" fg:w="5"/><text x="1.7386%" y="895.50"></text></g><g><title>__do_execve_file.isra.39 (5 samples, 0.11%)</title><rect x="1.4886%" y="869" width="0.1095%" height="15" fill="rgb(237,103,103)" fg:x="68" fg:w="5"/><text x="1.7386%" y="879.50"></text></g><g><title>search_binary_handler (5 samples, 0.11%)</title><rect x="1.4886%" y="853" width="0.1095%" height="15" fill="rgb(251,125,125)" fg:x="68" fg:w="5"/><text x="1.7386%" y="863.50"></text></g><g><title>load_elf_binary (5 samples, 0.11%)</title><rect x="1.4886%" y="837" width="0.1095%" height="15" fill="rgb(201,51,51)" fg:x="68" fg:w="5"/><text x="1.7386%" y="847.50"></text></g><g><title>setup_new_exec (5 samples, 0.11%)</title><rect x="1.4886%" y="821" width="0.1095%" height="15" fill="rgb(224,85,85)" fg:x="68" fg:w="5"/><text x="1.7386%" y="831.50"></text></g><g><title>perf_event_exec (5 samples, 0.11%)</title><rect x="1.4886%" y="805" width="0.1095%" height="15" fill="rgb(223,84,84)" fg:x="68" fg:w="5"/><text x="1.7386%" y="815.50"></text></g><g><title>ctx_resched (5 samples, 0.11%)</title><rect x="1.4886%" y="789" width="0.1095%" height="15" fill="rgb(236,102,102)" fg:x="68" fg:w="5"/><text x="1.7386%" y="799.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.11%)</title><rect x="1.4886%" y="773" width="0.1095%" height="15" fill="rgb(248,119,119)" fg:x="68" fg:w="5"/><text x="1.7386%" y="783.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.11%)</title><rect x="1.4886%" y="757" width="0.1095%" height="15" fill="rgb(205,57,57)" fg:x="68" fg:w="5"/><text x="1.7386%" y="767.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (5 samples, 0.11%)</title><rect x="1.4886%" y="741" width="0.1095%" height="15" fill="rgb(212,68,68)" fg:x="68" fg:w="5"/><text x="1.7386%" y="751.50"></text></g><g><title>native_write_msr (5 samples, 0.11%)</title><rect x="1.4886%" y="725" width="0.1095%" height="15" fill="rgb(206,58,58)" fg:x="68" fg:w="5"/><text x="1.7386%" y="735.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="1.5981%" y="901" width="0.0219%" height="15" fill="rgb(184,184,53)" fg:x="73" fg:w="1"/><text x="1.8481%" y="911.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="1.6200%" y="901" width="0.0438%" height="15" fill="rgb(252,126,126)" fg:x="74" fg:w="2"/><text x="1.8700%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (3 samples, 0.07%)</title><rect x="1.6637%" y="901" width="0.0657%" height="15" fill="rgb(181,181,52)" fg:x="76" fg:w="3"/><text x="1.9137%" y="911.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (1 samples, 0.02%)</title><rect x="1.7294%" y="901" width="0.0219%" height="15" fill="rgb(213,69,69)" fg:x="79" fg:w="1"/><text x="1.9794%" y="911.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__reset (2 samples, 0.04%)</title><rect x="1.7513%" y="901" width="0.0438%" height="15" fill="rgb(231,95,95)" fg:x="80" fg:w="2"/><text x="2.0013%" y="911.50"></text></g><g><title>v8::ArrayBuffer::GetBackingStore (1 samples, 0.02%)</title><rect x="1.7951%" y="901" width="0.0219%" height="15" fill="rgb(225,225,68)" fg:x="82" fg:w="1"/><text x="2.0451%" y="911.50"></text></g><g><title>v8::ArrayBufferView::Buffer (1 samples, 0.02%)</title><rect x="1.8170%" y="901" width="0.0219%" height="15" fill="rgb(182,182,52)" fg:x="83" fg:w="1"/><text x="2.0670%" y="911.50"></text></g><g><title>v8::ArrayBufferView::ByteLength (5 samples, 0.11%)</title><rect x="1.8389%" y="901" width="0.1095%" height="15" fill="rgb(210,210,63)" fg:x="84" fg:w="5"/><text x="2.0889%" y="911.50"></text></g><g><title>v8::BackingStore::Data (10 samples, 0.22%)</title><rect x="1.9483%" y="901" width="0.2189%" height="15" fill="rgb(212,212,63)" fg:x="89" fg:w="10"/><text x="2.1983%" y="911.50"></text></g><g><title>v8::External::Value (2 samples, 0.04%)</title><rect x="2.1673%" y="901" width="0.0438%" height="15" fill="rgb(221,221,66)" fg:x="99" fg:w="2"/><text x="2.4173%" y="911.50"></text></g><g><title>v8::Value::IsArrayBufferView (5 samples, 0.11%)</title><rect x="2.2110%" y="901" width="0.1095%" height="15" fill="rgb(207,207,61)" fg:x="101" fg:w="5"/><text x="2.4610%" y="911.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (12 samples, 0.26%)</title><rect x="2.3205%" y="901" width="0.2627%" height="15" fill="rgb(186,186,54)" fg:x="106" fg:w="12"/><text x="2.5705%" y="911.50"></text></g><g><title>v8::scope::data::ScopeData::exit_scope (8 samples, 0.18%)</title><rect x="2.4081%" y="885" width="0.1751%" height="15" fill="rgb(185,185,53)" fg:x="110" fg:w="8"/><text x="2.6581%" y="895.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (4 samples, 0.09%)</title><rect x="2.4956%" y="869" width="0.0876%" height="15" fill="rgb(178,178,51)" fg:x="114" fg:w="4"/><text x="2.7456%" y="879.50"></text></g><g><title>v8__ArrayBufferView__Buffer (1 samples, 0.02%)</title><rect x="2.5832%" y="901" width="0.0219%" height="15" fill="rgb(243,113,113)" fg:x="118" fg:w="1"/><text x="2.8332%" y="911.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (4 samples, 0.09%)</title><rect x="2.6051%" y="901" width="0.0876%" height="15" fill="rgb(241,110,110)" fg:x="119" fg:w="4"/><text x="2.8551%" y="911.50"></text></g><g><title>v8__Isolate__SetData (5 samples, 0.11%)</title><rect x="2.6926%" y="901" width="0.1095%" height="15" fill="rgb(200,50,50)" fg:x="123" fg:w="5"/><text x="2.9426%" y="911.50"></text></g><g><title>[[heap]] (56 samples, 1.23%)</title><rect x="1.5981%" y="917" width="1.2259%" height="15" fill="rgb(229,93,93)" fg:x="73" fg:w="56"/><text x="1.8481%" y="927.50"></text></g><g><title>v8__String__WriteUtf8 (1 samples, 0.02%)</title><rect x="2.8021%" y="901" width="0.0219%" height="15" fill="rgb(205,57,57)" fg:x="128" fg:w="1"/><text x="3.0521%" y="911.50"></text></g><g><title>v8::array_buffer::BackingStore::byte_length (4 samples, 0.09%)</title><rect x="3.0210%" y="821" width="0.0876%" height="15" fill="rgb(223,223,67)" fg:x="138" fg:w="4"/><text x="3.2710%" y="831.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (12 samples, 0.26%)</title><rect x="3.0210%" y="837" width="0.2627%" height="15" fill="rgb(189,189,55)" fg:x="138" fg:w="12"/><text x="3.2710%" y="847.50"></text></g><g><title>v8::array_buffer::BackingStore::data (8 samples, 0.18%)</title><rect x="3.1086%" y="821" width="0.1751%" height="15" fill="rgb(224,224,68)" fg:x="142" fg:w="8"/><text x="3.3586%" y="831.50"></text></g><g><title>&lt;v8::support::SharedRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.07%)</title><rect x="3.2837%" y="837" width="0.0657%" height="15" fill="rgb(188,188,54)" fg:x="150" fg:w="3"/><text x="3.5337%" y="847.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::get (3 samples, 0.07%)</title><rect x="3.2837%" y="821" width="0.0657%" height="15" fill="rgb(193,193,56)" fg:x="150" fg:w="3"/><text x="3.5337%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedRef&lt;v8::array_buffer::BackingStore&gt;&gt; (3 samples, 0.07%)</title><rect x="3.3494%" y="837" width="0.0657%" height="15" fill="rgb(204,204,60)" fg:x="153" fg:w="3"/><text x="3.5994%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedPtrBase&lt;v8::array_buffer::BackingStore&gt;&gt; (3 samples, 0.07%)</title><rect x="3.3494%" y="821" width="0.0657%" height="15" fill="rgb(221,221,66)" fg:x="153" fg:w="3"/><text x="3.5994%" y="831.50"></text></g><g><title>&lt;v8::support::SharedPtrBase&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="3.3494%" y="805" width="0.0657%" height="15" fill="rgb(216,216,65)" fg:x="153" fg:w="3"/><text x="3.5994%" y="815.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::reset (3 samples, 0.07%)</title><rect x="3.3494%" y="789" width="0.0657%" height="15" fill="rgb(223,223,67)" fg:x="153" fg:w="3"/><text x="3.5994%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.11%)</title><rect x="3.5026%" y="821" width="0.1095%" height="15" fill="rgb(188,188,55)" fg:x="160" fg:w="5"/><text x="3.7526%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.11%)</title><rect x="3.5026%" y="805" width="0.1095%" height="15" fill="rgb(217,217,65)" fg:x="160" fg:w="5"/><text x="3.7526%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.11%)</title><rect x="3.5026%" y="789" width="0.1095%" height="15" fill="rgb(225,225,68)" fg:x="160" fg:w="5"/><text x="3.7526%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="3.5026%" y="773" width="0.1095%" height="15" fill="rgb(205,205,61)" fg:x="160" fg:w="5"/><text x="3.7526%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.11%)</title><rect x="3.5026%" y="757" width="0.1095%" height="15" fill="rgb(214,214,64)" fg:x="160" fg:w="5"/><text x="3.7526%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.11%)</title><rect x="3.5026%" y="741" width="0.1095%" height="15" fill="rgb(215,215,64)" fg:x="160" fg:w="5"/><text x="3.7526%" y="751.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.11%)</title><rect x="3.5026%" y="725" width="0.1095%" height="15" fill="rgb(234,99,99)" fg:x="160" fg:w="5"/><text x="3.7526%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.11%)</title><rect x="3.5026%" y="709" width="0.1095%" height="15" fill="rgb(210,210,63)" fg:x="160" fg:w="5"/><text x="3.7526%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.07%)</title><rect x="3.6121%" y="821" width="0.0657%" height="15" fill="rgb(183,183,53)" fg:x="165" fg:w="3"/><text x="3.8621%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="3.6121%" y="805" width="0.0657%" height="15" fill="rgb(196,196,57)" fg:x="165" fg:w="3"/><text x="3.8621%" y="815.50"></text></g><g><title>runjs::op_encoding_encode_into::call (16 samples, 0.35%)</title><rect x="3.4151%" y="837" width="0.3503%" height="15" fill="rgb(226,226,68)" fg:x="156" fg:w="16"/><text x="3.6651%" y="847.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::String&gt;&gt;::try_from (4 samples, 0.09%)</title><rect x="3.6778%" y="821" width="0.0876%" height="15" fill="rgb(208,208,62)" fg:x="168" fg:w="4"/><text x="3.9278%" y="831.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_string (4 samples, 0.09%)</title><rect x="3.6778%" y="805" width="0.0876%" height="15" fill="rgb(215,215,64)" fg:x="168" fg:w="4"/><text x="3.9278%" y="815.50"></text></g><g><title>v8::array_buffer::&lt;impl v8::data::ArrayBuffer&gt;::get_backing_store (6 samples, 0.13%)</title><rect x="3.7653%" y="837" width="0.1313%" height="15" fill="rgb(226,226,68)" fg:x="172" fg:w="6"/><text x="4.0153%" y="847.50"></text></g><g><title>v8::array_buffer::BackingStore::is_shared (6 samples, 0.13%)</title><rect x="3.8967%" y="837" width="0.1313%" height="15" fill="rgb(196,196,57)" fg:x="178" fg:w="6"/><text x="4.1467%" y="847.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::buffer (3 samples, 0.07%)</title><rect x="4.0280%" y="837" width="0.0657%" height="15" fill="rgb(221,221,66)" fg:x="184" fg:w="3"/><text x="4.2780%" y="847.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (3 samples, 0.07%)</title><rect x="4.0280%" y="821" width="0.0657%" height="15" fill="rgb(196,196,57)" fg:x="184" fg:w="3"/><text x="4.2780%" y="831.50"></text></g><g><title>v8::array_buffer_view::_&lt;impl v8::data::ArrayBufferView&gt;::buffer::_{{closure}} (3 samples, 0.07%)</title><rect x="4.0280%" y="805" width="0.0657%" height="15" fill="rgb(200,200,59)" fg:x="184" fg:w="3"/><text x="4.2780%" y="815.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_length (4 samples, 0.09%)</title><rect x="4.0937%" y="837" width="0.0876%" height="15" fill="rgb(192,192,56)" fg:x="187" fg:w="4"/><text x="4.3437%" y="847.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_offset (2 samples, 0.04%)</title><rect x="4.1813%" y="837" width="0.0438%" height="15" fill="rgb(208,208,62)" fg:x="191" fg:w="2"/><text x="4.4313%" y="847.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::ArrayBufferView&gt;&gt;::try_from (4 samples, 0.09%)</title><rect x="4.2250%" y="837" width="0.0876%" height="15" fill="rgb(218,218,65)" fg:x="193" fg:w="4"/><text x="4.4750%" y="847.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_array_buffer_view (4 samples, 0.09%)</title><rect x="4.2250%" y="821" width="0.0876%" height="15" fill="rgb(178,178,51)" fg:x="193" fg:w="4"/><text x="4.4750%" y="831.50"></text></g><g><title>v8::external::&lt;impl v8::data::External&gt;::value (3 samples, 0.07%)</title><rect x="4.3126%" y="837" width="0.0657%" height="15" fill="rgb(177,177,50)" fg:x="197" fg:w="3"/><text x="4.5626%" y="847.50"></text></g><g><title>v8::function::FunctionCallbackArguments::data (1 samples, 0.02%)</title><rect x="4.3783%" y="837" width="0.0219%" height="15" fill="rgb(182,182,52)" fg:x="200" fg:w="1"/><text x="4.6283%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (75 samples, 1.64%)</title><rect x="3.0210%" y="869" width="1.6419%" height="15" fill="rgb(188,188,54)" fg:x="138" fg:w="75"/><text x="3.2710%" y="879.50"></text></g><g><title>runjs::op_encoding_encode_into::v8_func (75 samples, 1.64%)</title><rect x="3.0210%" y="853" width="1.6419%" height="15" fill="rgb(198,198,58)" fg:x="138" fg:w="75"/><text x="3.2710%" y="863.50"></text></g><g><title>v8::function::FunctionCallbackArguments::get (12 samples, 0.26%)</title><rect x="4.4002%" y="837" width="0.2627%" height="15" fill="rgb(200,200,59)" fg:x="201" fg:w="12"/><text x="4.6502%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::CallbackScope&gt; (2 samples, 0.04%)</title><rect x="4.6629%" y="869" width="0.0438%" height="15" fill="rgb(186,186,54)" fg:x="213" fg:w="2"/><text x="4.9129%" y="879.50"></text></g><g><title>&lt;v8::scope::CallbackScope&lt;C&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="4.6629%" y="853" width="0.0438%" height="15" fill="rgb(206,206,61)" fg:x="213" fg:w="2"/><text x="4.9129%" y="863.50"></text></g><g><title>v8::function::ReturnValue::from_function_callback_info (7 samples, 0.15%)</title><rect x="4.7067%" y="869" width="0.1532%" height="15" fill="rgb(181,181,52)" fg:x="215" fg:w="7"/><text x="4.9567%" y="879.50"></text></g><g><title>v8::scope::data::ScopeData::get_current_mut (2 samples, 0.04%)</title><rect x="4.8599%" y="853" width="0.0438%" height="15" fill="rgb(193,193,56)" fg:x="222" fg:w="2"/><text x="5.1099%" y="863.50"></text></g><g><title>v8::isolate::Isolate::get_current_scope_data (2 samples, 0.04%)</title><rect x="4.8599%" y="837" width="0.0438%" height="15" fill="rgb(198,198,58)" fg:x="222" fg:w="2"/><text x="5.1099%" y="847.50"></text></g><g><title>v8::scope::data::ScopeData::new_callback_scope_data (1 samples, 0.02%)</title><rect x="4.9037%" y="853" width="0.0219%" height="15" fill="rgb(191,191,55)" fg:x="224" fg:w="1"/><text x="5.1537%" y="863.50"></text></g><g><title>v8::scope::data::ScopeData::new_scope_data_with (1 samples, 0.02%)</title><rect x="4.9037%" y="837" width="0.0219%" height="15" fill="rgb(206,206,61)" fg:x="224" fg:w="1"/><text x="5.1537%" y="847.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (1 samples, 0.02%)</title><rect x="4.9037%" y="821" width="0.0219%" height="15" fill="rgb(186,186,54)" fg:x="224" fg:w="1"/><text x="5.1537%" y="831.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (97 samples, 2.12%)</title><rect x="2.8240%" y="901" width="2.1235%" height="15" fill="rgb(219,219,66)" fg:x="129" fg:w="97"/><text x="3.0740%" y="911.50">&lt;..</text></g><g><title>v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}} (88 samples, 1.93%)</title><rect x="3.0210%" y="885" width="1.9264%" height="15" fill="rgb(207,207,61)" fg:x="138" fg:w="88"/><text x="3.2710%" y="895.50">v..</text></g><g><title>v8::scope::CallbackScope::new (4 samples, 0.09%)</title><rect x="4.8599%" y="869" width="0.0876%" height="15" fill="rgb(208,208,62)" fg:x="222" fg:w="4"/><text x="5.1099%" y="879.50"></text></g><g><title>v8::scope::param::NewCallbackScope::get_isolate_mut_and_maybe_current_context (1 samples, 0.02%)</title><rect x="4.9256%" y="853" width="0.0219%" height="15" fill="rgb(187,187,54)" fg:x="225" fg:w="1"/><text x="5.1756%" y="863.50"></text></g><g><title>&lt;&amp;v8::function::FunctionCallbackInfo as v8::scope::getter::GetIsolate&gt;::get_isolate_mut (1 samples, 0.02%)</title><rect x="4.9256%" y="837" width="0.0219%" height="15" fill="rgb(228,228,69)" fg:x="225" fg:w="1"/><text x="5.1756%" y="847.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="4.9475%" y="901" width="0.0438%" height="15" fill="rgb(253,127,127)" fg:x="226" fg:w="2"/><text x="5.1975%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="4.9912%" y="901" width="0.0219%" height="15" fill="rgb(238,106,106)" fg:x="228" fg:w="1"/><text x="5.2412%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.04%)</title><rect x="5.0788%" y="869" width="0.0438%" height="15" fill="rgb(197,197,58)" fg:x="232" fg:w="2"/><text x="5.3288%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="5.0788%" y="853" width="0.0438%" height="15" fill="rgb(191,191,55)" fg:x="232" fg:w="2"/><text x="5.3288%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="5.0788%" y="837" width="0.0438%" height="15" fill="rgb(195,195,57)" fg:x="232" fg:w="2"/><text x="5.3288%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.04%)</title><rect x="5.0788%" y="821" width="0.0438%" height="15" fill="rgb(211,211,63)" fg:x="232" fg:w="2"/><text x="5.3288%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="5.0788%" y="805" width="0.0438%" height="15" fill="rgb(226,226,68)" fg:x="232" fg:w="2"/><text x="5.3288%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="5.0788%" y="789" width="0.0438%" height="15" fill="rgb(227,227,69)" fg:x="232" fg:w="2"/><text x="5.3288%" y="799.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="5.0788%" y="773" width="0.0438%" height="15" fill="rgb(206,206,61)" fg:x="232" fg:w="2"/><text x="5.3288%" y="783.50"></text></g><g><title>__rdl_alloc (2 samples, 0.04%)</title><rect x="5.0788%" y="757" width="0.0438%" height="15" fill="rgb(246,117,117)" fg:x="232" fg:w="2"/><text x="5.3288%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.04%)</title><rect x="5.0788%" y="741" width="0.0438%" height="15" fill="rgb(205,205,61)" fg:x="232" fg:w="2"/><text x="5.3288%" y="751.50"></text></g><g><title>serde_v8::de::to_utf8 (10 samples, 0.22%)</title><rect x="5.0131%" y="901" width="0.2189%" height="15" fill="rgb(202,202,59)" fg:x="229" fg:w="10"/><text x="5.2631%" y="911.50"></text></g><g><title>serde_v8::de::to_utf8_fast (7 samples, 0.15%)</title><rect x="5.0788%" y="885" width="0.1532%" height="15" fill="rgb(228,228,69)" fg:x="232" fg:w="7"/><text x="5.3288%" y="895.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::write_utf8 (5 samples, 0.11%)</title><rect x="5.1226%" y="869" width="0.1095%" height="15" fill="rgb(228,228,69)" fg:x="234" fg:w="5"/><text x="5.3726%" y="879.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (2 samples, 0.04%)</title><rect x="5.2320%" y="901" width="0.0438%" height="15" fill="rgb(226,87,87)" fg:x="239" fg:w="2"/><text x="5.4820%" y="911.50"></text></g><g><title>v8::String::WriteUtf8 (2 samples, 0.04%)</title><rect x="5.2758%" y="901" width="0.0438%" height="15" fill="rgb(224,224,68)" fg:x="241" fg:w="2"/><text x="5.5258%" y="911.50"></text></g><g><title>v8::internal::JSTypedArray::GetBuffer (2 samples, 0.04%)</title><rect x="5.3196%" y="901" width="0.0438%" height="15" fill="rgb(185,185,53)" fg:x="243" fg:w="2"/><text x="5.5696%" y="911.50"></text></g><g><title>v8::platform::DefaultJobHandle::IsValid (1 samples, 0.02%)</title><rect x="5.3634%" y="901" width="0.0219%" height="15" fill="rgb(204,204,60)" fg:x="245" fg:w="1"/><text x="5.6134%" y="911.50"></text></g><g><title>v8__ArrayBufferView__Buffer (1 samples, 0.02%)</title><rect x="5.3853%" y="901" width="0.0219%" height="15" fill="rgb(246,117,117)" fg:x="246" fg:w="1"/><text x="5.6353%" y="911.50"></text></g><g><title>v8__ArrayBufferView__ByteOffset (6 samples, 0.13%)</title><rect x="5.4072%" y="901" width="0.1313%" height="15" fill="rgb(219,78,78)" fg:x="247" fg:w="6"/><text x="5.6572%" y="911.50"></text></g><g><title>v8__FunctionCallbackInfo__GetIsolate (1 samples, 0.02%)</title><rect x="5.5385%" y="901" width="0.0219%" height="15" fill="rgb(215,72,72)" fg:x="253" fg:w="1"/><text x="5.7885%" y="911.50"></text></g><g><title>v8__Isolate__GetData (2 samples, 0.04%)</title><rect x="5.5604%" y="901" width="0.0438%" height="15" fill="rgb(211,67,67)" fg:x="254" fg:w="2"/><text x="5.8104%" y="911.50"></text></g><g><title>[[stack]] (130 samples, 2.85%)</title><rect x="2.8240%" y="917" width="2.8459%" height="15" fill="rgb(207,61,61)" fg:x="129" fg:w="130"/><text x="3.0740%" y="927.50">[[..</text></g><g><title>v8__String__Length (3 samples, 0.07%)</title><rect x="5.6042%" y="901" width="0.0657%" height="15" fill="rgb(233,99,99)" fg:x="256" fg:w="3"/><text x="5.8542%" y="911.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="5.6699%" y="901" width="0.0219%" height="15" fill="rgb(213,213,63)" fg:x="259" fg:w="1"/><text x="5.9199%" y="911.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (5 samples, 0.11%)</title><rect x="5.6918%" y="901" width="0.1095%" height="15" fill="rgb(253,127,127)" fg:x="260" fg:w="5"/><text x="5.9418%" y="911.50"></text></g><g><title>v8::BackingStore::IsShared (1 samples, 0.02%)</title><rect x="5.8012%" y="901" width="0.0219%" height="15" fill="rgb(227,227,68)" fg:x="265" fg:w="1"/><text x="6.0512%" y="911.50"></text></g><g><title>v8::internal::JSTypedArray::GetBuffer (4 samples, 0.09%)</title><rect x="5.8231%" y="901" width="0.0876%" height="15" fill="rgb(217,217,65)" fg:x="266" fg:w="4"/><text x="6.0731%" y="911.50"></text></g><g><title>[anon] (13 samples, 0.28%)</title><rect x="5.6699%" y="917" width="0.2846%" height="15" fill="rgb(232,97,97)" fg:x="259" fg:w="13"/><text x="5.9199%" y="927.50"></text></g><g><title>v8__ArrayBuffer__GetBackingStore (2 samples, 0.04%)</title><rect x="5.9107%" y="901" width="0.0438%" height="15" fill="rgb(247,119,119)" fg:x="270" fg:w="2"/><text x="6.1607%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (7 samples, 0.15%)</title><rect x="9.2163%" y="805" width="0.1532%" height="15" fill="rgb(228,228,69)" fg:x="421" fg:w="7"/><text x="9.4663%" y="815.50"></text></g><g><title>v8::array_buffer::BackingStore::byte_length (9 samples, 0.20%)</title><rect x="9.3695%" y="805" width="0.1970%" height="15" fill="rgb(219,219,66)" fg:x="428" fg:w="9"/><text x="9.6195%" y="815.50"></text></g><g><title>v8::BackingStore::ByteLength (9 samples, 0.20%)</title><rect x="9.3695%" y="789" width="0.1970%" height="15" fill="rgb(223,223,67)" fg:x="428" fg:w="9"/><text x="9.6195%" y="799.50"></text></g><g><title>v8::BackingStore::Data (4 samples, 0.09%)</title><rect x="9.5665%" y="789" width="0.0876%" height="15" fill="rgb(229,229,69)" fg:x="437" fg:w="4"/><text x="9.8165%" y="799.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (29 samples, 0.63%)</title><rect x="9.1287%" y="821" width="0.6349%" height="15" fill="rgb(216,216,65)" fg:x="417" fg:w="29"/><text x="9.3787%" y="831.50"></text></g><g><title>v8::array_buffer::BackingStore::data (9 samples, 0.20%)</title><rect x="9.5665%" y="805" width="0.1970%" height="15" fill="rgb(183,183,52)" fg:x="437" fg:w="9"/><text x="9.8165%" y="815.50"></text></g><g><title>v8__BackingStore__Data (5 samples, 0.11%)</title><rect x="9.6541%" y="789" width="0.1095%" height="15" fill="rgb(213,70,70)" fg:x="441" fg:w="5"/><text x="9.9041%" y="799.50"></text></g><g><title>&lt;v8::support::SharedRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.26%)</title><rect x="9.7636%" y="821" width="0.2627%" height="15" fill="rgb(191,191,55)" fg:x="446" fg:w="12"/><text x="10.0136%" y="831.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::get (12 samples, 0.26%)</title><rect x="9.7636%" y="805" width="0.2627%" height="15" fill="rgb(229,229,69)" fg:x="446" fg:w="12"/><text x="10.0136%" y="815.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (12 samples, 0.26%)</title><rect x="9.7636%" y="789" width="0.2627%" height="15" fill="rgb(207,60,60)" fg:x="446" fg:w="12"/><text x="10.0136%" y="799.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.09%)</title><rect x="10.2890%" y="773" width="0.0876%" height="15" fill="rgb(213,213,63)" fg:x="470" fg:w="4"/><text x="10.5390%" y="783.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.09%)</title><rect x="10.2890%" y="757" width="0.0876%" height="15" fill="rgb(212,212,63)" fg:x="470" fg:w="4"/><text x="10.5390%" y="767.50"></text></g><g><title>core::mem::replace (4 samples, 0.09%)</title><rect x="10.2890%" y="741" width="0.0876%" height="15" fill="rgb(175,175,50)" fg:x="470" fg:w="4"/><text x="10.5390%" y="751.50"></text></g><g><title>core::ptr::write (4 samples, 0.09%)</title><rect x="10.2890%" y="725" width="0.0876%" height="15" fill="rgb(217,217,65)" fg:x="470" fg:w="4"/><text x="10.5390%" y="735.50"></text></g><g><title>core::cell::is_reading (1 samples, 0.02%)</title><rect x="10.3765%" y="773" width="0.0219%" height="15" fill="rgb(180,180,52)" fg:x="474" fg:w="1"/><text x="10.6265%" y="783.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (18 samples, 0.39%)</title><rect x="10.0263%" y="821" width="0.3940%" height="15" fill="rgb(178,178,51)" fg:x="458" fg:w="18"/><text x="10.2763%" y="831.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (18 samples, 0.39%)</title><rect x="10.0263%" y="805" width="0.3940%" height="15" fill="rgb(227,227,69)" fg:x="458" fg:w="18"/><text x="10.2763%" y="815.50"></text></g><g><title>core::cell::BorrowRef::new (18 samples, 0.39%)</title><rect x="10.0263%" y="789" width="0.3940%" height="15" fill="rgb(222,222,67)" fg:x="458" fg:w="18"/><text x="10.2763%" y="799.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="10.3984%" y="773" width="0.0219%" height="15" fill="rgb(198,198,58)" fg:x="475" fg:w="1"/><text x="10.6484%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;deno_core::ops::OpState&gt;&gt; (2 samples, 0.04%)</title><rect x="10.4203%" y="821" width="0.0438%" height="15" fill="rgb(201,201,59)" fg:x="476" fg:w="2"/><text x="10.6703%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (2 samples, 0.04%)</title><rect x="10.4203%" y="805" width="0.0438%" height="15" fill="rgb(194,194,57)" fg:x="476" fg:w="2"/><text x="10.6703%" y="815.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="10.4203%" y="789" width="0.0438%" height="15" fill="rgb(210,210,63)" fg:x="476" fg:w="2"/><text x="10.6703%" y="799.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="10.4203%" y="773" width="0.0438%" height="15" fill="rgb(183,183,53)" fg:x="476" fg:w="2"/><text x="10.6703%" y="783.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="10.4203%" y="757" width="0.0438%" height="15" fill="rgb(194,194,56)" fg:x="476" fg:w="2"/><text x="10.6703%" y="767.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="10.4203%" y="741" width="0.0438%" height="15" fill="rgb(228,228,69)" fg:x="476" fg:w="2"/><text x="10.6703%" y="751.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="10.4203%" y="725" width="0.0438%" height="15" fill="rgb(207,207,61)" fg:x="476" fg:w="2"/><text x="10.6703%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedRef&lt;v8::array_buffer::BackingStore&gt;&gt; (136 samples, 2.98%)</title><rect x="10.4641%" y="821" width="2.9772%" height="15" fill="rgb(182,182,52)" fg:x="478" fg:w="136"/><text x="10.7141%" y="831.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedPtrBase&lt;v8::array_buffer::BackingStore&gt;&gt; (136 samples, 2.98%)</title><rect x="10.4641%" y="805" width="2.9772%" height="15" fill="rgb(207,207,61)" fg:x="478" fg:w="136"/><text x="10.7141%" y="815.50">cor..</text></g><g><title>&lt;v8::support::SharedPtrBase&lt;T&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 2.98%)</title><rect x="10.4641%" y="789" width="2.9772%" height="15" fill="rgb(195,195,57)" fg:x="478" fg:w="136"/><text x="10.7141%" y="799.50">&lt;v8..</text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::reset (136 samples, 2.98%)</title><rect x="10.4641%" y="773" width="2.9772%" height="15" fill="rgb(217,217,65)" fg:x="478" fg:w="136"/><text x="10.7141%" y="783.50">&lt;v8..</text></g><g><title>std__shared_ptr__v8__BackingStore__reset (136 samples, 2.98%)</title><rect x="10.4641%" y="757" width="2.9772%" height="15" fill="rgb(215,72,72)" fg:x="478" fg:w="136"/><text x="10.7141%" y="767.50">std..</text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="13.4194%" y="741" width="0.0219%" height="15" fill="rgb(208,62,62)" fg:x="613" fg:w="1"/><text x="13.6694%" y="751.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="13.4194%" y="725" width="0.0219%" height="15" fill="rgb(215,72,72)" fg:x="613" fg:w="1"/><text x="13.6694%" y="735.50"></text></g><g><title>irq_exit (1 samples, 0.02%)</title><rect x="13.4194%" y="709" width="0.0219%" height="15" fill="rgb(217,76,76)" fg:x="613" fg:w="1"/><text x="13.6694%" y="719.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="13.4194%" y="693" width="0.0219%" height="15" fill="rgb(221,80,80)" fg:x="613" fg:w="1"/><text x="13.6694%" y="703.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="13.4194%" y="677" width="0.0219%" height="15" fill="rgb(248,121,121)" fg:x="613" fg:w="1"/><text x="13.6694%" y="687.50"></text></g><g><title>update_blocked_averages (1 samples, 0.02%)</title><rect x="13.4194%" y="661" width="0.0219%" height="15" fill="rgb(218,77,77)" fg:x="613" fg:w="1"/><text x="13.6694%" y="671.50"></text></g><g><title>update_rt_rq_load_avg (1 samples, 0.02%)</title><rect x="13.4194%" y="645" width="0.0219%" height="15" fill="rgb(218,76,76)" fg:x="613" fg:w="1"/><text x="13.6694%" y="655.50"></text></g><g><title>__accumulate_pelt_segments (1 samples, 0.02%)</title><rect x="13.4194%" y="629" width="0.0219%" height="15" fill="rgb(233,98,98)" fg:x="613" fg:w="1"/><text x="13.6694%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.24%)</title><rect x="13.4413%" y="821" width="0.2408%" height="15" fill="rgb(207,207,61)" fg:x="614" fg:w="11"/><text x="13.6913%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.24%)</title><rect x="13.4413%" y="805" width="0.2408%" height="15" fill="rgb(181,181,52)" fg:x="614" fg:w="11"/><text x="13.6913%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.20%)</title><rect x="13.4851%" y="789" width="0.1970%" height="15" fill="rgb(214,214,64)" fg:x="616" fg:w="9"/><text x="13.7351%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.20%)</title><rect x="13.4851%" y="773" width="0.1970%" height="15" fill="rgb(215,215,64)" fg:x="616" fg:w="9"/><text x="13.7351%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (9 samples, 0.20%)</title><rect x="13.4851%" y="757" width="0.1970%" height="15" fill="rgb(195,195,57)" fg:x="616" fg:w="9"/><text x="13.7351%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;deno_core::ops_metrics::OpMetrics&gt;&gt; (1 samples, 0.02%)</title><rect x="14.9956%" y="805" width="0.0219%" height="15" fill="rgb(186,186,54)" fg:x="685" fg:w="1"/><text x="15.2456%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.02%)</title><rect x="14.9956%" y="789" width="0.0219%" height="15" fill="rgb(179,179,51)" fg:x="685" fg:w="1"/><text x="15.2456%" y="799.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="14.9956%" y="773" width="0.0219%" height="15" fill="rgb(194,194,57)" fg:x="685" fg:w="1"/><text x="15.2456%" y="783.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="14.9956%" y="757" width="0.0219%" height="15" fill="rgb(222,222,67)" fg:x="685" fg:w="1"/><text x="15.2456%" y="767.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="14.9956%" y="741" width="0.0219%" height="15" fill="rgb(220,220,66)" fg:x="685" fg:w="1"/><text x="15.2456%" y="751.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="14.9956%" y="725" width="0.0219%" height="15" fill="rgb(225,225,68)" fg:x="685" fg:w="1"/><text x="15.2456%" y="735.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="14.9956%" y="709" width="0.0219%" height="15" fill="rgb(213,213,64)" fg:x="685" fg:w="1"/><text x="15.2456%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (9 samples, 0.20%)</title><rect x="15.0175%" y="789" width="0.1970%" height="15" fill="rgb(229,229,69)" fg:x="686" fg:w="9"/><text x="15.2675%" y="799.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (9 samples, 0.20%)</title><rect x="15.0175%" y="773" width="0.1970%" height="15" fill="rgb(195,195,57)" fg:x="686" fg:w="9"/><text x="15.2675%" y="783.50"></text></g><g><title>core::cell::BorrowRefMut::new (9 samples, 0.20%)</title><rect x="15.0175%" y="757" width="0.1970%" height="15" fill="rgb(185,185,53)" fg:x="686" fg:w="9"/><text x="15.2675%" y="767.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.15%)</title><rect x="15.0613%" y="741" width="0.1532%" height="15" fill="rgb(217,217,65)" fg:x="688" fg:w="7"/><text x="15.3113%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.15%)</title><rect x="15.0613%" y="725" width="0.1532%" height="15" fill="rgb(217,217,65)" fg:x="688" fg:w="7"/><text x="15.3113%" y="735.50"></text></g><g><title>core::mem::replace (7 samples, 0.15%)</title><rect x="15.0613%" y="709" width="0.1532%" height="15" fill="rgb(227,227,69)" fg:x="688" fg:w="7"/><text x="15.3113%" y="719.50"></text></g><g><title>core::ptr::write (7 samples, 0.15%)</title><rect x="15.0613%" y="693" width="0.1532%" height="15" fill="rgb(215,215,64)" fg:x="688" fg:w="7"/><text x="15.3113%" y="703.50"></text></g><g><title>deno_core::ops_metrics::OpsTracker::track_sync (73 samples, 1.60%)</title><rect x="13.6821%" y="821" width="1.5981%" height="15" fill="rgb(179,179,51)" fg:x="625" fg:w="73"/><text x="13.9321%" y="831.50"></text></g><g><title>deno_core::ops_metrics::OpsTracker::metrics_mut (12 samples, 0.26%)</title><rect x="15.0175%" y="805" width="0.2627%" height="15" fill="rgb(176,176,50)" fg:x="686" fg:w="12"/><text x="15.2675%" y="815.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (3 samples, 0.07%)</title><rect x="15.2145%" y="789" width="0.0657%" height="15" fill="rgb(209,209,62)" fg:x="695" fg:w="3"/><text x="15.4645%" y="799.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (3 samples, 0.07%)</title><rect x="15.2145%" y="773" width="0.0657%" height="15" fill="rgb(206,206,61)" fg:x="695" fg:w="3"/><text x="15.4645%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (3 samples, 0.07%)</title><rect x="16.2653%" y="789" width="0.0657%" height="15" fill="rgb(176,176,50)" fg:x="743" fg:w="3"/><text x="16.5153%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::index (6 samples, 0.13%)</title><rect x="16.2653%" y="805" width="0.1313%" height="15" fill="rgb(198,198,58)" fg:x="743" fg:w="6"/><text x="16.5153%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.07%)</title><rect x="16.3310%" y="789" width="0.0657%" height="15" fill="rgb(175,175,50)" fg:x="746" fg:w="3"/><text x="16.5810%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (3 samples, 0.07%)</title><rect x="16.3310%" y="773" width="0.0657%" height="15" fill="rgb(225,225,68)" fg:x="746" fg:w="3"/><text x="16.5810%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (3 samples, 0.07%)</title><rect x="16.3310%" y="757" width="0.0657%" height="15" fill="rgb(207,207,61)" fg:x="746" fg:w="3"/><text x="16.5810%" y="767.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (3 samples, 0.07%)</title><rect x="16.3310%" y="741" width="0.0657%" height="15" fill="rgb(207,207,61)" fg:x="746" fg:w="3"/><text x="16.5810%" y="751.50"></text></g><g><title>alloc::string::String::len (7 samples, 0.15%)</title><rect x="16.3967%" y="805" width="0.1532%" height="15" fill="rgb(179,179,51)" fg:x="749" fg:w="7"/><text x="16.6467%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.20%)</title><rect x="46.7163%" y="725" width="0.1970%" height="15" fill="rgb(219,219,66)" fg:x="2134" fg:w="9"/><text x="46.9663%" y="735.50"></text></g><g><title>&lt;core::str::iter::EncodeUtf16 as core::iter::traits::iterator::Iterator&gt;::next (759 samples, 16.62%)</title><rect x="30.3196%" y="773" width="16.6156%" height="15" fill="rgb(227,227,69)" fg:x="1385" fg:w="759"/><text x="30.5696%" y="783.50">&lt;core::str::iter::EncodeUt..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (706 samples, 15.46%)</title><rect x="31.4799%" y="757" width="15.4553%" height="15" fill="rgb(218,218,65)" fg:x="1438" fg:w="706"/><text x="31.7299%" y="767.50">&lt;core::str::iter::Chars ..</text></g><g><title>core::str::validations::next_code_point (706 samples, 15.46%)</title><rect x="31.4799%" y="741" width="15.4553%" height="15" fill="rgb(188,188,54)" fg:x="1438" fg:w="706"/><text x="31.7299%" y="751.50">core::str::validations::..</text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="46.9133%" y="725" width="0.0219%" height="15" fill="rgb(223,84,84)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="735.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="46.9133%" y="709" width="0.0219%" height="15" fill="rgb(250,122,122)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="719.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="46.9133%" y="693" width="0.0219%" height="15" fill="rgb(201,52,52)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="703.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="46.9133%" y="677" width="0.0219%" height="15" fill="rgb(248,120,120)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="687.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="46.9133%" y="661" width="0.0219%" height="15" fill="rgb(249,121,121)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="671.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="46.9133%" y="645" width="0.0219%" height="15" fill="rgb(213,69,69)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="655.50"></text></g><g><title>tick_do_update_jiffies64.part.14 (1 samples, 0.02%)</title><rect x="46.9133%" y="629" width="0.0219%" height="15" fill="rgb(244,114,114)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="639.50"></text></g><g><title>update_wall_time (1 samples, 0.02%)</title><rect x="46.9133%" y="613" width="0.0219%" height="15" fill="rgb(226,88,88)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="623.50"></text></g><g><title>timekeeping_advance (1 samples, 0.02%)</title><rect x="46.9133%" y="597" width="0.0219%" height="15" fill="rgb(235,101,101)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="607.50"></text></g><g><title>timekeeping_update (1 samples, 0.02%)</title><rect x="46.9133%" y="581" width="0.0219%" height="15" fill="rgb(249,121,121)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="591.50"></text></g><g><title>notifier_call_chain (1 samples, 0.02%)</title><rect x="46.9133%" y="565" width="0.0219%" height="15" fill="rgb(236,103,103)" fg:x="2143" fg:w="1"/><text x="47.1633%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1,389 samples, 30.41%)</title><rect x="16.5499%" y="805" width="30.4072%" height="15" fill="rgb(211,211,63)" fg:x="756" fg:w="1389"/><text x="16.7999%" y="815.50">core::iter::traits::iterator::Iterator::count</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,389 samples, 30.41%)</title><rect x="16.5499%" y="789" width="30.4072%" height="15" fill="rgb(208,208,62)" fg:x="756" fg:w="1389"/><text x="16.7999%" y="799.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="46.9352%" y="773" width="0.0219%" height="15" fill="rgb(215,72,72)" fg:x="2144" fg:w="1"/><text x="47.1852%" y="783.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="46.9352%" y="757" width="0.0219%" height="15" fill="rgb(211,66,66)" fg:x="2144" fg:w="1"/><text x="47.1852%" y="767.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="46.9352%" y="741" width="0.0219%" height="15" fill="rgb(217,76,76)" fg:x="2144" fg:w="1"/><text x="47.1852%" y="751.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="46.9352%" y="725" width="0.0219%" height="15" fill="rgb(210,64,64)" fg:x="2144" fg:w="1"/><text x="47.1852%" y="735.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="46.9352%" y="709" width="0.0219%" height="15" fill="rgb(235,102,102)" fg:x="2144" fg:w="1"/><text x="47.1852%" y="719.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="46.9352%" y="693" width="0.0219%" height="15" fill="rgb(206,60,60)" fg:x="2144" fg:w="1"/><text x="47.1852%" y="703.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="46.9352%" y="677" width="0.0219%" height="15" fill="rgb(231,95,95)" fg:x="2144" fg:w="1"/><text x="47.1852%" y="687.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="46.9352%" y="661" width="0.0219%" height="15" fill="rgb(216,73,73)" fg:x="2144" fg:w="1"/><text x="47.1852%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (146 samples, 3.20%)</title><rect x="46.9571%" y="805" width="3.1961%" height="15" fill="rgb(191,191,55)" fg:x="2145" fg:w="146"/><text x="47.2071%" y="815.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (146 samples, 3.20%)</title><rect x="46.9571%" y="789" width="3.1961%" height="15" fill="rgb(209,209,62)" fg:x="2145" fg:w="146"/><text x="47.2071%" y="799.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (146 samples, 3.20%)</title><rect x="46.9571%" y="773" width="3.1961%" height="15" fill="rgb(181,181,52)" fg:x="2145" fg:w="146"/><text x="47.2071%" y="783.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 3.20%)</title><rect x="46.9571%" y="757" width="3.1961%" height="15" fill="rgb(203,203,60)" fg:x="2145" fg:w="146"/><text x="47.2071%" y="767.50">&lt;al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (146 samples, 3.20%)</title><rect x="46.9571%" y="741" width="3.1961%" height="15" fill="rgb(198,198,58)" fg:x="2145" fg:w="146"/><text x="47.2071%" y="751.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (146 samples, 3.20%)</title><rect x="46.9571%" y="725" width="3.1961%" height="15" fill="rgb(181,181,52)" fg:x="2145" fg:w="146"/><text x="47.2071%" y="735.50">all..</text></g><g><title>__rdl_dealloc (146 samples, 3.20%)</title><rect x="46.9571%" y="709" width="3.1961%" height="15" fill="rgb(234,99,99)" fg:x="2145" fg:w="146"/><text x="47.2071%" y="719.50">__r..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (146 samples, 3.20%)</title><rect x="46.9571%" y="693" width="3.1961%" height="15" fill="rgb(195,195,57)" fg:x="2145" fg:w="146"/><text x="47.2071%" y="703.50">std..</text></g><g><title>__GI___libc_free (146 samples, 3.20%)</title><rect x="46.9571%" y="677" width="3.1961%" height="15" fill="rgb(220,79,79)" fg:x="2145" fg:w="146"/><text x="47.2071%" y="687.50">__G..</text></g><g><title>_int_free (99 samples, 2.17%)</title><rect x="47.9860%" y="661" width="2.1673%" height="15" fill="rgb(249,121,121)" fg:x="2192" fg:w="99"/><text x="48.2360%" y="671.50">_..</text></g><g><title>tcache_put (20 samples, 0.44%)</title><rect x="49.7154%" y="645" width="0.4378%" height="15" fill="rgb(248,120,120)" fg:x="2271" fg:w="20"/><text x="49.9654%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (51 samples, 1.12%)</title><rect x="50.1532%" y="805" width="1.1165%" height="15" fill="rgb(189,189,55)" fg:x="2291" fg:w="51"/><text x="50.4032%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51 samples, 1.12%)</title><rect x="50.1532%" y="789" width="1.1165%" height="15" fill="rgb(217,217,65)" fg:x="2291" fg:w="51"/><text x="50.4032%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (49 samples, 1.07%)</title><rect x="50.1970%" y="773" width="1.0727%" height="15" fill="rgb(203,55,55)" fg:x="2293" fg:w="49"/><text x="50.4470%" y="783.50"></text></g><g><title>core::str::&lt;impl str&gt;::encode_utf16 (5 samples, 0.11%)</title><rect x="51.2697%" y="805" width="0.1095%" height="15" fill="rgb(181,181,52)" fg:x="2342" fg:w="5"/><text x="51.5197%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (5 samples, 0.11%)</title><rect x="51.2697%" y="789" width="0.1095%" height="15" fill="rgb(183,183,53)" fg:x="2342" fg:w="5"/><text x="51.5197%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.11%)</title><rect x="51.2697%" y="773" width="0.1095%" height="15" fill="rgb(191,191,55)" fg:x="2342" fg:w="5"/><text x="51.5197%" y="783.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.11%)</title><rect x="51.2697%" y="757" width="0.1095%" height="15" fill="rgb(203,203,60)" fg:x="2342" fg:w="5"/><text x="51.5197%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.11%)</title><rect x="51.2697%" y="741" width="0.1095%" height="15" fill="rgb(198,198,58)" fg:x="2342" fg:w="5"/><text x="51.5197%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (5 samples, 0.11%)</title><rect x="51.2697%" y="725" width="0.1095%" height="15" fill="rgb(176,176,50)" fg:x="2342" fg:w="5"/><text x="51.5197%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (10 samples, 0.22%)</title><rect x="51.3792%" y="789" width="0.2189%" height="15" fill="rgb(198,198,58)" fg:x="2347" fg:w="10"/><text x="51.6292%" y="799.50"></text></g><g><title>&lt;v8::scope::HandleScope&lt;()&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.04%)</title><rect x="52.1673%" y="773" width="0.0438%" height="15" fill="rgb(176,176,50)" fg:x="2383" fg:w="2"/><text x="52.4173%" y="783.50"></text></g><g><title>&lt;v8::scope::HandleScope&lt;C&gt; as core::convert::AsMut&lt;v8::isolate::Isolate&gt;&gt;::as_mut (2 samples, 0.04%)</title><rect x="52.1673%" y="757" width="0.0438%" height="15" fill="rgb(220,220,66)" fg:x="2383" fg:w="2"/><text x="52.4173%" y="767.50"></text></g><g><title>v8::scope::data::ScopeData::get_mut (2 samples, 0.04%)</title><rect x="52.1673%" y="741" width="0.0438%" height="15" fill="rgb(195,195,57)" fg:x="2383" fg:w="2"/><text x="52.4173%" y="751.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (2 samples, 0.04%)</title><rect x="52.1673%" y="725" width="0.0438%" height="15" fill="rgb(199,199,58)" fg:x="2383" fg:w="2"/><text x="52.4173%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (57 samples, 1.25%)</title><rect x="52.2110%" y="773" width="1.2478%" height="15" fill="rgb(215,215,64)" fg:x="2385" fg:w="57"/><text x="52.4610%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (57 samples, 1.25%)</title><rect x="52.2110%" y="757" width="1.2478%" height="15" fill="rgb(202,202,59)" fg:x="2385" fg:w="57"/><text x="52.4610%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (57 samples, 1.25%)</title><rect x="52.2110%" y="741" width="1.2478%" height="15" fill="rgb(219,219,66)" fg:x="2385" fg:w="57"/><text x="52.4610%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (57 samples, 1.25%)</title><rect x="52.2110%" y="725" width="1.2478%" height="15" fill="rgb(197,197,58)" fg:x="2385" fg:w="57"/><text x="52.4610%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (52 samples, 1.14%)</title><rect x="52.3205%" y="709" width="1.1384%" height="15" fill="rgb(220,220,66)" fg:x="2390" fg:w="52"/><text x="52.5705%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (52 samples, 1.14%)</title><rect x="52.3205%" y="693" width="1.1384%" height="15" fill="rgb(211,211,63)" fg:x="2390" fg:w="52"/><text x="52.5705%" y="703.50"></text></g><g><title>alloc::alloc::alloc (52 samples, 1.14%)</title><rect x="52.3205%" y="677" width="1.1384%" height="15" fill="rgb(180,180,51)" fg:x="2390" fg:w="52"/><text x="52.5705%" y="687.50"></text></g><g><title>__rdl_alloc (52 samples, 1.14%)</title><rect x="52.3205%" y="661" width="1.1384%" height="15" fill="rgb(250,122,122)" fg:x="2390" fg:w="52"/><text x="52.5705%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (52 samples, 1.14%)</title><rect x="52.3205%" y="645" width="1.1384%" height="15" fill="rgb(208,208,62)" fg:x="2390" fg:w="52"/><text x="52.5705%" y="655.50"></text></g><g><title>__GI___libc_malloc (52 samples, 1.14%)</title><rect x="52.3205%" y="629" width="1.1384%" height="15" fill="rgb(222,83,83)" fg:x="2390" fg:w="52"/><text x="52.5705%" y="639.50"></text></g><g><title>tcache_get (28 samples, 0.61%)</title><rect x="52.8459%" y="613" width="0.6130%" height="15" fill="rgb(242,112,112)" fg:x="2414" fg:w="28"/><text x="53.0959%" y="623.50"></text></g><g><title>v8::String::Length (7 samples, 0.15%)</title><rect x="53.5683%" y="757" width="0.1532%" height="15" fill="rgb(214,214,64)" fg:x="2447" fg:w="7"/><text x="53.8183%" y="767.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::length (16 samples, 0.35%)</title><rect x="53.4588%" y="773" width="0.3503%" height="15" fill="rgb(183,183,53)" fg:x="2442" fg:w="16"/><text x="53.7088%" y="783.50"></text></g><g><title>v8__String__Length (4 samples, 0.09%)</title><rect x="53.7215%" y="757" width="0.0876%" height="15" fill="rgb(239,107,107)" fg:x="2454" fg:w="4"/><text x="53.9715%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (1 samples, 0.02%)</title><rect x="53.9405%" y="757" width="0.0219%" height="15" fill="rgb(224,224,67)" fg:x="2464" fg:w="1"/><text x="54.1905%" y="767.50"></text></g><g><title>[runjs] (17 samples, 0.37%)</title><rect x="62.5000%" y="741" width="0.3722%" height="15" fill="rgb(228,90,90)" fg:x="2855" fg:w="17"/><text x="62.7500%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (43 samples, 0.94%)</title><rect x="62.8722%" y="741" width="0.9413%" height="15" fill="rgb(225,87,87)" fg:x="2872" fg:w="43"/><text x="63.1222%" y="751.50"></text></g><g><title>v8::String::WriteUtf8 (451 samples, 9.87%)</title><rect x="53.9623%" y="757" width="9.8730%" height="15" fill="rgb(208,208,62)" fg:x="2465" fg:w="451"/><text x="54.2123%" y="767.50">v8::String::Wr..</text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="63.8135%" y="741" width="0.0219%" height="15" fill="rgb(220,79,79)" fg:x="2915" fg:w="1"/><text x="64.0635%" y="751.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="63.8135%" y="725" width="0.0219%" height="15" fill="rgb(245,115,115)" fg:x="2915" fg:w="1"/><text x="64.0635%" y="735.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="63.8135%" y="709" width="0.0219%" height="15" fill="rgb(226,89,89)" fg:x="2915" fg:w="1"/><text x="64.0635%" y="719.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="63.8135%" y="693" width="0.0219%" height="15" fill="rgb(220,79,79)" fg:x="2915" fg:w="1"/><text x="64.0635%" y="703.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="63.8135%" y="677" width="0.0219%" height="15" fill="rgb(246,117,117)" fg:x="2915" fg:w="1"/><text x="64.0635%" y="687.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="63.8135%" y="661" width="0.0219%" height="15" fill="rgb(206,59,59)" fg:x="2915" fg:w="1"/><text x="64.0635%" y="671.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="63.8135%" y="645" width="0.0219%" height="15" fill="rgb(213,69,69)" fg:x="2915" fg:w="1"/><text x="64.0635%" y="655.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="63.8135%" y="629" width="0.0219%" height="15" fill="rgb(251,125,125)" fg:x="2915" fg:w="1"/><text x="64.0635%" y="639.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="63.8135%" y="613" width="0.0219%" height="15" fill="rgb(248,120,120)" fg:x="2915" fg:w="1"/><text x="64.0635%" y="623.50"></text></g><g><title>update_curr (1 samples, 0.02%)</title><rect x="63.8135%" y="597" width="0.0219%" height="15" fill="rgb(227,90,90)" fg:x="2915" fg:w="1"/><text x="64.0635%" y="607.50"></text></g><g><title>serde_v8::de::to_utf8 (571 samples, 12.50%)</title><rect x="51.3792%" y="805" width="12.5000%" height="15" fill="rgb(192,192,56)" fg:x="2347" fg:w="571"/><text x="51.6292%" y="815.50">serde_v8::de::to_ut..</text></g><g><title>serde_v8::de::to_utf8_fast (561 samples, 12.28%)</title><rect x="51.5981%" y="789" width="12.2811%" height="15" fill="rgb(208,208,62)" fg:x="2357" fg:w="561"/><text x="51.8481%" y="799.50">serde_v8::de::to_u..</text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::write_utf8 (460 samples, 10.07%)</title><rect x="53.8091%" y="773" width="10.0701%" height="15" fill="rgb(179,179,51)" fg:x="2458" fg:w="460"/><text x="54.0591%" y="783.50">v8::string::&lt;im..</text></g><g><title>v8__String__WriteUtf8 (2 samples, 0.04%)</title><rect x="63.8354%" y="757" width="0.0438%" height="15" fill="rgb(247,119,119)" fg:x="2916" fg:w="2"/><text x="64.0854%" y="767.50"></text></g><g><title>runjs::op_encoding_encode_into::call (2,233 samples, 48.88%)</title><rect x="15.2802%" y="821" width="48.8835%" height="15" fill="rgb(201,201,59)" fg:x="698" fg:w="2233"/><text x="15.5302%" y="831.50">runjs::op_encoding_encode_into::call</text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::String&gt;&gt;::try_from (13 samples, 0.28%)</title><rect x="63.8792%" y="805" width="0.2846%" height="15" fill="rgb(204,204,60)" fg:x="2918" fg:w="13"/><text x="64.1292%" y="815.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_string (8 samples, 0.18%)</title><rect x="63.9886%" y="789" width="0.1751%" height="15" fill="rgb(196,196,57)" fg:x="2923" fg:w="8"/><text x="64.2386%" y="799.50"></text></g><g><title>v8__Value__IsString (8 samples, 0.18%)</title><rect x="63.9886%" y="773" width="0.1751%" height="15" fill="rgb(236,103,103)" fg:x="2923" fg:w="8"/><text x="64.2386%" y="783.50"></text></g><g><title>v8::array_buffer::&lt;impl v8::data::ArrayBuffer&gt;::get_backing_store (834 samples, 18.26%)</title><rect x="64.1637%" y="821" width="18.2574%" height="15" fill="rgb(210,210,62)" fg:x="2931" fg:w="834"/><text x="64.4137%" y="831.50">v8::array_buffer::&lt;impl v8::..</text></g><g><title>v8::ArrayBuffer::GetBackingStore (834 samples, 18.26%)</title><rect x="64.1637%" y="805" width="18.2574%" height="15" fill="rgb(213,213,63)" fg:x="2931" fg:w="834"/><text x="64.4137%" y="815.50">v8::ArrayBuffer::GetBackingS..</text></g><g><title>v8::BackingStore::IsShared (4 samples, 0.09%)</title><rect x="82.4212%" y="805" width="0.0876%" height="15" fill="rgb(187,187,54)" fg:x="3765" fg:w="4"/><text x="82.6712%" y="815.50"></text></g><g><title>v8::array_buffer::BackingStore::is_shared (8 samples, 0.18%)</title><rect x="82.4212%" y="821" width="0.1751%" height="15" fill="rgb(207,207,61)" fg:x="3765" fg:w="8"/><text x="82.6712%" y="831.50"></text></g><g><title>v8__BackingStore__IsShared (4 samples, 0.09%)</title><rect x="82.5088%" y="805" width="0.0876%" height="15" fill="rgb(219,77,77)" fg:x="3769" fg:w="4"/><text x="82.7588%" y="815.50"></text></g><g><title>v8::ArrayBufferView::Buffer (183 samples, 4.01%)</title><rect x="82.6401%" y="773" width="4.0061%" height="15" fill="rgb(200,200,59)" fg:x="3775" fg:w="183"/><text x="82.8901%" y="783.50">v8::..</text></g><g><title>v8::internal::JSTypedArray::GetBuffer (128 samples, 2.80%)</title><rect x="83.8441%" y="757" width="2.8021%" height="15" fill="rgb(217,217,65)" fg:x="3830" fg:w="128"/><text x="84.0941%" y="767.50">v8..</text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="86.6243%" y="741" width="0.0219%" height="15" fill="rgb(202,53,53)" fg:x="3957" fg:w="1"/><text x="86.8743%" y="751.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="86.6243%" y="725" width="0.0219%" height="15" fill="rgb(225,87,87)" fg:x="3957" fg:w="1"/><text x="86.8743%" y="735.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="86.6243%" y="709" width="0.0219%" height="15" fill="rgb(252,126,126)" fg:x="3957" fg:w="1"/><text x="86.8743%" y="719.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="86.6243%" y="693" width="0.0219%" height="15" fill="rgb(212,68,68)" fg:x="3957" fg:w="1"/><text x="86.8743%" y="703.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="86.6243%" y="677" width="0.0219%" height="15" fill="rgb(237,104,104)" fg:x="3957" fg:w="1"/><text x="86.8743%" y="687.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="86.6243%" y="661" width="0.0219%" height="15" fill="rgb(205,57,57)" fg:x="3957" fg:w="1"/><text x="86.8743%" y="671.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="86.6243%" y="645" width="0.0219%" height="15" fill="rgb(204,56,56)" fg:x="3957" fg:w="1"/><text x="86.8743%" y="655.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="86.6243%" y="629" width="0.0219%" height="15" fill="rgb(210,65,65)" fg:x="3957" fg:w="1"/><text x="86.8743%" y="639.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="86.6243%" y="613" width="0.0219%" height="15" fill="rgb(224,86,86)" fg:x="3957" fg:w="1"/><text x="86.8743%" y="623.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.02%)</title><rect x="86.6243%" y="597" width="0.0219%" height="15" fill="rgb(219,78,78)" fg:x="3957" fg:w="1"/><text x="86.8743%" y="607.50"></text></g><g><title>v8::array_buffer_view::_&lt;impl v8::data::ArrayBufferView&gt;::buffer::_{{closure}} (194 samples, 4.25%)</title><rect x="82.5963%" y="789" width="4.2469%" height="15" fill="rgb(183,183,52)" fg:x="3773" fg:w="194"/><text x="82.8463%" y="799.50">v8::a..</text></g><g><title>v8__ArrayBufferView__Buffer (9 samples, 0.20%)</title><rect x="86.6462%" y="773" width="0.1970%" height="15" fill="rgb(250,123,123)" fg:x="3958" fg:w="9"/><text x="86.8962%" y="783.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::buffer (199 samples, 4.36%)</title><rect x="82.5963%" y="821" width="4.3564%" height="15" fill="rgb(211,211,63)" fg:x="3773" fg:w="199"/><text x="82.8463%" y="831.50">v8::a..</text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (199 samples, 4.36%)</title><rect x="82.5963%" y="805" width="4.3564%" height="15" fill="rgb(190,190,55)" fg:x="3773" fg:w="199"/><text x="82.8463%" y="815.50">v8::s..</text></g><g><title>v8::scope::data::ScopeData::get_mut (5 samples, 0.11%)</title><rect x="86.8433%" y="789" width="0.1095%" height="15" fill="rgb(213,213,64)" fg:x="3967" fg:w="5"/><text x="87.0933%" y="799.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (5 samples, 0.11%)</title><rect x="86.8433%" y="773" width="0.1095%" height="15" fill="rgb(208,208,62)" fg:x="3967" fg:w="5"/><text x="87.0933%" y="783.50"></text></g><g><title>v8::ArrayBufferView::ByteLength (16 samples, 0.35%)</title><rect x="86.9965%" y="805" width="0.3503%" height="15" fill="rgb(229,229,69)" fg:x="3974" fg:w="16"/><text x="87.2465%" y="815.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_length (26 samples, 0.57%)</title><rect x="86.9527%" y="821" width="0.5692%" height="15" fill="rgb(225,225,68)" fg:x="3972" fg:w="26"/><text x="87.2027%" y="831.50"></text></g><g><title>v8__ArrayBufferView__ByteLength (8 samples, 0.18%)</title><rect x="87.3468%" y="805" width="0.1751%" height="15" fill="rgb(239,107,107)" fg:x="3990" fg:w="8"/><text x="87.5968%" y="815.50"></text></g><g><title>v8::ArrayBufferView::ByteOffset (19 samples, 0.42%)</title><rect x="87.5219%" y="805" width="0.4159%" height="15" fill="rgb(178,178,51)" fg:x="3998" fg:w="19"/><text x="87.7719%" y="815.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_offset (24 samples, 0.53%)</title><rect x="87.5219%" y="821" width="0.5254%" height="15" fill="rgb(183,183,53)" fg:x="3998" fg:w="24"/><text x="87.7719%" y="831.50"></text></g><g><title>v8__ArrayBufferView__ByteOffset (5 samples, 0.11%)</title><rect x="87.9378%" y="805" width="0.1095%" height="15" fill="rgb(243,113,113)" fg:x="4017" fg:w="5"/><text x="88.1878%" y="815.50"></text></g><g><title>v8::Value::IsArrayBufferView (57 samples, 1.25%)</title><rect x="88.0473%" y="789" width="1.2478%" height="15" fill="rgb(184,184,53)" fg:x="4022" fg:w="57"/><text x="88.2973%" y="799.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::ArrayBufferView&gt;&gt;::try_from (63 samples, 1.38%)</title><rect x="88.0473%" y="821" width="1.3792%" height="15" fill="rgb(201,201,59)" fg:x="4022" fg:w="63"/><text x="88.2973%" y="831.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_array_buffer_view (63 samples, 1.38%)</title><rect x="88.0473%" y="805" width="1.3792%" height="15" fill="rgb(221,221,66)" fg:x="4022" fg:w="63"/><text x="88.2973%" y="815.50"></text></g><g><title>v8__Value__IsArrayBufferView (6 samples, 0.13%)</title><rect x="89.2951%" y="789" width="0.1313%" height="15" fill="rgb(225,86,86)" fg:x="4079" fg:w="6"/><text x="89.5451%" y="799.50"></text></g><g><title>v8::external::&lt;impl v8::data::External&gt;::value (3 samples, 0.07%)</title><rect x="89.4264%" y="821" width="0.0657%" height="15" fill="rgb(228,228,69)" fg:x="4085" fg:w="3"/><text x="89.6764%" y="831.50"></text></g><g><title>v8::External::Value (1 samples, 0.02%)</title><rect x="89.4702%" y="805" width="0.0219%" height="15" fill="rgb(229,229,69)" fg:x="4087" fg:w="1"/><text x="89.7202%" y="815.50"></text></g><g><title>v8::function::FunctionCallbackArguments::data (7 samples, 0.15%)</title><rect x="89.4921%" y="821" width="0.1532%" height="15" fill="rgb(222,222,67)" fg:x="4088" fg:w="7"/><text x="89.7421%" y="831.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (6 samples, 0.13%)</title><rect x="89.5140%" y="805" width="0.1313%" height="15" fill="rgb(250,122,122)" fg:x="4089" fg:w="6"/><text x="89.7640%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.07%)</title><rect x="89.9081%" y="805" width="0.0657%" height="15" fill="rgb(221,221,67)" fg:x="4107" fg:w="3"/><text x="90.1581%" y="815.50"></text></g><g><title>core::ops::function::Fn::call (3,745 samples, 81.98%)</title><rect x="8.3625%" y="853" width="81.9834%" height="15" fill="rgb(197,197,58)" fg:x="382" fg:w="3745"/><text x="8.6125%" y="863.50">core::ops::function::Fn::call</text></g><g><title>runjs::op_encoding_encode_into::v8_func (3,745 samples, 81.98%)</title><rect x="8.3625%" y="837" width="81.9834%" height="15" fill="rgb(184,184,53)" fg:x="382" fg:w="3745"/><text x="8.6125%" y="847.50">runjs::op_encoding_encode_into::v8_func</text></g><g><title>v8::function::FunctionCallbackArguments::get (32 samples, 0.70%)</title><rect x="89.6454%" y="821" width="0.7005%" height="15" fill="rgb(201,201,59)" fg:x="4095" fg:w="32"/><text x="89.8954%" y="831.50"></text></g><g><title>v8__FunctionCallbackInfo__GetArgument (17 samples, 0.37%)</title><rect x="89.9737%" y="805" width="0.3722%" height="15" fill="rgb(235,101,101)" fg:x="4110" fg:w="17"/><text x="90.2237%" y="815.50"></text></g><g><title>v8::scope::data::ScopeData::get_mut (4 samples, 0.09%)</title><rect x="90.4116%" y="821" width="0.0876%" height="15" fill="rgb(182,182,52)" fg:x="4130" fg:w="4"/><text x="90.6616%" y="831.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (4 samples, 0.09%)</title><rect x="90.4116%" y="805" width="0.0876%" height="15" fill="rgb(192,192,56)" fg:x="4130" fg:w="4"/><text x="90.6616%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.13%)</title><rect x="90.6743%" y="789" width="0.1313%" height="15" fill="rgb(226,226,68)" fg:x="4142" fg:w="6"/><text x="90.9243%" y="799.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.13%)</title><rect x="90.6743%" y="773" width="0.1313%" height="15" fill="rgb(201,201,59)" fg:x="4142" fg:w="6"/><text x="90.9243%" y="783.50"></text></g><g><title>core::mem::replace (6 samples, 0.13%)</title><rect x="90.6743%" y="757" width="0.1313%" height="15" fill="rgb(180,180,51)" fg:x="4142" fg:w="6"/><text x="90.9243%" y="767.50"></text></g><g><title>core::ptr::write (6 samples, 0.13%)</title><rect x="90.6743%" y="741" width="0.1313%" height="15" fill="rgb(208,208,62)" fg:x="4142" fg:w="6"/><text x="90.9243%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.07%)</title><rect x="90.8056%" y="789" width="0.0657%" height="15" fill="rgb(215,215,64)" fg:x="4148" fg:w="3"/><text x="91.0556%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (14 samples, 0.31%)</title><rect x="90.8713%" y="789" width="0.3065%" height="15" fill="rgb(203,203,60)" fg:x="4151" fg:w="14"/><text x="91.1213%" y="799.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (2 samples, 0.04%)</title><rect x="91.1778%" y="789" width="0.0438%" height="15" fill="rgb(195,195,57)" fg:x="4165" fg:w="2"/><text x="91.4278%" y="799.50"></text></g><g><title>v8__Isolate__SetData (2 samples, 0.04%)</title><rect x="91.1778%" y="773" width="0.0438%" height="15" fill="rgb(209,63,63)" fg:x="4165" fg:w="2"/><text x="91.4278%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::CallbackScope&gt; (42 samples, 0.92%)</title><rect x="90.3459%" y="853" width="0.9194%" height="15" fill="rgb(203,203,60)" fg:x="4127" fg:w="42"/><text x="90.5959%" y="863.50"></text></g><g><title>&lt;v8::scope::CallbackScope&lt;C&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.92%)</title><rect x="90.3459%" y="837" width="0.9194%" height="15" fill="rgb(214,214,64)" fg:x="4127" fg:w="42"/><text x="90.5959%" y="847.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (35 samples, 0.77%)</title><rect x="90.4991%" y="821" width="0.7662%" height="15" fill="rgb(202,202,59)" fg:x="4134" fg:w="35"/><text x="90.7491%" y="831.50"></text></g><g><title>v8::scope::data::ScopeData::exit_scope (29 samples, 0.63%)</title><rect x="90.6305%" y="805" width="0.6349%" height="15" fill="rgb(176,176,50)" fg:x="4140" fg:w="29"/><text x="90.8805%" y="815.50"></text></g><g><title>v8::scope::data::ScopeData::get_isolate_mut (2 samples, 0.04%)</title><rect x="91.2215%" y="789" width="0.0438%" height="15" fill="rgb(182,182,52)" fg:x="4167" fg:w="2"/><text x="91.4715%" y="799.50"></text></g><g><title>v8::function::ReturnValue::from_function_callback_info (10 samples, 0.22%)</title><rect x="91.2653%" y="853" width="0.2189%" height="15" fill="rgb(196,196,57)" fg:x="4169" fg:w="10"/><text x="91.5153%" y="863.50"></text></g><g><title>v8__FunctionCallbackInfo__GetReturnValue (10 samples, 0.22%)</title><rect x="91.2653%" y="837" width="0.2189%" height="15" fill="rgb(249,122,122)" fg:x="4169" fg:w="10"/><text x="91.5153%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.04%)</title><rect x="91.7907%" y="821" width="0.0438%" height="15" fill="rgb(212,212,63)" fg:x="4193" fg:w="2"/><text x="92.0407%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="91.8345%" y="821" width="0.0219%" height="15" fill="rgb(221,221,66)" fg:x="4195" fg:w="1"/><text x="92.0845%" y="831.50"></text></g><g><title>v8::scope::data::ScopeData::get_current_mut (28 samples, 0.61%)</title><rect x="91.4842%" y="837" width="0.6130%" height="15" fill="rgb(201,201,59)" fg:x="4179" fg:w="28"/><text x="91.7342%" y="847.50"></text></g><g><title>v8::isolate::Isolate::get_current_scope_data (11 samples, 0.24%)</title><rect x="91.8564%" y="821" width="0.2408%" height="15" fill="rgb(191,191,56)" fg:x="4196" fg:w="11"/><text x="92.1064%" y="831.50"></text></g><g><title>v8__Isolate__GetData (9 samples, 0.20%)</title><rect x="91.9002%" y="805" width="0.1970%" height="15" fill="rgb(206,59,59)" fg:x="4198" fg:w="9"/><text x="92.1502%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (15 samples, 0.33%)</title><rect x="92.5569%" y="805" width="0.3284%" height="15" fill="rgb(200,200,59)" fg:x="4228" fg:w="15"/><text x="92.8069%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.33%)</title><rect x="92.5569%" y="789" width="0.3284%" height="15" fill="rgb(228,228,69)" fg:x="4228" fg:w="15"/><text x="92.8069%" y="799.50"></text></g><g><title>core::mem::replace (15 samples, 0.33%)</title><rect x="92.5569%" y="773" width="0.3284%" height="15" fill="rgb(217,217,65)" fg:x="4228" fg:w="15"/><text x="92.8069%" y="783.50"></text></g><g><title>core::ptr::write (15 samples, 0.33%)</title><rect x="92.5569%" y="757" width="0.3284%" height="15" fill="rgb(180,180,52)" fg:x="4228" fg:w="15"/><text x="92.8069%" y="767.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (10 samples, 0.22%)</title><rect x="92.8853%" y="805" width="0.2189%" height="15" fill="rgb(186,186,54)" fg:x="4243" fg:w="10"/><text x="93.1353%" y="815.50"></text></g><g><title>v8__Isolate__SetData (8 samples, 0.18%)</title><rect x="92.9291%" y="789" width="0.1751%" height="15" fill="rgb(246,118,118)" fg:x="4245" fg:w="8"/><text x="93.1791%" y="799.50"></text></g><g><title>v8::scope::data::ScopeData::new_callback_scope_data (47 samples, 1.03%)</title><rect x="92.0972%" y="837" width="1.0289%" height="15" fill="rgb(211,211,63)" fg:x="4207" fg:w="47"/><text x="92.3472%" y="847.50"></text></g><g><title>v8::scope::data::ScopeData::new_scope_data_with (47 samples, 1.03%)</title><rect x="92.0972%" y="821" width="1.0289%" height="15" fill="rgb(210,210,63)" fg:x="4207" fg:w="47"/><text x="92.3472%" y="831.50"></text></g><g><title>v8::scope::data::ScopeData::allocate_or_reuse_scope_data (1 samples, 0.02%)</title><rect x="93.1042%" y="805" width="0.0219%" height="15" fill="rgb(223,223,67)" fg:x="4253" fg:w="1"/><text x="93.3542%" y="815.50"></text></g><g><title>Builtins_CallApiCallback (3,928 samples, 85.99%)</title><rect x="7.1585%" y="901" width="85.9895%" height="15" fill="rgb(235,101,101)" fg:x="327" fg:w="3928"/><text x="7.4085%" y="911.50">Builtins_CallApiCallback</text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3,881 samples, 84.96%)</title><rect x="8.1874%" y="885" width="84.9606%" height="15" fill="rgb(206,206,61)" fg:x="374" fg:w="3881"/><text x="8.4374%" y="895.50">&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn</text></g><g><title>v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}} (3,881 samples, 84.96%)</title><rect x="8.1874%" y="869" width="84.9606%" height="15" fill="rgb(195,195,57)" fg:x="374" fg:w="3881"/><text x="8.4374%" y="879.50">v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}}</text></g><g><title>v8::scope::CallbackScope::new (76 samples, 1.66%)</title><rect x="91.4842%" y="853" width="1.6637%" height="15" fill="rgb(229,229,69)" fg:x="4179" fg:w="76"/><text x="91.7342%" y="863.50"></text></g><g><title>v8::scope::param::NewCallbackScope::get_isolate_mut_and_maybe_current_context (1 samples, 0.02%)</title><rect x="93.1261%" y="837" width="0.0219%" height="15" fill="rgb(216,216,65)" fg:x="4254" fg:w="1"/><text x="93.3761%" y="847.50"></text></g><g><title>&lt;&amp;v8::function::FunctionCallbackInfo as v8::scope::getter::GetIsolate&gt;::get_isolate_mut (1 samples, 0.02%)</title><rect x="93.1261%" y="821" width="0.0219%" height="15" fill="rgb(215,215,64)" fg:x="4254" fg:w="1"/><text x="93.3761%" y="831.50"></text></g><g><title>v8__FunctionCallbackInfo__GetIsolate (1 samples, 0.02%)</title><rect x="93.1261%" y="805" width="0.0219%" height="15" fill="rgb(240,109,109)" fg:x="4254" fg:w="1"/><text x="93.3761%" y="815.50"></text></g><g><title>Builtins_LoadIC (39 samples, 0.85%)</title><rect x="93.1480%" y="901" width="0.8538%" height="15" fill="rgb(233,99,99)" fg:x="4255" fg:w="39"/><text x="93.3980%" y="911.50"></text></g><g><title>v8__FunctionCallbackInfo__GetIsolate (1 samples, 0.02%)</title><rect x="94.0018%" y="901" width="0.0219%" height="15" fill="rgb(244,115,115)" fg:x="4294" fg:w="1"/><text x="94.2518%" y="911.50"></text></g><g><title>[perf-31084.map] (4,028 samples, 88.18%)</title><rect x="5.9545%" y="917" width="88.1786%" height="15" fill="rgb(215,73,73)" fg:x="272" fg:w="4028"/><text x="6.2045%" y="927.50">[perf-31084.map]</text></g><g><title>v8__Isolate__GetData (5 samples, 0.11%)</title><rect x="94.0236%" y="901" width="0.1095%" height="15" fill="rgb(251,125,125)" fg:x="4295" fg:w="5"/><text x="94.2736%" y="911.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (4 samples, 0.09%)</title><rect x="94.1331%" y="901" width="0.0876%" height="15" fill="rgb(220,220,66)" fg:x="4300" fg:w="4"/><text x="94.3831%" y="911.50"></text></g><g><title>v8::array_buffer::BackingStore::byte_length (3 samples, 0.07%)</title><rect x="94.2863%" y="885" width="0.0657%" height="15" fill="rgb(194,194,56)" fg:x="4307" fg:w="3"/><text x="94.5363%" y="895.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (10 samples, 0.22%)</title><rect x="94.2207%" y="901" width="0.2189%" height="15" fill="rgb(177,177,50)" fg:x="4304" fg:w="10"/><text x="94.4707%" y="911.50"></text></g><g><title>v8::array_buffer::BackingStore::data (4 samples, 0.09%)</title><rect x="94.3520%" y="885" width="0.0876%" height="15" fill="rgb(220,220,66)" fg:x="4310" fg:w="4"/><text x="94.6020%" y="895.50"></text></g><g><title>__GI___libc_free (44 samples, 0.96%)</title><rect x="94.4396%" y="901" width="0.9632%" height="15" fill="rgb(208,62,62)" fg:x="4314" fg:w="44"/><text x="94.6896%" y="911.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.07%)</title><rect x="95.4028%" y="901" width="0.0657%" height="15" fill="rgb(202,53,53)" fg:x="4358" fg:w="3"/><text x="95.6528%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="95.4685%" y="901" width="0.0657%" height="15" fill="rgb(225,86,86)" fg:x="4361" fg:w="3"/><text x="95.7185%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (2 samples, 0.04%)</title><rect x="95.5342%" y="901" width="0.0438%" height="15" fill="rgb(209,209,62)" fg:x="4364" fg:w="2"/><text x="95.7842%" y="911.50"></text></g><g><title>serde_v8::de::to_utf8 (16 samples, 0.35%)</title><rect x="95.5779%" y="901" width="0.3503%" height="15" fill="rgb(178,178,51)" fg:x="4366" fg:w="16"/><text x="95.8279%" y="911.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (10 samples, 0.22%)</title><rect x="95.9282%" y="901" width="0.2189%" height="15" fill="rgb(225,87,87)" fg:x="4382" fg:w="10"/><text x="96.1782%" y="911.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__reset (7 samples, 0.15%)</title><rect x="96.1471%" y="901" width="0.1532%" height="15" fill="rgb(232,97,97)" fg:x="4392" fg:w="7"/><text x="96.3971%" y="911.50"></text></g><g><title>v8::ArrayBuffer::GetBackingStore (8 samples, 0.18%)</title><rect x="96.3004%" y="901" width="0.1751%" height="15" fill="rgb(224,224,67)" fg:x="4399" fg:w="8"/><text x="96.5504%" y="911.50"></text></g><g><title>v8::ArrayBufferView::ByteOffset (7 samples, 0.15%)</title><rect x="96.4755%" y="901" width="0.1532%" height="15" fill="rgb(194,194,56)" fg:x="4407" fg:w="7"/><text x="96.7255%" y="911.50"></text></g><g><title>v8::BackingStore::ByteLength (1 samples, 0.02%)</title><rect x="96.6287%" y="901" width="0.0219%" height="15" fill="rgb(213,213,63)" fg:x="4414" fg:w="1"/><text x="96.8787%" y="911.50"></text></g><g><title>v8::BackingStore::IsShared (4 samples, 0.09%)</title><rect x="96.6506%" y="901" width="0.0876%" height="15" fill="rgb(178,178,51)" fg:x="4415" fg:w="4"/><text x="96.9006%" y="911.50"></text></g><g><title>v8::External::Value (2 samples, 0.04%)</title><rect x="96.7382%" y="901" width="0.0438%" height="15" fill="rgb(204,204,60)" fg:x="4419" fg:w="2"/><text x="96.9882%" y="911.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (5 samples, 0.11%)</title><rect x="96.7820%" y="901" width="0.1095%" height="15" fill="rgb(210,210,62)" fg:x="4421" fg:w="5"/><text x="97.0320%" y="911.50"></text></g><g><title>v8__ArrayBufferView__Buffer (2 samples, 0.04%)</title><rect x="96.8914%" y="901" width="0.0438%" height="15" fill="rgb(242,111,111)" fg:x="4426" fg:w="2"/><text x="97.1414%" y="911.50"></text></g><g><title>v8__ArrayBufferView__ByteLength (1 samples, 0.02%)</title><rect x="96.9352%" y="901" width="0.0219%" height="15" fill="rgb(242,112,112)" fg:x="4428" fg:w="1"/><text x="97.1852%" y="911.50"></text></g><g><title>v8__ArrayBufferView__ByteOffset (8 samples, 0.18%)</title><rect x="96.9571%" y="901" width="0.1751%" height="15" fill="rgb(216,74,74)" fg:x="4429" fg:w="8"/><text x="97.2071%" y="911.50"></text></g><g><title>v8__ArrayBuffer__GetBackingStore (6 samples, 0.13%)</title><rect x="97.1322%" y="901" width="0.1313%" height="15" fill="rgb(232,97,97)" fg:x="4437" fg:w="6"/><text x="97.3822%" y="911.50"></text></g><g><title>v8__BackingStore__ByteLength (6 samples, 0.13%)</title><rect x="97.2636%" y="901" width="0.1313%" height="15" fill="rgb(216,73,73)" fg:x="4443" fg:w="6"/><text x="97.5136%" y="911.50"></text></g><g><title>v8__BackingStore__Data (5 samples, 0.11%)</title><rect x="97.3949%" y="901" width="0.1095%" height="15" fill="rgb(245,116,116)" fg:x="4449" fg:w="5"/><text x="97.6449%" y="911.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (2 samples, 0.04%)</title><rect x="97.5044%" y="901" width="0.0438%" height="15" fill="rgb(235,101,101)" fg:x="4454" fg:w="2"/><text x="97.7544%" y="911.50"></text></g><g><title>v8__FunctionCallbackInfo__GetArgument (5 samples, 0.11%)</title><rect x="97.5482%" y="901" width="0.1095%" height="15" fill="rgb(207,60,60)" fg:x="4456" fg:w="5"/><text x="97.7982%" y="911.50"></text></g><g><title>v8__Isolate__GetData (4 samples, 0.09%)</title><rect x="97.6576%" y="901" width="0.0876%" height="15" fill="rgb(245,115,115)" fg:x="4461" fg:w="4"/><text x="97.9076%" y="911.50"></text></g><g><title>v8__Isolate__SetData (1 samples, 0.02%)</title><rect x="97.7452%" y="901" width="0.0219%" height="15" fill="rgb(208,62,62)" fg:x="4465" fg:w="1"/><text x="97.9952%" y="911.50"></text></g><g><title>[unknown] (167 samples, 3.66%)</title><rect x="94.1331%" y="917" width="3.6559%" height="15" fill="rgb(221,81,81)" fg:x="4300" fg:w="167"/><text x="94.3831%" y="927.50">[unk..</text></g><g><title>v8__Value__IsArrayBufferView (1 samples, 0.02%)</title><rect x="97.7671%" y="901" width="0.0219%" height="15" fill="rgb(215,72,72)" fg:x="4466" fg:w="1"/><text x="98.0171%" y="911.50"></text></g><g><title>schedule_tail (29 samples, 0.63%)</title><rect x="97.7890%" y="885" width="0.6349%" height="15" fill="rgb(203,54,54)" fg:x="4467" fg:w="29"/><text x="98.0390%" y="895.50"></text></g><g><title>finish_task_switch (29 samples, 0.63%)</title><rect x="97.7890%" y="869" width="0.6349%" height="15" fill="rgb(216,73,73)" fg:x="4467" fg:w="29"/><text x="98.0390%" y="879.50"></text></g><g><title>__perf_event_task_sched_in (29 samples, 0.63%)</title><rect x="97.7890%" y="853" width="0.6349%" height="15" fill="rgb(235,101,101)" fg:x="4467" fg:w="29"/><text x="98.0390%" y="863.50"></text></g><g><title>x86_pmu_enable (29 samples, 0.63%)</title><rect x="97.7890%" y="837" width="0.6349%" height="15" fill="rgb(207,61,61)" fg:x="4467" fg:w="29"/><text x="98.0390%" y="847.50"></text></g><g><title>intel_tfa_pmu_enable_all (29 samples, 0.63%)</title><rect x="97.7890%" y="821" width="0.6349%" height="15" fill="rgb(249,122,122)" fg:x="4467" fg:w="29"/><text x="98.0390%" y="831.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (29 samples, 0.63%)</title><rect x="97.7890%" y="805" width="0.6349%" height="15" fill="rgb(213,69,69)" fg:x="4467" fg:w="29"/><text x="98.0390%" y="815.50"></text></g><g><title>native_write_msr (29 samples, 0.63%)</title><rect x="97.7890%" y="789" width="0.6349%" height="15" fill="rgb(218,76,76)" fg:x="4467" fg:w="29"/><text x="98.0390%" y="799.50"></text></g><g><title>ret_from_fork (30 samples, 0.66%)</title><rect x="97.7890%" y="901" width="0.6567%" height="15" fill="rgb(205,57,57)" fg:x="4467" fg:w="30"/><text x="98.0390%" y="911.50"></text></g><g><title>syscall_return_slowpath (1 samples, 0.02%)</title><rect x="98.4238%" y="885" width="0.0219%" height="15" fill="rgb(202,53,53)" fg:x="4496" fg:w="1"/><text x="98.6738%" y="895.50"></text></g><g><title>__GI___clone (31 samples, 0.68%)</title><rect x="97.7890%" y="917" width="0.6786%" height="15" fill="rgb(224,84,84)" fg:x="4467" fg:w="31"/><text x="98.0390%" y="927.50"></text></g><g><title>start_thread (1 samples, 0.02%)</title><rect x="98.4457%" y="901" width="0.0219%" height="15" fill="rgb(206,59,59)" fg:x="4497" fg:w="1"/><text x="98.6957%" y="911.50"></text></g><g><title>_dl_runtime_resolve_xsavec (1 samples, 0.02%)</title><rect x="98.4457%" y="885" width="0.0219%" height="15" fill="rgb(239,107,107)" fg:x="4497" fg:w="1"/><text x="98.6957%" y="895.50"></text></g><g><title>_dl_fixup (1 samples, 0.02%)</title><rect x="98.4457%" y="869" width="0.0219%" height="15" fill="rgb(248,120,120)" fg:x="4497" fg:w="1"/><text x="98.6957%" y="879.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="98.4457%" y="853" width="0.0219%" height="15" fill="rgb(251,125,125)" fg:x="4497" fg:w="1"/><text x="98.6957%" y="863.50"></text></g><g><title>do_lookup_x (1 samples, 0.02%)</title><rect x="98.4457%" y="837" width="0.0219%" height="15" fill="rgb(207,61,61)" fg:x="4497" fg:w="1"/><text x="98.6957%" y="847.50"></text></g><g><title>v8::internal::ConcurrentMarking::RescheduleJobIfNeeded (1 samples, 0.02%)</title><rect x="98.4676%" y="325" width="0.0219%" height="15" fill="rgb(205,205,61)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="335.50"></text></g><g><title>v8::platform::DefaultPlatform::PostJob (1 samples, 0.02%)</title><rect x="98.4676%" y="309" width="0.0219%" height="15" fill="rgb(207,207,61)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="319.50"></text></g><g><title>v8::platform::DefaultJobState::NotifyConcurrencyIncrease (1 samples, 0.02%)</title><rect x="98.4676%" y="293" width="0.0219%" height="15" fill="rgb(191,191,56)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="303.50"></text></g><g><title>v8::platform::DefaultWorkerThreadsTaskRunner::PostTask (1 samples, 0.02%)</title><rect x="98.4676%" y="277" width="0.0219%" height="15" fill="rgb(193,193,56)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="287.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="98.4676%" y="261" width="0.0219%" height="15" fill="rgb(215,72,72)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="271.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="98.4676%" y="245" width="0.0219%" height="15" fill="rgb(238,106,106)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="255.50"></text></g><g><title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="98.4676%" y="229" width="0.0219%" height="15" fill="rgb(238,105,105)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="98.4676%" y="213" width="0.0219%" height="15" fill="rgb(239,108,108)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="223.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="98.4676%" y="197" width="0.0219%" height="15" fill="rgb(252,126,126)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="207.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="98.4676%" y="181" width="0.0219%" height="15" fill="rgb(250,122,122)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="191.50"></text></g><g><title>do_futex (1 samples, 0.02%)</title><rect x="98.4676%" y="165" width="0.0219%" height="15" fill="rgb(210,65,65)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="175.50"></text></g><g><title>futex_wake (1 samples, 0.02%)</title><rect x="98.4676%" y="149" width="0.0219%" height="15" fill="rgb(238,105,105)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="159.50"></text></g><g><title>wake_up_q (1 samples, 0.02%)</title><rect x="98.4676%" y="133" width="0.0219%" height="15" fill="rgb(218,77,77)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="143.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="98.4676%" y="117" width="0.0219%" height="15" fill="rgb(216,74,74)" fg:x="4498" fg:w="1"/><text x="98.7176%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;deno_core::runtime::JsRuntime&gt; (2 samples, 0.04%)</title><rect x="98.4676%" y="533" width="0.0438%" height="15" fill="rgb(195,195,57)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;v8::isolate::OwnedIsolate&gt;&gt; (2 samples, 0.04%)</title><rect x="98.4676%" y="517" width="0.0438%" height="15" fill="rgb(202,202,59)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::isolate::OwnedIsolate&gt; (2 samples, 0.04%)</title><rect x="98.4676%" y="501" width="0.0438%" height="15" fill="rgb(189,189,55)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="511.50"></text></g><g><title>&lt;v8::isolate::OwnedIsolate as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.4676%" y="485" width="0.0438%" height="15" fill="rgb(187,187,54)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="495.50"></text></g><g><title>v8::isolate::Isolate::dispose (2 samples, 0.04%)</title><rect x="98.4676%" y="469" width="0.0438%" height="15" fill="rgb(188,188,55)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="479.50"></text></g><g><title>v8::isolate::Isolate::low_memory_notification (2 samples, 0.04%)</title><rect x="98.4676%" y="453" width="0.0438%" height="15" fill="rgb(202,202,60)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="463.50"></text></g><g><title>v8::Isolate::LowMemoryNotification (2 samples, 0.04%)</title><rect x="98.4676%" y="437" width="0.0438%" height="15" fill="rgb(211,211,63)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="447.50"></text></g><g><title>v8::internal::Heap::CollectAllAvailableGarbage (2 samples, 0.04%)</title><rect x="98.4676%" y="421" width="0.0438%" height="15" fill="rgb(186,186,54)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="431.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (2 samples, 0.04%)</title><rect x="98.4676%" y="405" width="0.0438%" height="15" fill="rgb(199,199,58)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="415.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (2 samples, 0.04%)</title><rect x="98.4676%" y="389" width="0.0438%" height="15" fill="rgb(182,182,52)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="399.50"></text></g><g><title>v8::internal::Heap::MarkCompact (2 samples, 0.04%)</title><rect x="98.4676%" y="373" width="0.0438%" height="15" fill="rgb(203,203,60)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="383.50"></text></g><g><title>v8::internal::MarkCompactCollector::CollectGarbage (2 samples, 0.04%)</title><rect x="98.4676%" y="357" width="0.0438%" height="15" fill="rgb(179,179,51)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="367.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkLiveObjects (2 samples, 0.04%)</title><rect x="98.4676%" y="341" width="0.0438%" height="15" fill="rgb(206,206,61)" fg:x="4498" fg:w="2"/><text x="98.7176%" y="351.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkTransitiveClosureUntilFixpoint (1 samples, 0.02%)</title><rect x="98.4895%" y="325" width="0.0219%" height="15" fill="rgb(176,176,50)" fg:x="4499" fg:w="1"/><text x="98.7395%" y="335.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessEphemerons (1 samples, 0.02%)</title><rect x="98.4895%" y="309" width="0.0219%" height="15" fill="rgb(175,175,50)" fg:x="4499" fg:w="1"/><text x="98.7395%" y="319.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessMarkingWorklist (1 samples, 0.02%)</title><rect x="98.4895%" y="293" width="0.0219%" height="15" fill="rgb(195,195,57)" fg:x="4499" fg:w="1"/><text x="98.7395%" y="303.50"></text></g><g><title>v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;::RecordSlot&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="98.4895%" y="277" width="0.0219%" height="15" fill="rgb(201,201,59)" fg:x="4499" fg:w="1"/><text x="98.7395%" y="287.50"></text></g><g><title>Builtins_CallApiCallback (25 samples, 0.55%)</title><rect x="98.5114%" y="341" width="0.5473%" height="15" fill="rgb(211,66,66)" fg:x="4500" fg:w="25"/><text x="98.7614%" y="351.50"></text></g><g><title>v8::internal::Isolate::FireCallCompletedCallbackInternal (45 samples, 0.99%)</title><rect x="98.5114%" y="501" width="0.9851%" height="15" fill="rgb(213,213,63)" fg:x="4500" fg:w="45"/><text x="98.7614%" y="511.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (45 samples, 0.99%)</title><rect x="98.5114%" y="485" width="0.9851%" height="15" fill="rgb(225,225,68)" fg:x="4500" fg:w="45"/><text x="98.7614%" y="495.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (45 samples, 0.99%)</title><rect x="98.5114%" y="469" width="0.9851%" height="15" fill="rgb(189,189,55)" fg:x="4500" fg:w="45"/><text x="98.7614%" y="479.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (45 samples, 0.99%)</title><rect x="98.5114%" y="453" width="0.9851%" height="15" fill="rgb(194,194,57)" fg:x="4500" fg:w="45"/><text x="98.7614%" y="463.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (45 samples, 0.99%)</title><rect x="98.5114%" y="437" width="0.9851%" height="15" fill="rgb(214,214,64)" fg:x="4500" fg:w="45"/><text x="98.7614%" y="447.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (45 samples, 0.99%)</title><rect x="98.5114%" y="421" width="0.9851%" height="15" fill="rgb(186,186,54)" fg:x="4500" fg:w="45"/><text x="98.7614%" y="431.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (45 samples, 0.99%)</title><rect x="98.5114%" y="405" width="0.9851%" height="15" fill="rgb(230,95,95)" fg:x="4500" fg:w="45"/><text x="98.7614%" y="415.50"></text></g><g><title>Builtins_RunMicrotasks (45 samples, 0.99%)</title><rect x="98.5114%" y="389" width="0.9851%" height="15" fill="rgb(245,115,115)" fg:x="4500" fg:w="45"/><text x="98.7614%" y="399.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (45 samples, 0.99%)</title><rect x="98.5114%" y="373" width="0.9851%" height="15" fill="rgb(233,99,99)" fg:x="4500" fg:w="45"/><text x="98.7614%" y="383.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (45 samples, 0.99%)</title><rect x="98.5114%" y="357" width="0.9851%" height="15" fill="rgb(205,58,58)" fg:x="4500" fg:w="45"/><text x="98.7614%" y="367.50"></text></g><g><title>Builtins_LoadIC (20 samples, 0.44%)</title><rect x="99.0587%" y="341" width="0.4378%" height="15" fill="rgb(202,54,54)" fg:x="4525" fg:w="20"/><text x="99.3087%" y="351.50"></text></g><g><title>Builtins_CallApiCallback (9 samples, 0.20%)</title><rect x="99.4965%" y="325" width="0.1970%" height="15" fill="rgb(254,128,128)" fg:x="4545" fg:w="9"/><text x="99.7465%" y="335.50"></text></g><g><title>Builtins_Call_ReceiverIsNullOrUndefined (1 samples, 0.02%)</title><rect x="99.6935%" y="325" width="0.0219%" height="15" fill="rgb(229,92,92)" fg:x="4554" fg:w="1"/><text x="99.9435%" y="335.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.02%)</title><rect x="99.7154%" y="277" width="0.0219%" height="15" fill="rgb(216,73,73)" fg:x="4555" fg:w="1"/><text x="99.9654%" y="287.50"></text></g><g><title>v8::internal::Builtin_HandleApiCall (1 samples, 0.02%)</title><rect x="99.7154%" y="261" width="0.0219%" height="15" fill="rgb(205,205,60)" fg:x="4555" fg:w="1"/><text x="99.9654%" y="271.50"></text></g><g><title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (1 samples, 0.02%)</title><rect x="99.7154%" y="245" width="0.0219%" height="15" fill="rgb(198,198,58)" fg:x="4555" fg:w="1"/><text x="99.9654%" y="255.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="99.7154%" y="229" width="0.0219%" height="15" fill="rgb(199,199,58)" fg:x="4555" fg:w="1"/><text x="99.9654%" y="239.50"></text></g><g><title>v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}} (1 samples, 0.02%)</title><rect x="99.7154%" y="213" width="0.0219%" height="15" fill="rgb(199,199,59)" fg:x="4555" fg:w="1"/><text x="99.9654%" y="223.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.02%)</title><rect x="99.7154%" y="197" width="0.0219%" height="15" fill="rgb(221,221,66)" fg:x="4555" fg:w="1"/><text x="99.9654%" y="207.50"></text></g><g><title>runjs::op_encoding_encode_into::v8_func (1 samples, 0.02%)</title><rect x="99.7154%" y="181" width="0.0219%" height="15" fill="rgb(227,227,68)" fg:x="4555" fg:w="1"/><text x="99.9654%" y="191.50"></text></g><g><title>runjs::op_encoding_encode_into::call (1 samples, 0.02%)</title><rect x="99.7154%" y="165" width="0.0219%" height="15" fill="rgb(209,209,62)" fg:x="4555" fg:w="1"/><text x="99.9654%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="99.7154%" y="149" width="0.0219%" height="15" fill="rgb(177,177,51)" fg:x="4555" fg:w="1"/><text x="99.9654%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="99.7154%" y="133" width="0.0219%" height="15" fill="rgb(195,195,57)" fg:x="4555" fg:w="1"/><text x="99.9654%" y="143.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (2 samples, 0.04%)</title><rect x="99.7154%" y="325" width="0.0438%" height="15" fill="rgb(223,84,84)" fg:x="4555" fg:w="2"/><text x="99.9654%" y="335.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (2 samples, 0.04%)</title><rect x="99.7154%" y="309" width="0.0438%" height="15" fill="rgb(223,84,84)" fg:x="4555" fg:w="2"/><text x="99.9654%" y="319.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (2 samples, 0.04%)</title><rect x="99.7154%" y="293" width="0.0438%" height="15" fill="rgb(240,108,108)" fg:x="4555" fg:w="2"/><text x="99.9654%" y="303.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="99.7373%" y="277" width="0.0219%" height="15" fill="rgb(209,63,63)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="287.50"></text></g><g><title>v8::internal::Runtime_CompileOptimized (1 samples, 0.02%)</title><rect x="99.7373%" y="261" width="0.0219%" height="15" fill="rgb(218,218,65)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="271.50"></text></g><g><title>v8::internal::Compiler::CompileOptimized (1 samples, 0.02%)</title><rect x="99.7373%" y="245" width="0.0219%" height="15" fill="rgb(217,217,65)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="255.50"></text></g><g><title>v8::internal::(anonymous namespace)::GetOrCompileOptimized (1 samples, 0.02%)</title><rect x="99.7373%" y="229" width="0.0219%" height="15" fill="rgb(208,208,62)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="239.50"></text></g><g><title>v8::internal::(anonymous namespace)::PrepareJobWithHandleScope (1 samples, 0.02%)</title><rect x="99.7373%" y="213" width="0.0219%" height="15" fill="rgb(223,223,67)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="223.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (1 samples, 0.02%)</title><rect x="99.7373%" y="197" width="0.0219%" height="15" fill="rgb(186,186,54)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="207.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::InitializeHeapBroker (1 samples, 0.02%)</title><rect x="99.7373%" y="181" width="0.0219%" height="15" fill="rgb(180,180,52)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="191.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::InitializeAndStartSerializing (1 samples, 0.02%)</title><rect x="99.7373%" y="165" width="0.0219%" height="15" fill="rgb(177,177,50)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="175.50"></text></g><g><title>v8::internal::compiler::RefsMap::RefsMap (1 samples, 0.02%)</title><rect x="99.7373%" y="149" width="0.0219%" height="15" fill="rgb(216,216,64)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="159.50"></text></g><g><title>page_fault (1 samples, 0.02%)</title><rect x="99.7373%" y="133" width="0.0219%" height="15" fill="rgb(241,109,109)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="143.50"></text></g><g><title>do_page_fault (1 samples, 0.02%)</title><rect x="99.7373%" y="117" width="0.0219%" height="15" fill="rgb(217,74,74)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="127.50"></text></g><g><title>__do_page_fault (1 samples, 0.02%)</title><rect x="99.7373%" y="101" width="0.0219%" height="15" fill="rgb(241,110,110)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="111.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="99.7373%" y="85" width="0.0219%" height="15" fill="rgb(221,80,80)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="95.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="99.7373%" y="69" width="0.0219%" height="15" fill="rgb(249,122,122)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="79.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="99.7373%" y="53" width="0.0219%" height="15" fill="rgb(210,65,65)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="63.50"></text></g><g><title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="99.7373%" y="37" width="0.0219%" height="15" fill="rgb(203,54,54)" fg:x="4556" fg:w="1"/><text x="99.9873%" y="47.50"></text></g><g><title>deno_core::runtime::JsRuntime::mod_evaluate (61 samples, 1.34%)</title><rect x="98.5114%" y="533" width="1.3354%" height="15" fill="rgb(222,222,67)" fg:x="4500" fg:w="61"/><text x="98.7614%" y="543.50"></text></g><g><title>v8::Module::Evaluate (61 samples, 1.34%)</title><rect x="98.5114%" y="517" width="1.3354%" height="15" fill="rgb(196,196,57)" fg:x="4500" fg:w="61"/><text x="98.7614%" y="527.50"></text></g><g><title>v8::internal::SourceTextModule::Evaluate (16 samples, 0.35%)</title><rect x="99.4965%" y="501" width="0.3503%" height="15" fill="rgb(218,218,65)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="511.50"></text></g><g><title>v8::internal::SourceTextModule::InnerModuleEvaluation (16 samples, 0.35%)</title><rect x="99.4965%" y="485" width="0.3503%" height="15" fill="rgb(209,209,62)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="495.50"></text></g><g><title>v8::internal::SourceTextModule::ExecuteModule (16 samples, 0.35%)</title><rect x="99.4965%" y="469" width="0.3503%" height="15" fill="rgb(190,190,55)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="479.50"></text></g><g><title>v8::internal::Execution::TryCall (16 samples, 0.35%)</title><rect x="99.4965%" y="453" width="0.3503%" height="15" fill="rgb(201,201,59)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="463.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (16 samples, 0.35%)</title><rect x="99.4965%" y="437" width="0.3503%" height="15" fill="rgb(203,203,60)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="447.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (16 samples, 0.35%)</title><rect x="99.4965%" y="421" width="0.3503%" height="15" fill="rgb(181,181,52)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="431.50"></text></g><g><title>Builtins_JSEntry (16 samples, 0.35%)</title><rect x="99.4965%" y="405" width="0.3503%" height="15" fill="rgb(222,82,82)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="415.50"></text></g><g><title>Builtins_JSEntryTrampoline (16 samples, 0.35%)</title><rect x="99.4965%" y="389" width="0.3503%" height="15" fill="rgb(250,122,122)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="399.50"></text></g><g><title>Builtins_GeneratorPrototypeNext (16 samples, 0.35%)</title><rect x="99.4965%" y="373" width="0.3503%" height="15" fill="rgb(216,74,74)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="383.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (16 samples, 0.35%)</title><rect x="99.4965%" y="357" width="0.3503%" height="15" fill="rgb(234,100,100)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="367.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (16 samples, 0.35%)</title><rect x="99.4965%" y="341" width="0.3503%" height="15" fill="rgb(227,90,90)" fg:x="4545" fg:w="16"/><text x="99.7465%" y="351.50"></text></g><g><title>Builtins_LoadIC (4 samples, 0.09%)</title><rect x="99.7592%" y="325" width="0.0876%" height="15" fill="rgb(201,51,51)" fg:x="4557" fg:w="4"/><text x="100.0092%" y="335.50"></text></g><g><title>deno_core::bindings::initialize_context (1 samples, 0.02%)</title><rect x="99.8468%" y="517" width="0.0219%" height="15" fill="rgb(213,213,63)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="527.50"></text></g><g><title>v8::context::&lt;impl v8::data::Context&gt;::new (1 samples, 0.02%)</title><rect x="99.8468%" y="501" width="0.0219%" height="15" fill="rgb(192,192,56)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="511.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (1 samples, 0.02%)</title><rect x="99.8468%" y="485" width="0.0219%" height="15" fill="rgb(203,203,60)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="495.50"></text></g><g><title>v8::context::_&lt;impl v8::data::Context&gt;::new::_{{closure}} (1 samples, 0.02%)</title><rect x="99.8468%" y="469" width="0.0219%" height="15" fill="rgb(195,195,57)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="479.50"></text></g><g><title>v8__Context__New (1 samples, 0.02%)</title><rect x="99.8468%" y="453" width="0.0219%" height="15" fill="rgb(200,51,51)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="463.50"></text></g><g><title>v8::Context::New (1 samples, 0.02%)</title><rect x="99.8468%" y="437" width="0.0219%" height="15" fill="rgb(212,212,63)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="447.50"></text></g><g><title>v8::NewContext (1 samples, 0.02%)</title><rect x="99.8468%" y="421" width="0.0219%" height="15" fill="rgb(181,181,52)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="431.50"></text></g><g><title>v8::internal::Bootstrapper::CreateEnvironment (1 samples, 0.02%)</title><rect x="99.8468%" y="405" width="0.0219%" height="15" fill="rgb(197,197,58)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="415.50"></text></g><g><title>v8::internal::Genesis::InstallSpecialObjects (1 samples, 0.02%)</title><rect x="99.8468%" y="389" width="0.0219%" height="15" fill="rgb(202,202,59)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="399.50"></text></g><g><title>v8::internal::WasmJs::Install (1 samples, 0.02%)</title><rect x="99.8468%" y="373" width="0.0219%" height="15" fill="rgb(175,175,50)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="383.50"></text></g><g><title>v8::internal::InstallFunc (1 samples, 0.02%)</title><rect x="99.8468%" y="357" width="0.0219%" height="15" fill="rgb(224,224,68)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="367.50"></text></g><g><title>v8::internal::JSObject::AddProperty (1 samples, 0.02%)</title><rect x="99.8468%" y="341" width="0.0219%" height="15" fill="rgb(225,225,68)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="351.50"></text></g><g><title>v8::internal::StringTable::LookupString (1 samples, 0.02%)</title><rect x="99.8468%" y="325" width="0.0219%" height="15" fill="rgb(195,195,57)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="335.50"></text></g><g><title>v8::internal::String::ComputeAndSetRawHash (1 samples, 0.02%)</title><rect x="99.8468%" y="309" width="0.0219%" height="15" fill="rgb(214,214,64)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="319.50"></text></g><g><title>v8::internal::String::ComputeAndSetRawHash (1 samples, 0.02%)</title><rect x="99.8468%" y="293" width="0.0219%" height="15" fill="rgb(219,219,66)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="303.50"></text></g><g><title>v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (1 samples, 0.02%)</title><rect x="99.8468%" y="277" width="0.0219%" height="15" fill="rgb(189,189,55)" fg:x="4561" fg:w="1"/><text x="100.0968%" y="287.50"></text></g><g><title>v8::internal::ReadOnlyHeap::SetUp (1 samples, 0.02%)</title><rect x="99.8687%" y="421" width="0.0219%" height="15" fill="rgb(193,193,56)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="431.50"></text></g><g><title>v8::internal::ReadOnlyDeserializer::DeserializeIntoIsolate (1 samples, 0.02%)</title><rect x="99.8687%" y="405" width="0.0219%" height="15" fill="rgb(200,200,59)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="415.50"></text></g><g><title>v8::internal::Heap::InitializeHashSeed (1 samples, 0.02%)</title><rect x="99.8687%" y="389" width="0.0219%" height="15" fill="rgb(222,222,67)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="399.50"></text></g><g><title>v8::internal::Isolate::random_number_generator (1 samples, 0.02%)</title><rect x="99.8687%" y="373" width="0.0219%" height="15" fill="rgb(211,211,63)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="383.50"></text></g><g><title>v8::base::RandomNumberGenerator::RandomNumberGenerator (1 samples, 0.02%)</title><rect x="99.8687%" y="357" width="0.0219%" height="15" fill="rgb(202,202,59)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="367.50"></text></g><g><title>__GI__IO_fread (1 samples, 0.02%)</title><rect x="99.8687%" y="341" width="0.0219%" height="15" fill="rgb(234,100,100)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="351.50"></text></g><g><title>__GI__IO_file_xsgetn (1 samples, 0.02%)</title><rect x="99.8687%" y="325" width="0.0219%" height="15" fill="rgb(226,89,89)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="335.50"></text></g><g><title>_IO_new_file_underflow (1 samples, 0.02%)</title><rect x="99.8687%" y="309" width="0.0219%" height="15" fill="rgb(223,83,83)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="319.50"></text></g><g><title>__GI___libc_read (1 samples, 0.02%)</title><rect x="99.8687%" y="293" width="0.0219%" height="15" fill="rgb(242,112,112)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.8687%" y="277" width="0.0219%" height="15" fill="rgb(217,75,75)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="287.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.8687%" y="261" width="0.0219%" height="15" fill="rgb(216,73,73)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="271.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="99.8687%" y="245" width="0.0219%" height="15" fill="rgb(222,82,82)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="255.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="99.8687%" y="229" width="0.0219%" height="15" fill="rgb(235,102,102)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="239.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="99.8687%" y="213" width="0.0219%" height="15" fill="rgb(213,69,69)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="223.50"></text></g><g><title>__vfs_read (1 samples, 0.02%)</title><rect x="99.8687%" y="197" width="0.0219%" height="15" fill="rgb(243,112,112)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="207.50"></text></g><g><title>urandom_read (1 samples, 0.02%)</title><rect x="99.8687%" y="181" width="0.0219%" height="15" fill="rgb(240,108,108)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="191.50"></text></g><g><title>extract_crng (1 samples, 0.02%)</title><rect x="99.8687%" y="165" width="0.0219%" height="15" fill="rgb(217,75,75)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="175.50"></text></g><g><title>_extract_crng (1 samples, 0.02%)</title><rect x="99.8687%" y="149" width="0.0219%" height="15" fill="rgb(248,120,120)" fg:x="4562" fg:w="1"/><text x="100.1187%" y="159.50"></text></g><g><title>tokio::runtime::Runtime::block_on (66 samples, 1.44%)</title><rect x="98.4676%" y="821" width="1.4448%" height="15" fill="rgb(222,222,67)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="831.50"></text></g><g><title>tokio::runtime::basic_scheduler::BasicScheduler::block_on (66 samples, 1.44%)</title><rect x="98.4676%" y="805" width="1.4448%" height="15" fill="rgb(198,198,58)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="815.50"></text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::block_on (66 samples, 1.44%)</title><rect x="98.4676%" y="789" width="1.4448%" height="15" fill="rgb(204,204,60)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="799.50"></text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::enter (66 samples, 1.44%)</title><rect x="98.4676%" y="773" width="1.4448%" height="15" fill="rgb(219,219,66)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="783.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (66 samples, 1.44%)</title><rect x="98.4676%" y="757" width="1.4448%" height="15" fill="rgb(207,207,61)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="767.50"></text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::enter::_{{closure}} (66 samples, 1.44%)</title><rect x="98.4676%" y="741" width="1.4448%" height="15" fill="rgb(226,226,68)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="751.50"></text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::block_on::_{{closure}} (66 samples, 1.44%)</title><rect x="98.4676%" y="725" width="1.4448%" height="15" fill="rgb(202,202,60)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="735.50"></text></g><g><title>tokio::runtime::basic_scheduler::Context::enter (66 samples, 1.44%)</title><rect x="98.4676%" y="709" width="1.4448%" height="15" fill="rgb(229,229,69)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="719.50"></text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::block_on::_{{closure}}::_{{closure}} (66 samples, 1.44%)</title><rect x="98.4676%" y="693" width="1.4448%" height="15" fill="rgb(205,205,60)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="703.50"></text></g><g><title>tokio::coop::budget (66 samples, 1.44%)</title><rect x="98.4676%" y="677" width="1.4448%" height="15" fill="rgb(190,190,55)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="687.50"></text></g><g><title>tokio::coop::with_budget (66 samples, 1.44%)</title><rect x="98.4676%" y="661" width="1.4448%" height="15" fill="rgb(198,198,58)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (66 samples, 1.44%)</title><rect x="98.4676%" y="645" width="1.4448%" height="15" fill="rgb(226,226,68)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (66 samples, 1.44%)</title><rect x="98.4676%" y="629" width="1.4448%" height="15" fill="rgb(215,215,64)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="639.50"></text></g><g><title>tokio::coop::with_budget::_{{closure}} (66 samples, 1.44%)</title><rect x="98.4676%" y="613" width="1.4448%" height="15" fill="rgb(182,182,52)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="623.50"></text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::block_on::_{{closure}}::_{{closure}}::_{{closure}} (66 samples, 1.44%)</title><rect x="98.4676%" y="597" width="1.4448%" height="15" fill="rgb(216,216,65)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (66 samples, 1.44%)</title><rect x="98.4676%" y="581" width="1.4448%" height="15" fill="rgb(183,183,53)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 1.44%)</title><rect x="98.4676%" y="565" width="1.4448%" height="15" fill="rgb(177,177,50)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="575.50"></text></g><g><title>runjs::run_js::_{{closure}} (66 samples, 1.44%)</title><rect x="98.4676%" y="549" width="1.4448%" height="15" fill="rgb(227,227,69)" fg:x="4498" fg:w="66"/><text x="98.7176%" y="559.50"></text></g><g><title>deno_core::runtime::JsRuntime::new (3 samples, 0.07%)</title><rect x="99.8468%" y="533" width="0.0657%" height="15" fill="rgb(203,203,60)" fg:x="4561" fg:w="3"/><text x="100.0968%" y="543.50"></text></g><g><title>v8::isolate::Isolate::new (2 samples, 0.04%)</title><rect x="99.8687%" y="517" width="0.0438%" height="15" fill="rgb(198,198,58)" fg:x="4562" fg:w="2"/><text x="100.1187%" y="527.50"></text></g><g><title>v8::Isolate::New (2 samples, 0.04%)</title><rect x="99.8687%" y="501" width="0.0438%" height="15" fill="rgb(189,189,55)" fg:x="4562" fg:w="2"/><text x="100.1187%" y="511.50"></text></g><g><title>v8::Isolate::Initialize (2 samples, 0.04%)</title><rect x="99.8687%" y="485" width="0.0438%" height="15" fill="rgb(197,197,58)" fg:x="4562" fg:w="2"/><text x="100.1187%" y="495.50"></text></g><g><title>v8::internal::Snapshot::Initialize (2 samples, 0.04%)</title><rect x="99.8687%" y="469" width="0.0438%" height="15" fill="rgb(194,194,57)" fg:x="4562" fg:w="2"/><text x="100.1187%" y="479.50"></text></g><g><title>v8::internal::Isolate::InitWithSnapshot (2 samples, 0.04%)</title><rect x="99.8687%" y="453" width="0.0438%" height="15" fill="rgb(203,203,60)" fg:x="4562" fg:w="2"/><text x="100.1187%" y="463.50"></text></g><g><title>v8::internal::Isolate::Init (2 samples, 0.04%)</title><rect x="99.8687%" y="437" width="0.0438%" height="15" fill="rgb(186,186,54)" fg:x="4562" fg:w="2"/><text x="100.1187%" y="447.50"></text></g><g><title>v8::internal::StartupDeserializer::DeserializeIntoIsolate (1 samples, 0.02%)</title><rect x="99.8905%" y="421" width="0.0219%" height="15" fill="rgb(226,226,68)" fg:x="4563" fg:w="1"/><text x="100.1405%" y="431.50"></text></g><g><title>v8::internal::Heap::IterateRoots (1 samples, 0.02%)</title><rect x="99.8905%" y="405" width="0.0219%" height="15" fill="rgb(181,181,52)" fg:x="4563" fg:w="1"/><text x="100.1405%" y="415.50"></text></g><g><title>v8::internal::Heap::IterateBuiltins (1 samples, 0.02%)</title><rect x="99.8905%" y="389" width="0.0219%" height="15" fill="rgb(186,186,54)" fg:x="4563" fg:w="1"/><text x="100.1405%" y="399.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::VisitRootPointers (1 samples, 0.02%)</title><rect x="99.8905%" y="373" width="0.0219%" height="15" fill="rgb(213,213,64)" fg:x="4563" fg:w="1"/><text x="100.1405%" y="383.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (1 samples, 0.02%)</title><rect x="99.8905%" y="357" width="0.0219%" height="15" fill="rgb(191,191,55)" fg:x="4563" fg:w="1"/><text x="100.1405%" y="367.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="99.8905%" y="341" width="0.0219%" height="15" fill="rgb(218,218,65)" fg:x="4563" fg:w="1"/><text x="100.1405%" y="351.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="99.8905%" y="325" width="0.0219%" height="15" fill="rgb(204,204,60)" fg:x="4563" fg:w="1"/><text x="100.1405%" y="335.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="99.8905%" y="309" width="0.0219%" height="15" fill="rgb(223,223,67)" fg:x="4563" fg:w="1"/><text x="100.1405%" y="319.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="99.8905%" y="293" width="0.0219%" height="15" fill="rgb(208,208,62)" fg:x="4563" fg:w="1"/><text x="100.1405%" y="303.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadData (1 samples, 0.02%)</title><rect x="99.8905%" y="277" width="0.0219%" height="15" fill="rgb(212,212,63)" fg:x="4563" fg:w="1"/><text x="100.1405%" y="287.50"></text></g><g><title>__libc_start_main (67 samples, 1.47%)</title><rect x="98.4676%" y="901" width="1.4667%" height="15" fill="rgb(250,122,122)" fg:x="4498" fg:w="67"/><text x="98.7176%" y="911.50"></text></g><g><title>main (67 samples, 1.47%)</title><rect x="98.4676%" y="885" width="1.4667%" height="15" fill="rgb(227,90,90)" fg:x="4498" fg:w="67"/><text x="98.7176%" y="895.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (67 samples, 1.47%)</title><rect x="98.4676%" y="869" width="1.4667%" height="15" fill="rgb(177,177,50)" fg:x="4498" fg:w="67"/><text x="98.7176%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (67 samples, 1.47%)</title><rect x="98.4676%" y="853" width="1.4667%" height="15" fill="rgb(192,192,56)" fg:x="4498" fg:w="67"/><text x="98.7176%" y="863.50"></text></g><g><title>runjs::main (67 samples, 1.47%)</title><rect x="98.4676%" y="837" width="1.4667%" height="15" fill="rgb(213,213,63)" fg:x="4498" fg:w="67"/><text x="98.7176%" y="847.50"></text></g><g><title>tokio::runtime::builder::Builder::build (1 samples, 0.02%)</title><rect x="99.9124%" y="821" width="0.0219%" height="15" fill="rgb(184,184,53)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="831.50"></text></g><g><title>tokio::runtime::builder::Builder::build_basic_runtime (1 samples, 0.02%)</title><rect x="99.9124%" y="805" width="0.0219%" height="15" fill="rgb(221,221,66)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="815.50"></text></g><g><title>tokio::runtime::driver::Driver::new (1 samples, 0.02%)</title><rect x="99.9124%" y="789" width="0.0219%" height="15" fill="rgb(179,179,51)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="799.50"></text></g><g><title>tokio::runtime::driver::create_io_stack (1 samples, 0.02%)</title><rect x="99.9124%" y="773" width="0.0219%" height="15" fill="rgb(195,195,57)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="783.50"></text></g><g><title>tokio::runtime::driver::create_signal_driver (1 samples, 0.02%)</title><rect x="99.9124%" y="757" width="0.0219%" height="15" fill="rgb(190,190,55)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="767.50"></text></g><g><title>tokio::signal::unix::driver::Driver::new (1 samples, 0.02%)</title><rect x="99.9124%" y="741" width="0.0219%" height="15" fill="rgb(188,188,54)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="751.50"></text></g><g><title>tokio::signal::registry::globals (1 samples, 0.02%)</title><rect x="99.9124%" y="725" width="0.0219%" height="15" fill="rgb(198,198,58)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="735.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="99.9124%" y="709" width="0.0219%" height="15" fill="rgb(185,185,53)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="719.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.02%)</title><rect x="99.9124%" y="693" width="0.0219%" height="15" fill="rgb(223,223,67)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.02%)</title><rect x="99.9124%" y="677" width="0.0219%" height="15" fill="rgb(183,183,52)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="99.9124%" y="661" width="0.0219%" height="15" fill="rgb(182,182,52)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="671.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="99.9124%" y="645" width="0.0219%" height="15" fill="rgb(222,222,67)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="655.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="99.9124%" y="629" width="0.0219%" height="15" fill="rgb(180,180,51)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="99.9124%" y="613" width="0.0219%" height="15" fill="rgb(175,175,50)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="623.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="99.9124%" y="597" width="0.0219%" height="15" fill="rgb(180,180,52)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (1 samples, 0.02%)</title><rect x="99.9124%" y="581" width="0.0219%" height="15" fill="rgb(196,196,57)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="591.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (1 samples, 0.02%)</title><rect x="99.9124%" y="565" width="0.0219%" height="15" fill="rgb(205,205,61)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="99.9124%" y="549" width="0.0219%" height="15" fill="rgb(209,209,62)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="99.9124%" y="533" width="0.0219%" height="15" fill="rgb(203,203,60)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="543.50"></text></g><g><title>tokio::signal::registry::globals::GLOBALS::_{{closure}} (1 samples, 0.02%)</title><rect x="99.9124%" y="517" width="0.0219%" height="15" fill="rgb(196,196,57)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="527.50"></text></g><g><title>tokio::signal::unix::&lt;impl tokio::signal::registry::Init for alloc::vec::Vec&lt;tokio::signal::unix::SignalInfo&gt;&gt;::init (1 samples, 0.02%)</title><rect x="99.9124%" y="501" width="0.0219%" height="15" fill="rgb(214,214,64)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="99.9124%" y="485" width="0.0219%" height="15" fill="rgb(190,190,55)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="99.9124%" y="469" width="0.0219%" height="15" fill="rgb(198,198,58)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="99.9124%" y="453" width="0.0219%" height="15" fill="rgb(205,205,60)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="99.9124%" y="437" width="0.0219%" height="15" fill="rgb(216,216,65)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="99.9124%" y="421" width="0.0219%" height="15" fill="rgb(176,176,50)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="99.9124%" y="405" width="0.0219%" height="15" fill="rgb(186,186,54)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="99.9124%" y="389" width="0.0219%" height="15" fill="rgb(226,226,68)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (1 samples, 0.02%)</title><rect x="99.9124%" y="373" width="0.0219%" height="15" fill="rgb(200,200,59)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (1 samples, 0.02%)</title><rect x="99.9124%" y="357" width="0.0219%" height="15" fill="rgb(213,213,63)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="367.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (1 samples, 0.02%)</title><rect x="99.9124%" y="341" width="0.0219%" height="15" fill="rgb(224,224,68)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="351.50"></text></g><g><title>core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::_{{closure}} (1 samples, 0.02%)</title><rect x="99.9124%" y="325" width="0.0219%" height="15" fill="rgb(184,184,53)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.02%)</title><rect x="99.9124%" y="309" width="0.0219%" height="15" fill="rgb(188,188,54)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="319.50"></text></g><g><title>tokio::signal::unix::_&lt;impl tokio::signal::registry::Init for alloc::vec::Vec&lt;tokio::signal::unix::SignalInfo&gt;&gt;::init::_{{closure}} (1 samples, 0.02%)</title><rect x="99.9124%" y="293" width="0.0219%" height="15" fill="rgb(223,223,67)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="303.50"></text></g><g><title>&lt;tokio::signal::unix::SignalInfo as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="99.9124%" y="277" width="0.0219%" height="15" fill="rgb(199,199,58)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="287.50"></text></g><g><title>&lt;tokio::signal::registry::EventInfo as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="99.9124%" y="261" width="0.0219%" height="15" fill="rgb(225,225,68)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt; (1 samples, 0.02%)</title><rect x="99.9124%" y="245" width="0.0219%" height="15" fill="rgb(200,200,59)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="255.50"></text></g><g><title>&lt;tokio::sync::watch::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.9124%" y="229" width="0.0219%" height="15" fill="rgb(192,192,56)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="99.9124%" y="213" width="0.0219%" height="15" fill="rgb(227,227,68)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="99.9124%" y="197" width="0.0219%" height="15" fill="rgb(214,214,64)" fg:x="4564" fg:w="1"/><text x="100.1624%" y="207.50"></text></g><g><title>_start (68 samples, 1.49%)</title><rect x="98.4676%" y="917" width="1.4886%" height="15" fill="rgb(221,81,81)" fg:x="4498" fg:w="68"/><text x="98.7176%" y="927.50"></text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="99.9343%" y="901" width="0.0219%" height="15" fill="rgb(231,95,95)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="911.50"></text></g><g><title>_dl_start_final (1 samples, 0.02%)</title><rect x="99.9343%" y="885" width="0.0219%" height="15" fill="rgb(247,118,118)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="895.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="99.9343%" y="869" width="0.0219%" height="15" fill="rgb(234,99,99)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="879.50"></text></g><g><title>dl_main (1 samples, 0.02%)</title><rect x="99.9343%" y="853" width="0.0219%" height="15" fill="rgb(226,88,88)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="863.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="99.9343%" y="837" width="0.0219%" height="15" fill="rgb(229,93,93)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="847.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="99.9343%" y="821" width="0.0219%" height="15" fill="rgb(211,66,66)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="831.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="99.9343%" y="805" width="0.0219%" height="15" fill="rgb(244,114,114)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="815.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="99.9343%" y="789" width="0.0219%" height="15" fill="rgb(200,50,50)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="799.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.02%)</title><rect x="99.9343%" y="773" width="0.0219%" height="15" fill="rgb(227,90,90)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="783.50"></text></g><g><title>_dl_map_segments (1 samples, 0.02%)</title><rect x="99.9343%" y="757" width="0.0219%" height="15" fill="rgb(222,83,83)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="767.50"></text></g><g><title>__mmap64 (1 samples, 0.02%)</title><rect x="99.9343%" y="741" width="0.0219%" height="15" fill="rgb(211,66,66)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.9343%" y="725" width="0.0219%" height="15" fill="rgb(227,89,89)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="735.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.9343%" y="709" width="0.0219%" height="15" fill="rgb(230,94,94)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="719.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="99.9343%" y="693" width="0.0219%" height="15" fill="rgb(238,106,106)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="703.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.9343%" y="677" width="0.0219%" height="15" fill="rgb(203,54,54)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="687.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.9343%" y="661" width="0.0219%" height="15" fill="rgb(252,127,127)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="671.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="99.9343%" y="645" width="0.0219%" height="15" fill="rgb(249,122,122)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="655.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="99.9343%" y="629" width="0.0219%" height="15" fill="rgb(242,111,111)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="639.50"></text></g><g><title>vma_link (1 samples, 0.02%)</title><rect x="99.9343%" y="613" width="0.0219%" height="15" fill="rgb(212,68,68)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="623.50"></text></g><g><title>__vma_link_file (1 samples, 0.02%)</title><rect x="99.9343%" y="597" width="0.0219%" height="15" fill="rgb(233,98,98)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="607.50"></text></g><g><title>vma_interval_tree_insert (1 samples, 0.02%)</title><rect x="99.9343%" y="581" width="0.0219%" height="15" fill="rgb(205,57,57)" fg:x="4565" fg:w="1"/><text x="100.1843%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.9562%" y="917" width="0.0219%" height="15" fill="rgb(214,71,71)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="927.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.9562%" y="901" width="0.0219%" height="15" fill="rgb(254,128,128)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.9562%" y="885" width="0.0219%" height="15" fill="rgb(252,126,126)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="895.50"></text></g><g><title>__do_execve_file.isra.39 (1 samples, 0.02%)</title><rect x="99.9562%" y="869" width="0.0219%" height="15" fill="rgb(241,110,110)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="879.50"></text></g><g><title>search_binary_handler (1 samples, 0.02%)</title><rect x="99.9562%" y="853" width="0.0219%" height="15" fill="rgb(219,78,78)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="863.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.9562%" y="837" width="0.0219%" height="15" fill="rgb(246,118,118)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="847.50"></text></g><g><title>setup_arg_pages (1 samples, 0.02%)</title><rect x="99.9562%" y="821" width="0.0219%" height="15" fill="rgb(245,116,116)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="831.50"></text></g><g><title>arch_align_stack (1 samples, 0.02%)</title><rect x="99.9562%" y="805" width="0.0219%" height="15" fill="rgb(229,93,93)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="815.50"></text></g><g><title>get_random_u32 (1 samples, 0.02%)</title><rect x="99.9562%" y="789" width="0.0219%" height="15" fill="rgb(207,61,61)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="799.50"></text></g><g><title>extract_crng (1 samples, 0.02%)</title><rect x="99.9562%" y="773" width="0.0219%" height="15" fill="rgb(250,122,122)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="783.50"></text></g><g><title>_extract_crng (1 samples, 0.02%)</title><rect x="99.9562%" y="757" width="0.0219%" height="15" fill="rgb(202,53,53)" fg:x="4566" fg:w="1"/><text x="100.2062%" y="767.50"></text></g><g><title>all (4,568 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(223,84,84)" fg:x="0" fg:w="4568"/><text x="0.2500%" y="959.50"></text></g><g><title>runjs (4,495 samples, 98.40%)</title><rect x="1.5981%" y="933" width="98.4019%" height="15" fill="rgb(222,83,83)" fg:x="73" fg:w="4495"/><text x="1.8481%" y="943.50">runjs</text></g><g><title>ret_from_fork (1 samples, 0.02%)</title><rect x="99.9781%" y="917" width="0.0219%" height="15" fill="rgb(226,87,87)" fg:x="4567" fg:w="1"/><text x="100.2281%" y="927.50"></text></g><g><title>schedule_tail (1 samples, 0.02%)</title><rect x="99.9781%" y="901" width="0.0219%" height="15" fill="rgb(245,116,116)" fg:x="4567" fg:w="1"/><text x="100.2281%" y="911.50"></text></g><g><title>finish_task_switch (1 samples, 0.02%)</title><rect x="99.9781%" y="885" width="0.0219%" height="15" fill="rgb(241,109,109)" fg:x="4567" fg:w="1"/><text x="100.2281%" y="895.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.02%)</title><rect x="99.9781%" y="869" width="0.0219%" height="15" fill="rgb(214,71,71)" fg:x="4567" fg:w="1"/><text x="100.2281%" y="879.50"></text></g><g><title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="99.9781%" y="853" width="0.0219%" height="15" fill="rgb(227,89,89)" fg:x="4567" fg:w="1"/><text x="100.2281%" y="863.50"></text></g><g><title>intel_tfa_pmu_enable_all (1 samples, 0.02%)</title><rect x="99.9781%" y="837" width="0.0219%" height="15" fill="rgb(228,91,91)" fg:x="4567" fg:w="1"/><text x="100.2281%" y="847.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (1 samples, 0.02%)</title><rect x="99.9781%" y="821" width="0.0219%" height="15" fill="rgb(228,91,91)" fg:x="4567" fg:w="1"/><text x="100.2281%" y="831.50"></text></g><g><title>native_write_msr (1 samples, 0.02%)</title><rect x="99.9781%" y="805" width="0.0219%" height="15" fill="rgb(242,111,111)" fg:x="4567" fg:w="1"/><text x="100.2281%" y="815.50"></text></g></svg></svg>