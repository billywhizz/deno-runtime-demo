<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="853.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="5052"><g><title>[anon] (1 samples, 0.02%)</title><rect x="0.0000%" y="789" width="0.0198%" height="15" fill="rgb(200,50,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::VisitPushContext (1 samples, 0.02%)</title><rect x="0.0000%" y="773" width="0.0198%" height="15" fill="rgb(175,175,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GraphBuilderPhase&gt; (1 samples, 0.02%)</title><rect x="0.0198%" y="645" width="0.0198%" height="15" fill="rgb(221,221,66)" fg:x="1" fg:w="1"/><text x="0.2698%" y="655.50"></text></g><g><title>v8::internal::compiler::GraphBuilderPhase::Run (1 samples, 0.02%)</title><rect x="0.0198%" y="629" width="0.0198%" height="15" fill="rgb(225,225,68)" fg:x="1" fg:w="1"/><text x="0.2698%" y="639.50"></text></g><g><title>v8::internal::compiler::BuildGraphFromBytecode (1 samples, 0.02%)</title><rect x="0.0198%" y="613" width="0.0198%" height="15" fill="rgb(191,191,55)" fg:x="1" fg:w="1"/><text x="0.2698%" y="623.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (1 samples, 0.02%)</title><rect x="0.0198%" y="597" width="0.0198%" height="15" fill="rgb(205,205,61)" fg:x="1" fg:w="1"/><text x="0.2698%" y="607.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::VisitBytecodes (1 samples, 0.02%)</title><rect x="0.0198%" y="581" width="0.0198%" height="15" fill="rgb(213,213,63)" fg:x="1" fg:w="1"/><text x="0.2698%" y="591.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::VisitCallUndefinedReceiver0 (1 samples, 0.02%)</title><rect x="0.0198%" y="565" width="0.0198%" height="15" fill="rgb(180,180,52)" fg:x="1" fg:w="1"/><text x="0.2698%" y="575.50"></text></g><g><title>v8::internal::compiler::BytecodeGraphBuilder::BuildCall (1 samples, 0.02%)</title><rect x="0.0198%" y="549" width="0.0198%" height="15" fill="rgb(182,182,52)" fg:x="1" fg:w="1"/><text x="0.2698%" y="559.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::GetFeedbackForCall (1 samples, 0.02%)</title><rect x="0.0198%" y="533" width="0.0198%" height="15" fill="rgb(204,204,60)" fg:x="1" fg:w="1"/><text x="0.2698%" y="543.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::ReadFeedbackForCall (1 samples, 0.02%)</title><rect x="0.0198%" y="517" width="0.0198%" height="15" fill="rgb(229,229,69)" fg:x="1" fg:w="1"/><text x="0.2698%" y="527.50"></text></g><g><title>v8::internal::compiler::TryMakeRef&lt;v8::internal::HeapObject, void&gt; (1 samples, 0.02%)</title><rect x="0.0198%" y="501" width="0.0198%" height="15" fill="rgb(221,221,66)" fg:x="1" fg:w="1"/><text x="0.2698%" y="511.50"></text></g><g><title>v8::internal::compiler::JSHeapBroker::TryGetOrCreateData (1 samples, 0.02%)</title><rect x="0.0198%" y="485" width="0.0198%" height="15" fill="rgb(179,179,51)" fg:x="1" fg:w="1"/><text x="0.2698%" y="495.50"></text></g><g><title>v8::internal::Zone::New&lt;v8::internal::compiler::JSFunctionData, v8::internal::compiler::JSHeapBroker*, v8::internal::compiler::ObjectData**, v8::internal::Handle&lt;v8::internal::JSFunction&gt; const, v8::internal::compiler::ObjectDataKind&gt; (1 samples, 0.02%)</title><rect x="0.0198%" y="469" width="0.0198%" height="15" fill="rgb(219,219,66)" fg:x="1" fg:w="1"/><text x="0.2698%" y="479.50"></text></g><g><title>v8::internal::compiler::ObjectData::ObjectData (1 samples, 0.02%)</title><rect x="0.0198%" y="453" width="0.0198%" height="15" fill="rgb(224,224,68)" fg:x="1" fg:w="1"/><text x="0.2698%" y="463.50"></text></g><g><title>page_fault (1 samples, 0.02%)</title><rect x="0.0198%" y="437" width="0.0198%" height="15" fill="rgb(217,75,75)" fg:x="1" fg:w="1"/><text x="0.2698%" y="447.50"></text></g><g><title>do_page_fault (1 samples, 0.02%)</title><rect x="0.0198%" y="421" width="0.0198%" height="15" fill="rgb(204,57,57)" fg:x="1" fg:w="1"/><text x="0.2698%" y="431.50"></text></g><g><title>__do_page_fault (1 samples, 0.02%)</title><rect x="0.0198%" y="405" width="0.0198%" height="15" fill="rgb(207,60,60)" fg:x="1" fg:w="1"/><text x="0.2698%" y="415.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="0.0198%" y="389" width="0.0198%" height="15" fill="rgb(247,119,119)" fg:x="1" fg:w="1"/><text x="0.2698%" y="399.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="0.0198%" y="373" width="0.0198%" height="15" fill="rgb(206,59,59)" fg:x="1" fg:w="1"/><text x="0.2698%" y="383.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="0.0198%" y="357" width="0.0198%" height="15" fill="rgb(207,61,61)" fg:x="1" fg:w="1"/><text x="0.2698%" y="367.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="0.0198%" y="341" width="0.0198%" height="15" fill="rgb(243,113,113)" fg:x="1" fg:w="1"/><text x="0.2698%" y="351.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="0.0198%" y="325" width="0.0198%" height="15" fill="rgb(201,51,51)" fg:x="1" fg:w="1"/><text x="0.2698%" y="335.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::CreateGraph (2 samples, 0.04%)</title><rect x="0.0198%" y="661" width="0.0396%" height="15" fill="rgb(179,179,51)" fg:x="1" fg:w="2"/><text x="0.2698%" y="671.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (1 samples, 0.02%)</title><rect x="0.0396%" y="645" width="0.0198%" height="15" fill="rgb(206,206,61)" fg:x="2" fg:w="1"/><text x="0.2896%" y="655.50"></text></g><g><title>v8::internal::compiler::InliningPhase::Run (1 samples, 0.02%)</title><rect x="0.0396%" y="629" width="0.0198%" height="15" fill="rgb(182,182,52)" fg:x="2" fg:w="1"/><text x="0.2896%" y="639.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.02%)</title><rect x="0.0396%" y="613" width="0.0198%" height="15" fill="rgb(201,201,59)" fg:x="2" fg:w="1"/><text x="0.2896%" y="623.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.02%)</title><rect x="0.0396%" y="597" width="0.0198%" height="15" fill="rgb(213,213,63)" fg:x="2" fg:w="1"/><text x="0.2896%" y="607.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.02%)</title><rect x="0.0396%" y="581" width="0.0198%" height="15" fill="rgb(210,210,62)" fg:x="2" fg:w="1"/><text x="0.2896%" y="591.50"></text></g><g><title>v8::internal::compiler::JSContextSpecialization::Reduce (1 samples, 0.02%)</title><rect x="0.0396%" y="565" width="0.0198%" height="15" fill="rgb(183,183,53)" fg:x="2" fg:w="1"/><text x="0.2896%" y="575.50"></text></g><g><title>v8::internal::compiler::CommonNodeCache::FindHeapConstant (1 samples, 0.02%)</title><rect x="0.0396%" y="549" width="0.0198%" height="15" fill="rgb(199,199,58)" fg:x="2" fg:w="1"/><text x="0.2896%" y="559.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (3 samples, 0.06%)</title><rect x="0.0198%" y="725" width="0.0594%" height="15" fill="rgb(196,196,57)" fg:x="1" fg:w="3"/><text x="0.2698%" y="735.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (3 samples, 0.06%)</title><rect x="0.0198%" y="709" width="0.0594%" height="15" fill="rgb(218,218,65)" fg:x="1" fg:w="3"/><text x="0.2698%" y="719.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (3 samples, 0.06%)</title><rect x="0.0198%" y="693" width="0.0594%" height="15" fill="rgb(220,220,66)" fg:x="1" fg:w="3"/><text x="0.2698%" y="703.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (3 samples, 0.06%)</title><rect x="0.0198%" y="677" width="0.0594%" height="15" fill="rgb(195,195,57)" fg:x="1" fg:w="3"/><text x="0.2698%" y="687.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (1 samples, 0.02%)</title><rect x="0.0594%" y="661" width="0.0198%" height="15" fill="rgb(183,183,53)" fg:x="3" fg:w="1"/><text x="0.3094%" y="671.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::MemoryOptimizationPhase&gt; (1 samples, 0.02%)</title><rect x="0.0594%" y="645" width="0.0198%" height="15" fill="rgb(175,175,50)" fg:x="3" fg:w="1"/><text x="0.3094%" y="655.50"></text></g><g><title>v8::internal::compiler::MemoryOptimizationPhase::Run (1 samples, 0.02%)</title><rect x="0.0594%" y="629" width="0.0198%" height="15" fill="rgb(221,221,66)" fg:x="3" fg:w="1"/><text x="0.3094%" y="639.50"></text></g><g><title>v8::internal::compiler::MemoryOptimizer::Optimize (1 samples, 0.02%)</title><rect x="0.0594%" y="613" width="0.0198%" height="15" fill="rgb(215,215,64)" fg:x="3" fg:w="1"/><text x="0.3094%" y="623.50"></text></g><g><title>v8::internal::compiler::MemoryOptimizer::VisitAllocateRaw (1 samples, 0.02%)</title><rect x="0.0594%" y="597" width="0.0198%" height="15" fill="rgb(218,218,65)" fg:x="3" fg:w="1"/><text x="0.3094%" y="607.50"></text></g><g><title>v8::internal::compiler::MemoryLowering::ReduceAllocateRaw (1 samples, 0.02%)</title><rect x="0.0594%" y="581" width="0.0198%" height="15" fill="rgb(189,189,55)" fg:x="3" fg:w="1"/><text x="0.3094%" y="591.50"></text></g><g><title>v8::internal::compiler::GraphAssembler::MergeState&lt;v8::internal::compiler::Node*&gt; (1 samples, 0.02%)</title><rect x="0.0594%" y="565" width="0.0198%" height="15" fill="rgb(191,191,56)" fg:x="3" fg:w="1"/><text x="0.3094%" y="575.50"></text></g><g><title>v8::internal::compiler::Graph::NewNode (1 samples, 0.02%)</title><rect x="0.0594%" y="549" width="0.0198%" height="15" fill="rgb(197,197,58)" fg:x="3" fg:w="1"/><text x="0.3094%" y="559.50"></text></g><g><title>v8::internal::compiler::Node::NewImpl&lt;v8::internal::compiler::Node*&gt; (1 samples, 0.02%)</title><rect x="0.0594%" y="533" width="0.0198%" height="15" fill="rgb(202,202,60)" fg:x="3" fg:w="1"/><text x="0.3094%" y="543.50"></text></g><g><title>page_fault (1 samples, 0.02%)</title><rect x="0.0594%" y="517" width="0.0198%" height="15" fill="rgb(249,122,122)" fg:x="3" fg:w="1"/><text x="0.3094%" y="527.50"></text></g><g><title>do_page_fault (1 samples, 0.02%)</title><rect x="0.0594%" y="501" width="0.0198%" height="15" fill="rgb(223,83,83)" fg:x="3" fg:w="1"/><text x="0.3094%" y="511.50"></text></g><g><title>__do_page_fault (1 samples, 0.02%)</title><rect x="0.0594%" y="485" width="0.0198%" height="15" fill="rgb(233,98,98)" fg:x="3" fg:w="1"/><text x="0.3094%" y="495.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="0.0594%" y="469" width="0.0198%" height="15" fill="rgb(245,116,116)" fg:x="3" fg:w="1"/><text x="0.3094%" y="479.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="0.0594%" y="453" width="0.0198%" height="15" fill="rgb(214,71,71)" fg:x="3" fg:w="1"/><text x="0.3094%" y="463.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="0.0594%" y="437" width="0.0198%" height="15" fill="rgb(206,59,59)" fg:x="3" fg:w="1"/><text x="0.3094%" y="447.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="0.0594%" y="421" width="0.0198%" height="15" fill="rgb(208,62,62)" fg:x="3" fg:w="1"/><text x="0.3094%" y="431.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (1 samples, 0.02%)</title><rect x="0.1188%" y="677" width="0.0198%" height="15" fill="rgb(226,226,68)" fg:x="6" fg:w="1"/><text x="0.3688%" y="687.50"></text></g><g><title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt; &gt; (1 samples, 0.02%)</title><rect x="0.1386%" y="677" width="0.0198%" height="15" fill="rgb(204,204,60)" fg:x="7" fg:w="1"/><text x="0.3886%" y="687.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (1 samples, 0.02%)</title><rect x="0.1584%" y="677" width="0.0198%" height="15" fill="rgb(208,208,62)" fg:x="8" fg:w="1"/><text x="0.4084%" y="687.50"></text></g><g><title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::__1::__unordered_map_hasher&lt;v8::internal::MemoryChunk*, std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, v8::internal::BasicMemoryChunk::Hasher, std::__1::equal_to&lt;v8::internal::MemoryChunk*&gt;, true&gt;, std::__1::__unordered_map_equal&lt;v8::internal::MemoryChunk*, std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::__1::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::internal::BasicMemoryChunk::Hasher, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt; &gt; &gt;::__emplace_unique_key_args&lt;v8::internal::MemoryChunk*, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;v8::internal::MemoryChunk* const&amp;&gt;, std::__1::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="0.1584%" y="661" width="0.0198%" height="15" fill="rgb(209,209,62)" fg:x="8" fg:w="1"/><text x="0.4084%" y="671.50"></text></g><g><title>operator new (1 samples, 0.02%)</title><rect x="0.1584%" y="645" width="0.0198%" height="15" fill="rgb(228,91,91)" fg:x="8" fg:w="1"/><text x="0.4084%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.1584%" y="629" width="0.0198%" height="15" fill="rgb(235,101,101)" fg:x="8" fg:w="1"/><text x="0.4084%" y="639.50"></text></g><g><title>tcache_init (1 samples, 0.02%)</title><rect x="0.1584%" y="613" width="0.0198%" height="15" fill="rgb(219,78,78)" fg:x="8" fg:w="1"/><text x="0.4084%" y="623.50"></text></g><g><title>tcache_init (1 samples, 0.02%)</title><rect x="0.1584%" y="597" width="0.0198%" height="15" fill="rgb(202,54,54)" fg:x="8" fg:w="1"/><text x="0.4084%" y="607.50"></text></g><g><title>arena_get2 (1 samples, 0.02%)</title><rect x="0.1584%" y="581" width="0.0198%" height="15" fill="rgb(200,50,50)" fg:x="8" fg:w="1"/><text x="0.4084%" y="591.50"></text></g><g><title>arena_get2 (1 samples, 0.02%)</title><rect x="0.1584%" y="565" width="0.0198%" height="15" fill="rgb(211,66,66)" fg:x="8" fg:w="1"/><text x="0.4084%" y="575.50"></text></g><g><title>_int_new_arena (1 samples, 0.02%)</title><rect x="0.1584%" y="549" width="0.0198%" height="15" fill="rgb(202,53,53)" fg:x="8" fg:w="1"/><text x="0.4084%" y="559.50"></text></g><g><title>new_heap (1 samples, 0.02%)</title><rect x="0.1584%" y="533" width="0.0198%" height="15" fill="rgb(254,129,129)" fg:x="8" fg:w="1"/><text x="0.4084%" y="543.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.02%)</title><rect x="0.1584%" y="517" width="0.0198%" height="15" fill="rgb(235,101,101)" fg:x="8" fg:w="1"/><text x="0.4084%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.1584%" y="501" width="0.0198%" height="15" fill="rgb(216,73,73)" fg:x="8" fg:w="1"/><text x="0.4084%" y="511.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.1584%" y="485" width="0.0198%" height="15" fill="rgb(223,84,84)" fg:x="8" fg:w="1"/><text x="0.4084%" y="495.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="0.1584%" y="469" width="0.0198%" height="15" fill="rgb(233,98,98)" fg:x="8" fg:w="1"/><text x="0.4084%" y="479.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="0.1584%" y="453" width="0.0198%" height="15" fill="rgb(218,77,77)" fg:x="8" fg:w="1"/><text x="0.4084%" y="463.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="0.1584%" y="437" width="0.0198%" height="15" fill="rgb(242,111,111)" fg:x="8" fg:w="1"/><text x="0.4084%" y="447.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="0.1584%" y="421" width="0.0198%" height="15" fill="rgb(215,71,71)" fg:x="8" fg:w="1"/><text x="0.4084%" y="431.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::VisitSeqOneByteString (1 samples, 0.02%)</title><rect x="0.1781%" y="677" width="0.0198%" height="15" fill="rgb(211,211,63)" fg:x="9" fg:w="1"/><text x="0.4281%" y="687.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (1 samples, 0.02%)</title><rect x="0.1781%" y="661" width="0.0198%" height="15" fill="rgb(183,183,53)" fg:x="9" fg:w="1"/><text x="0.4281%" y="671.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (7 samples, 0.14%)</title><rect x="0.0792%" y="725" width="0.1386%" height="15" fill="rgb(202,202,60)" fg:x="4" fg:w="7"/><text x="0.3292%" y="735.50"></text></g><g><title>v8::internal::ConcurrentMarking::JobTask::Run (7 samples, 0.14%)</title><rect x="0.0792%" y="709" width="0.1386%" height="15" fill="rgb(187,187,54)" fg:x="4" fg:w="7"/><text x="0.3292%" y="719.50"></text></g><g><title>v8::internal::ConcurrentMarking::Run (7 samples, 0.14%)</title><rect x="0.0792%" y="693" width="0.1386%" height="15" fill="rgb(195,195,57)" fg:x="4" fg:w="7"/><text x="0.3292%" y="703.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitorUtility::VisitJSObjectSubclass&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::JSFunction, v8::internal::JSFunction::BodyDescriptor&gt; (1 samples, 0.02%)</title><rect x="0.1979%" y="677" width="0.0198%" height="15" fill="rgb(203,203,60)" fg:x="10" fg:w="1"/><text x="0.4479%" y="687.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (1 samples, 0.02%)</title><rect x="0.1979%" y="661" width="0.0198%" height="15" fill="rgb(185,185,53)" fg:x="10" fg:w="1"/><text x="0.4479%" y="671.50"></text></g><g><title>__perf_event_task_sched_in (15 samples, 0.30%)</title><rect x="0.2375%" y="501" width="0.2969%" height="15" fill="rgb(209,63,63)" fg:x="12" fg:w="15"/><text x="0.4875%" y="511.50"></text></g><g><title>x86_pmu_enable (15 samples, 0.30%)</title><rect x="0.2375%" y="485" width="0.2969%" height="15" fill="rgb(250,123,123)" fg:x="12" fg:w="15"/><text x="0.4875%" y="495.50"></text></g><g><title>intel_tfa_pmu_enable_all (15 samples, 0.30%)</title><rect x="0.2375%" y="469" width="0.2969%" height="15" fill="rgb(219,77,77)" fg:x="12" fg:w="15"/><text x="0.4875%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (15 samples, 0.30%)</title><rect x="0.2375%" y="453" width="0.2969%" height="15" fill="rgb(223,83,83)" fg:x="12" fg:w="15"/><text x="0.4875%" y="463.50"></text></g><g><title>native_write_msr (15 samples, 0.30%)</title><rect x="0.2375%" y="437" width="0.2969%" height="15" fill="rgb(251,124,124)" fg:x="12" fg:w="15"/><text x="0.4875%" y="447.50"></text></g><g><title>finish_task_switch (16 samples, 0.32%)</title><rect x="0.2375%" y="517" width="0.3167%" height="15" fill="rgb(219,78,78)" fg:x="12" fg:w="16"/><text x="0.4875%" y="527.50"></text></g><g><title>call_function_interrupt (1 samples, 0.02%)</title><rect x="0.5344%" y="501" width="0.0198%" height="15" fill="rgb(245,116,116)" fg:x="27" fg:w="1"/><text x="0.7844%" y="511.50"></text></g><g><title>smp_call_function_interrupt (1 samples, 0.02%)</title><rect x="0.5344%" y="485" width="0.0198%" height="15" fill="rgb(250,124,124)" fg:x="27" fg:w="1"/><text x="0.7844%" y="495.50"></text></g><g><title>generic_smp_call_function_single_interrupt (1 samples, 0.02%)</title><rect x="0.5344%" y="469" width="0.0198%" height="15" fill="rgb(229,92,92)" fg:x="27" fg:w="1"/><text x="0.7844%" y="479.50"></text></g><g><title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="0.5344%" y="453" width="0.0198%" height="15" fill="rgb(252,126,126)" fg:x="27" fg:w="1"/><text x="0.7844%" y="463.50"></text></g><g><title>__pthread_mutex_cond_lock (18 samples, 0.36%)</title><rect x="0.2177%" y="677" width="0.3563%" height="15" fill="rgb(216,73,73)" fg:x="11" fg:w="18"/><text x="0.4677%" y="687.50"></text></g><g><title>__lll_lock_wait (18 samples, 0.36%)</title><rect x="0.2177%" y="661" width="0.3563%" height="15" fill="rgb(204,55,55)" fg:x="11" fg:w="18"/><text x="0.4677%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.34%)</title><rect x="0.2375%" y="645" width="0.3365%" height="15" fill="rgb(229,93,93)" fg:x="12" fg:w="17"/><text x="0.4875%" y="655.50"></text></g><g><title>do_syscall_64 (17 samples, 0.34%)</title><rect x="0.2375%" y="629" width="0.3365%" height="15" fill="rgb(240,109,109)" fg:x="12" fg:w="17"/><text x="0.4875%" y="639.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.34%)</title><rect x="0.2375%" y="613" width="0.3365%" height="15" fill="rgb(239,107,107)" fg:x="12" fg:w="17"/><text x="0.4875%" y="623.50"></text></g><g><title>do_futex (17 samples, 0.34%)</title><rect x="0.2375%" y="597" width="0.3365%" height="15" fill="rgb(251,125,125)" fg:x="12" fg:w="17"/><text x="0.4875%" y="607.50"></text></g><g><title>futex_wait (17 samples, 0.34%)</title><rect x="0.2375%" y="581" width="0.3365%" height="15" fill="rgb(227,90,90)" fg:x="12" fg:w="17"/><text x="0.4875%" y="591.50"></text></g><g><title>futex_wait_queue_me (17 samples, 0.34%)</title><rect x="0.2375%" y="565" width="0.3365%" height="15" fill="rgb(223,84,84)" fg:x="12" fg:w="17"/><text x="0.4875%" y="575.50"></text></g><g><title>schedule (17 samples, 0.34%)</title><rect x="0.2375%" y="549" width="0.3365%" height="15" fill="rgb(202,53,53)" fg:x="12" fg:w="17"/><text x="0.4875%" y="559.50"></text></g><g><title>__sched_text_start (17 samples, 0.34%)</title><rect x="0.2375%" y="533" width="0.3365%" height="15" fill="rgb(234,99,99)" fg:x="12" fg:w="17"/><text x="0.4875%" y="543.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="0.5542%" y="517" width="0.0198%" height="15" fill="rgb(223,83,83)" fg:x="28" fg:w="1"/><text x="0.8042%" y="527.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="0.5740%" y="677" width="0.0198%" height="15" fill="rgb(249,122,122)" fg:x="29" fg:w="1"/><text x="0.8240%" y="687.50"></text></g><g><title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="0.5740%" y="661" width="0.0198%" height="15" fill="rgb(239,107,107)" fg:x="29" fg:w="1"/><text x="0.8240%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.5740%" y="645" width="0.0198%" height="15" fill="rgb(230,94,94)" fg:x="29" fg:w="1"/><text x="0.8240%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.5740%" y="629" width="0.0198%" height="15" fill="rgb(204,56,56)" fg:x="29" fg:w="1"/><text x="0.8240%" y="639.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="0.5740%" y="613" width="0.0198%" height="15" fill="rgb(225,87,87)" fg:x="29" fg:w="1"/><text x="0.8240%" y="623.50"></text></g><g><title>do_futex (1 samples, 0.02%)</title><rect x="0.5740%" y="597" width="0.0198%" height="15" fill="rgb(206,60,60)" fg:x="29" fg:w="1"/><text x="0.8240%" y="607.50"></text></g><g><title>futex_wake (1 samples, 0.02%)</title><rect x="0.5740%" y="581" width="0.0198%" height="15" fill="rgb(253,127,127)" fg:x="29" fg:w="1"/><text x="0.8240%" y="591.50"></text></g><g><title>deactivate_task (1 samples, 0.02%)</title><rect x="0.6334%" y="533" width="0.0198%" height="15" fill="rgb(205,57,57)" fg:x="32" fg:w="1"/><text x="0.8834%" y="543.50"></text></g><g><title>dequeue_task (1 samples, 0.02%)</title><rect x="0.6334%" y="517" width="0.0198%" height="15" fill="rgb(205,58,58)" fg:x="32" fg:w="1"/><text x="0.8834%" y="527.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="0.6334%" y="501" width="0.0198%" height="15" fill="rgb(201,51,51)" fg:x="32" fg:w="1"/><text x="0.8834%" y="511.50"></text></g><g><title>dequeue_entity (1 samples, 0.02%)</title><rect x="0.6334%" y="485" width="0.0198%" height="15" fill="rgb(219,78,78)" fg:x="32" fg:w="1"/><text x="0.8834%" y="495.50"></text></g><g><title>update_min_vruntime (1 samples, 0.02%)</title><rect x="0.6334%" y="469" width="0.0198%" height="15" fill="rgb(216,74,74)" fg:x="32" fg:w="1"/><text x="0.8834%" y="479.50"></text></g><g><title>__perf_event_task_sched_in (40 samples, 0.79%)</title><rect x="0.6532%" y="517" width="0.7918%" height="15" fill="rgb(216,73,73)" fg:x="33" fg:w="40"/><text x="0.9032%" y="527.50"></text></g><g><title>x86_pmu_enable (40 samples, 0.79%)</title><rect x="0.6532%" y="501" width="0.7918%" height="15" fill="rgb(244,115,115)" fg:x="33" fg:w="40"/><text x="0.9032%" y="511.50"></text></g><g><title>intel_tfa_pmu_enable_all (40 samples, 0.79%)</title><rect x="0.6532%" y="485" width="0.7918%" height="15" fill="rgb(227,89,89)" fg:x="33" fg:w="40"/><text x="0.9032%" y="495.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (40 samples, 0.79%)</title><rect x="0.6532%" y="469" width="0.7918%" height="15" fill="rgb(246,117,117)" fg:x="33" fg:w="40"/><text x="0.9032%" y="479.50"></text></g><g><title>native_write_msr (40 samples, 0.79%)</title><rect x="0.6532%" y="453" width="0.7918%" height="15" fill="rgb(225,87,87)" fg:x="33" fg:w="40"/><text x="0.9032%" y="463.50"></text></g><g><title>call_function_interrupt (1 samples, 0.02%)</title><rect x="1.4450%" y="517" width="0.0198%" height="15" fill="rgb(241,110,110)" fg:x="73" fg:w="1"/><text x="1.6950%" y="527.50"></text></g><g><title>smp_call_function_interrupt (1 samples, 0.02%)</title><rect x="1.4450%" y="501" width="0.0198%" height="15" fill="rgb(227,89,89)" fg:x="73" fg:w="1"/><text x="1.6950%" y="511.50"></text></g><g><title>generic_smp_call_function_single_interrupt (1 samples, 0.02%)</title><rect x="1.4450%" y="485" width="0.0198%" height="15" fill="rgb(238,105,105)" fg:x="73" fg:w="1"/><text x="1.6950%" y="495.50"></text></g><g><title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="1.4450%" y="469" width="0.0198%" height="15" fill="rgb(241,110,110)" fg:x="73" fg:w="1"/><text x="1.6950%" y="479.50"></text></g><g><title>irq_work_run (1 samples, 0.02%)</title><rect x="1.4450%" y="453" width="0.0198%" height="15" fill="rgb(205,58,58)" fg:x="73" fg:w="1"/><text x="1.6950%" y="463.50"></text></g><g><title>irq_work_run_list (1 samples, 0.02%)</title><rect x="1.4450%" y="437" width="0.0198%" height="15" fill="rgb(228,91,91)" fg:x="73" fg:w="1"/><text x="1.6950%" y="447.50"></text></g><g><title>perf_pending_event (1 samples, 0.02%)</title><rect x="1.4450%" y="421" width="0.0198%" height="15" fill="rgb(217,75,75)" fg:x="73" fg:w="1"/><text x="1.6950%" y="431.50"></text></g><g><title>perf_event_wakeup (1 samples, 0.02%)</title><rect x="1.4450%" y="405" width="0.0198%" height="15" fill="rgb(216,74,74)" fg:x="73" fg:w="1"/><text x="1.6950%" y="415.50"></text></g><g><title>__wake_up (1 samples, 0.02%)</title><rect x="1.4450%" y="389" width="0.0198%" height="15" fill="rgb(230,93,93)" fg:x="73" fg:w="1"/><text x="1.6950%" y="399.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1.4450%" y="373" width="0.0198%" height="15" fill="rgb(208,62,62)" fg:x="73" fg:w="1"/><text x="1.6950%" y="383.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="1.4450%" y="357" width="0.0198%" height="15" fill="rgb(229,93,93)" fg:x="73" fg:w="1"/><text x="1.6950%" y="367.50"></text></g><g><title>pollwake (1 samples, 0.02%)</title><rect x="1.4450%" y="341" width="0.0198%" height="15" fill="rgb(203,54,54)" fg:x="73" fg:w="1"/><text x="1.6950%" y="351.50"></text></g><g><title>default_wake_function (1 samples, 0.02%)</title><rect x="1.4450%" y="325" width="0.0198%" height="15" fill="rgb(231,95,95)" fg:x="73" fg:w="1"/><text x="1.6950%" y="335.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1.4450%" y="309" width="0.0198%" height="15" fill="rgb(211,67,67)" fg:x="73" fg:w="1"/><text x="1.6950%" y="319.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="1.4450%" y="293" width="0.0198%" height="15" fill="rgb(243,113,113)" fg:x="73" fg:w="1"/><text x="1.6950%" y="303.50"></text></g><g><title>activate_task (1 samples, 0.02%)</title><rect x="1.4450%" y="277" width="0.0198%" height="15" fill="rgb(203,54,54)" fg:x="73" fg:w="1"/><text x="1.6950%" y="287.50"></text></g><g><title>psi_task_change (1 samples, 0.02%)</title><rect x="1.4450%" y="261" width="0.0198%" height="15" fill="rgb(254,129,129)" fg:x="73" fg:w="1"/><text x="1.6950%" y="271.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1.4450%" y="245" width="0.0198%" height="15" fill="rgb(213,69,69)" fg:x="73" fg:w="1"/><text x="1.6950%" y="255.50"></text></g><g><title>__x64_sys_futex (43 samples, 0.85%)</title><rect x="0.6334%" y="629" width="0.8511%" height="15" fill="rgb(202,53,53)" fg:x="32" fg:w="43"/><text x="0.8834%" y="639.50"></text></g><g><title>do_futex (43 samples, 0.85%)</title><rect x="0.6334%" y="613" width="0.8511%" height="15" fill="rgb(214,70,70)" fg:x="32" fg:w="43"/><text x="0.8834%" y="623.50"></text></g><g><title>futex_wait (43 samples, 0.85%)</title><rect x="0.6334%" y="597" width="0.8511%" height="15" fill="rgb(229,92,92)" fg:x="32" fg:w="43"/><text x="0.8834%" y="607.50"></text></g><g><title>futex_wait_queue_me (43 samples, 0.85%)</title><rect x="0.6334%" y="581" width="0.8511%" height="15" fill="rgb(226,88,88)" fg:x="32" fg:w="43"/><text x="0.8834%" y="591.50"></text></g><g><title>schedule (43 samples, 0.85%)</title><rect x="0.6334%" y="565" width="0.8511%" height="15" fill="rgb(204,56,56)" fg:x="32" fg:w="43"/><text x="0.8834%" y="575.50"></text></g><g><title>__sched_text_start (43 samples, 0.85%)</title><rect x="0.6334%" y="549" width="0.8511%" height="15" fill="rgb(209,64,64)" fg:x="32" fg:w="43"/><text x="0.8834%" y="559.50"></text></g><g><title>finish_task_switch (42 samples, 0.83%)</title><rect x="0.6532%" y="533" width="0.8314%" height="15" fill="rgb(229,93,93)" fg:x="33" fg:w="42"/><text x="0.9032%" y="543.50"></text></g><g><title>irq_work_interrupt (1 samples, 0.02%)</title><rect x="1.4648%" y="517" width="0.0198%" height="15" fill="rgb(229,93,93)" fg:x="74" fg:w="1"/><text x="1.7148%" y="527.50"></text></g><g><title>smp_irq_work_interrupt (1 samples, 0.02%)</title><rect x="1.4648%" y="501" width="0.0198%" height="15" fill="rgb(223,84,84)" fg:x="74" fg:w="1"/><text x="1.7148%" y="511.50"></text></g><g><title>irq_work_run (1 samples, 0.02%)</title><rect x="1.4648%" y="485" width="0.0198%" height="15" fill="rgb(244,114,114)" fg:x="74" fg:w="1"/><text x="1.7148%" y="495.50"></text></g><g><title>perf_pending_event (1 samples, 0.02%)</title><rect x="1.4648%" y="469" width="0.0198%" height="15" fill="rgb(249,122,122)" fg:x="74" fg:w="1"/><text x="1.7148%" y="479.50"></text></g><g><title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1.4846%" y="629" width="0.0198%" height="15" fill="rgb(247,119,119)" fg:x="75" fg:w="1"/><text x="1.7346%" y="639.50"></text></g><g><title>do_signal (1 samples, 0.02%)</title><rect x="1.4846%" y="613" width="0.0198%" height="15" fill="rgb(248,119,119)" fg:x="75" fg:w="1"/><text x="1.7346%" y="623.50"></text></g><g><title>get_signal (1 samples, 0.02%)</title><rect x="1.4846%" y="597" width="0.0198%" height="15" fill="rgb(211,66,66)" fg:x="75" fg:w="1"/><text x="1.7346%" y="607.50"></text></g><g><title>do_group_exit (1 samples, 0.02%)</title><rect x="1.4846%" y="581" width="0.0198%" height="15" fill="rgb(208,62,62)" fg:x="75" fg:w="1"/><text x="1.7346%" y="591.50"></text></g><g><title>do_exit (1 samples, 0.02%)</title><rect x="1.4846%" y="565" width="0.0198%" height="15" fill="rgb(207,61,61)" fg:x="75" fg:w="1"/><text x="1.7346%" y="575.50"></text></g><g><title>acct_collect (1 samples, 0.02%)</title><rect x="1.4846%" y="549" width="0.0198%" height="15" fill="rgb(248,120,120)" fg:x="75" fg:w="1"/><text x="1.7346%" y="559.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="1.4846%" y="533" width="0.0198%" height="15" fill="rgb(224,85,85)" fg:x="75" fg:w="1"/><text x="1.7346%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (46 samples, 0.91%)</title><rect x="0.6136%" y="661" width="0.9105%" height="15" fill="rgb(226,88,88)" fg:x="31" fg:w="46"/><text x="0.8636%" y="671.50"></text></g><g><title>do_syscall_64 (46 samples, 0.91%)</title><rect x="0.6136%" y="645" width="0.9105%" height="15" fill="rgb(217,75,75)" fg:x="31" fg:w="46"/><text x="0.8636%" y="655.50"></text></g><g><title>switch_fpu_return (1 samples, 0.02%)</title><rect x="1.5044%" y="629" width="0.0198%" height="15" fill="rgb(223,84,84)" fg:x="76" fg:w="1"/><text x="1.7544%" y="639.50"></text></g><g><title>__pthread_cond_wait (67 samples, 1.33%)</title><rect x="0.2177%" y="709" width="1.3262%" height="15" fill="rgb(205,57,57)" fg:x="11" fg:w="67"/><text x="0.4677%" y="719.50"></text></g><g><title>__pthread_cond_wait_common (67 samples, 1.33%)</title><rect x="0.2177%" y="693" width="1.3262%" height="15" fill="rgb(239,107,107)" fg:x="11" fg:w="67"/><text x="0.4677%" y="703.50"></text></g><g><title>futex_wait_cancelable (48 samples, 0.95%)</title><rect x="0.5938%" y="677" width="0.9501%" height="15" fill="rgb(206,58,58)" fg:x="30" fg:w="48"/><text x="0.8438%" y="687.50"></text></g><g><title>interrupt_entry (1 samples, 0.02%)</title><rect x="1.5241%" y="661" width="0.0198%" height="15" fill="rgb(225,86,86)" fg:x="77" fg:w="1"/><text x="1.7741%" y="671.50"></text></g><g><title>__GI___clone (78 samples, 1.54%)</title><rect x="0.0198%" y="789" width="1.5439%" height="15" fill="rgb(209,63,63)" fg:x="1" fg:w="78"/><text x="0.2698%" y="799.50"></text></g><g><title>start_thread (78 samples, 1.54%)</title><rect x="0.0198%" y="773" width="1.5439%" height="15" fill="rgb(216,73,73)" fg:x="1" fg:w="78"/><text x="0.2698%" y="783.50"></text></g><g><title>v8::base::ThreadEntry (78 samples, 1.54%)</title><rect x="0.0198%" y="757" width="1.5439%" height="15" fill="rgb(176,176,50)" fg:x="1" fg:w="78"/><text x="0.2698%" y="767.50"></text></g><g><title>v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (78 samples, 1.54%)</title><rect x="0.0198%" y="741" width="1.5439%" height="15" fill="rgb(179,179,51)" fg:x="1" fg:w="78"/><text x="0.2698%" y="751.50"></text></g><g><title>v8::platform::DelayedTaskQueue::GetNext (68 samples, 1.35%)</title><rect x="0.2177%" y="725" width="1.3460%" height="15" fill="rgb(194,194,57)" fg:x="11" fg:w="68"/><text x="0.4677%" y="735.50"></text></g><g><title>v8::platform::(anonymous namespace)::DefaultTimeFunction (1 samples, 0.02%)</title><rect x="1.5439%" y="709" width="0.0198%" height="15" fill="rgb(181,181,52)" fg:x="78" fg:w="1"/><text x="1.7939%" y="719.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1.5637%" y="757" width="0.0198%" height="15" fill="rgb(244,114,114)" fg:x="79" fg:w="1"/><text x="1.8137%" y="767.50"></text></g><g><title>do_futex (1 samples, 0.02%)</title><rect x="1.5637%" y="741" width="0.0198%" height="15" fill="rgb(241,110,110)" fg:x="79" fg:w="1"/><text x="1.8137%" y="751.50"></text></g><g><title>futex_wake (1 samples, 0.02%)</title><rect x="1.5637%" y="725" width="0.0198%" height="15" fill="rgb(248,120,120)" fg:x="79" fg:w="1"/><text x="1.8137%" y="735.50"></text></g><g><title>wake_up_q (1 samples, 0.02%)</title><rect x="1.5637%" y="709" width="0.0198%" height="15" fill="rgb(218,77,77)" fg:x="79" fg:w="1"/><text x="1.8137%" y="719.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1.5637%" y="693" width="0.0198%" height="15" fill="rgb(230,94,94)" fg:x="79" fg:w="1"/><text x="1.8137%" y="703.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="1.5637%" y="677" width="0.0198%" height="15" fill="rgb(211,67,67)" fg:x="79" fg:w="1"/><text x="1.8137%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1.5637%" y="789" width="0.0396%" height="15" fill="rgb(216,73,73)" fg:x="79" fg:w="2"/><text x="1.8137%" y="799.50"></text></g><g><title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1.5637%" y="773" width="0.0396%" height="15" fill="rgb(220,79,79)" fg:x="79" fg:w="2"/><text x="1.8137%" y="783.50"></text></g><g><title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1.5835%" y="757" width="0.0198%" height="15" fill="rgb(210,65,65)" fg:x="80" fg:w="1"/><text x="1.8335%" y="767.50"></text></g><g><title>do_signal (1 samples, 0.02%)</title><rect x="1.5835%" y="741" width="0.0198%" height="15" fill="rgb(237,103,103)" fg:x="80" fg:w="1"/><text x="1.8335%" y="751.50"></text></g><g><title>get_signal (1 samples, 0.02%)</title><rect x="1.5835%" y="725" width="0.0198%" height="15" fill="rgb(213,69,69)" fg:x="80" fg:w="1"/><text x="1.8335%" y="735.50"></text></g><g><title>do_group_exit (1 samples, 0.02%)</title><rect x="1.5835%" y="709" width="0.0198%" height="15" fill="rgb(200,50,50)" fg:x="80" fg:w="1"/><text x="1.8335%" y="719.50"></text></g><g><title>do_exit (1 samples, 0.02%)</title><rect x="1.5835%" y="693" width="0.0198%" height="15" fill="rgb(207,60,60)" fg:x="80" fg:w="1"/><text x="1.8335%" y="703.50"></text></g><g><title>mmput (1 samples, 0.02%)</title><rect x="1.5835%" y="677" width="0.0198%" height="15" fill="rgb(218,77,77)" fg:x="80" fg:w="1"/><text x="1.8335%" y="687.50"></text></g><g><title>exit_mmap (1 samples, 0.02%)</title><rect x="1.5835%" y="661" width="0.0198%" height="15" fill="rgb(234,100,100)" fg:x="80" fg:w="1"/><text x="1.8335%" y="671.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="1.5835%" y="645" width="0.0198%" height="15" fill="rgb(205,57,57)" fg:x="80" fg:w="1"/><text x="1.8335%" y="655.50"></text></g><g><title>unmap_single_vma (1 samples, 0.02%)</title><rect x="1.5835%" y="629" width="0.0198%" height="15" fill="rgb(240,108,108)" fg:x="80" fg:w="1"/><text x="1.8335%" y="639.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="1.5835%" y="613" width="0.0198%" height="15" fill="rgb(237,103,103)" fg:x="80" fg:w="1"/><text x="1.8335%" y="623.50"></text></g><g><title>V8_DefaultWorke (83 samples, 1.64%)</title><rect x="0.0000%" y="805" width="1.6429%" height="15" fill="rgb(251,125,125)" fg:x="0" fg:w="83"/><text x="0.2500%" y="815.50"></text></g><g><title>page_fault (2 samples, 0.04%)</title><rect x="1.6033%" y="789" width="0.0396%" height="15" fill="rgb(201,51,51)" fg:x="81" fg:w="2"/><text x="1.8533%" y="799.50"></text></g><g><title>perf (5 samples, 0.10%)</title><rect x="1.6429%" y="805" width="0.0990%" height="15" fill="rgb(224,85,85)" fg:x="83" fg:w="5"/><text x="1.8929%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="1.6429%" y="789" width="0.0990%" height="15" fill="rgb(223,84,84)" fg:x="83" fg:w="5"/><text x="1.8929%" y="799.50"></text></g><g><title>do_syscall_64 (5 samples, 0.10%)</title><rect x="1.6429%" y="773" width="0.0990%" height="15" fill="rgb(236,102,102)" fg:x="83" fg:w="5"/><text x="1.8929%" y="783.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.10%)</title><rect x="1.6429%" y="757" width="0.0990%" height="15" fill="rgb(248,119,119)" fg:x="83" fg:w="5"/><text x="1.8929%" y="767.50"></text></g><g><title>__do_execve_file.isra.39 (5 samples, 0.10%)</title><rect x="1.6429%" y="741" width="0.0990%" height="15" fill="rgb(205,57,57)" fg:x="83" fg:w="5"/><text x="1.8929%" y="751.50"></text></g><g><title>search_binary_handler (5 samples, 0.10%)</title><rect x="1.6429%" y="725" width="0.0990%" height="15" fill="rgb(212,68,68)" fg:x="83" fg:w="5"/><text x="1.8929%" y="735.50"></text></g><g><title>load_elf_binary (5 samples, 0.10%)</title><rect x="1.6429%" y="709" width="0.0990%" height="15" fill="rgb(206,58,58)" fg:x="83" fg:w="5"/><text x="1.8929%" y="719.50"></text></g><g><title>setup_new_exec (5 samples, 0.10%)</title><rect x="1.6429%" y="693" width="0.0990%" height="15" fill="rgb(209,64,64)" fg:x="83" fg:w="5"/><text x="1.8929%" y="703.50"></text></g><g><title>perf_event_exec (5 samples, 0.10%)</title><rect x="1.6429%" y="677" width="0.0990%" height="15" fill="rgb(252,126,126)" fg:x="83" fg:w="5"/><text x="1.8929%" y="687.50"></text></g><g><title>ctx_resched (5 samples, 0.10%)</title><rect x="1.6429%" y="661" width="0.0990%" height="15" fill="rgb(206,59,59)" fg:x="83" fg:w="5"/><text x="1.8929%" y="671.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.10%)</title><rect x="1.6429%" y="645" width="0.0990%" height="15" fill="rgb(213,69,69)" fg:x="83" fg:w="5"/><text x="1.8929%" y="655.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.10%)</title><rect x="1.6429%" y="629" width="0.0990%" height="15" fill="rgb(231,95,95)" fg:x="83" fg:w="5"/><text x="1.8929%" y="639.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (5 samples, 0.10%)</title><rect x="1.6429%" y="613" width="0.0990%" height="15" fill="rgb(250,123,123)" fg:x="83" fg:w="5"/><text x="1.8929%" y="623.50"></text></g><g><title>native_write_msr (5 samples, 0.10%)</title><rect x="1.6429%" y="597" width="0.0990%" height="15" fill="rgb(207,61,61)" fg:x="83" fg:w="5"/><text x="1.8929%" y="607.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3 samples, 0.06%)</title><rect x="1.7419%" y="773" width="0.0594%" height="15" fill="rgb(210,210,63)" fg:x="88" fg:w="3"/><text x="1.9919%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (15 samples, 0.30%)</title><rect x="1.8013%" y="773" width="0.2969%" height="15" fill="rgb(212,212,63)" fg:x="91" fg:w="15"/><text x="2.0513%" y="783.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (1 samples, 0.02%)</title><rect x="2.0982%" y="773" width="0.0198%" height="15" fill="rgb(246,117,117)" fg:x="106" fg:w="1"/><text x="2.3482%" y="783.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__reset (8 samples, 0.16%)</title><rect x="2.1180%" y="773" width="0.1584%" height="15" fill="rgb(232,97,97)" fg:x="107" fg:w="8"/><text x="2.3680%" y="783.50"></text></g><g><title>v8::ArrayBufferView::ByteLength (3 samples, 0.06%)</title><rect x="2.2763%" y="773" width="0.0594%" height="15" fill="rgb(186,186,54)" fg:x="115" fg:w="3"/><text x="2.5263%" y="783.50"></text></g><g><title>v8::BackingStore::Data (11 samples, 0.22%)</title><rect x="2.3357%" y="773" width="0.2177%" height="15" fill="rgb(185,185,53)" fg:x="118" fg:w="11"/><text x="2.5857%" y="783.50"></text></g><g><title>v8::BackingStore::IsShared (1 samples, 0.02%)</title><rect x="2.5534%" y="773" width="0.0198%" height="15" fill="rgb(178,178,51)" fg:x="129" fg:w="1"/><text x="2.8034%" y="783.50"></text></g><g><title>v8::External::Value (11 samples, 0.22%)</title><rect x="2.5732%" y="773" width="0.2177%" height="15" fill="rgb(218,218,65)" fg:x="130" fg:w="11"/><text x="2.8232%" y="783.50"></text></g><g><title>v8::Value::IsArrayBufferView (9 samples, 0.18%)</title><rect x="2.7910%" y="773" width="0.1781%" height="15" fill="rgb(216,216,65)" fg:x="141" fg:w="9"/><text x="3.0410%" y="783.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (4 samples, 0.08%)</title><rect x="2.9691%" y="773" width="0.0792%" height="15" fill="rgb(200,50,50)" fg:x="150" fg:w="4"/><text x="3.2191%" y="783.50"></text></g><g><title>v8__FunctionCallbackInfo__GetArgument (1 samples, 0.02%)</title><rect x="3.0483%" y="773" width="0.0198%" height="15" fill="rgb(229,93,93)" fg:x="154" fg:w="1"/><text x="3.2983%" y="783.50"></text></g><g><title>v8__Isolate__SetData (17 samples, 0.34%)</title><rect x="3.0681%" y="773" width="0.3365%" height="15" fill="rgb(205,57,57)" fg:x="155" fg:w="17"/><text x="3.3181%" y="783.50"></text></g><g><title>[[heap]] (85 samples, 1.68%)</title><rect x="1.7419%" y="789" width="1.6825%" height="15" fill="rgb(248,120,120)" fg:x="88" fg:w="85"/><text x="1.9919%" y="799.50"></text></g><g><title>v8__Value__IsArrayBufferView (1 samples, 0.02%)</title><rect x="3.4046%" y="773" width="0.0198%" height="15" fill="rgb(214,71,71)" fg:x="172" fg:w="1"/><text x="3.6546%" y="783.50"></text></g><g><title>v8::array_buffer::BackingStore::byte_length (8 samples, 0.16%)</title><rect x="3.8994%" y="693" width="0.1584%" height="15" fill="rgb(224,224,68)" fg:x="197" fg:w="8"/><text x="4.1494%" y="703.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (29 samples, 0.57%)</title><rect x="3.8994%" y="709" width="0.5740%" height="15" fill="rgb(188,188,54)" fg:x="197" fg:w="29"/><text x="4.1494%" y="719.50"></text></g><g><title>v8::array_buffer::BackingStore::data (21 samples, 0.42%)</title><rect x="4.0578%" y="693" width="0.4157%" height="15" fill="rgb(193,193,56)" fg:x="205" fg:w="21"/><text x="4.3078%" y="703.50"></text></g><g><title>&lt;v8::support::SharedRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.32%)</title><rect x="4.4735%" y="709" width="0.3167%" height="15" fill="rgb(204,204,60)" fg:x="226" fg:w="16"/><text x="4.7235%" y="719.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::get (16 samples, 0.32%)</title><rect x="4.4735%" y="693" width="0.3167%" height="15" fill="rgb(221,221,66)" fg:x="226" fg:w="16"/><text x="4.7235%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedRef&lt;v8::array_buffer::BackingStore&gt;&gt; (4 samples, 0.08%)</title><rect x="4.7902%" y="709" width="0.0792%" height="15" fill="rgb(216,216,65)" fg:x="242" fg:w="4"/><text x="5.0402%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedPtrBase&lt;v8::array_buffer::BackingStore&gt;&gt; (4 samples, 0.08%)</title><rect x="4.7902%" y="693" width="0.0792%" height="15" fill="rgb(223,223,67)" fg:x="242" fg:w="4"/><text x="5.0402%" y="703.50"></text></g><g><title>&lt;v8::support::SharedPtrBase&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="4.7902%" y="677" width="0.0792%" height="15" fill="rgb(188,188,55)" fg:x="242" fg:w="4"/><text x="5.0402%" y="687.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::reset (4 samples, 0.08%)</title><rect x="4.7902%" y="661" width="0.0792%" height="15" fill="rgb(217,217,65)" fg:x="242" fg:w="4"/><text x="5.0402%" y="671.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::String&gt;&gt;::try_from (8 samples, 0.16%)</title><rect x="4.8694%" y="693" width="0.1584%" height="15" fill="rgb(225,225,68)" fg:x="246" fg:w="8"/><text x="5.1194%" y="703.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_string (8 samples, 0.16%)</title><rect x="4.8694%" y="677" width="0.1584%" height="15" fill="rgb(205,205,61)" fg:x="246" fg:w="8"/><text x="5.1194%" y="687.50"></text></g><g><title>runjs::op_encoding_encode_into_fast::call (17 samples, 0.34%)</title><rect x="4.8694%" y="709" width="0.3365%" height="15" fill="rgb(214,214,64)" fg:x="246" fg:w="17"/><text x="5.1194%" y="719.50"></text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::write_utf8 (9 samples, 0.18%)</title><rect x="5.0277%" y="693" width="0.1781%" height="15" fill="rgb(215,215,64)" fg:x="254" fg:w="9"/><text x="5.2777%" y="703.50"></text></g><g><title>v8::array_buffer::&lt;impl v8::data::ArrayBuffer&gt;::get_backing_store (20 samples, 0.40%)</title><rect x="5.2059%" y="709" width="0.3959%" height="15" fill="rgb(209,209,62)" fg:x="263" fg:w="20"/><text x="5.4559%" y="719.50"></text></g><g><title>v8::array_buffer::BackingStore::is_shared (9 samples, 0.18%)</title><rect x="5.6017%" y="709" width="0.1781%" height="15" fill="rgb(210,210,63)" fg:x="283" fg:w="9"/><text x="5.8517%" y="719.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::buffer (7 samples, 0.14%)</title><rect x="5.7799%" y="709" width="0.1386%" height="15" fill="rgb(183,183,53)" fg:x="292" fg:w="7"/><text x="6.0299%" y="719.50"></text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (7 samples, 0.14%)</title><rect x="5.7799%" y="693" width="0.1386%" height="15" fill="rgb(196,196,57)" fg:x="292" fg:w="7"/><text x="6.0299%" y="703.50"></text></g><g><title>v8::array_buffer_view::_&lt;impl v8::data::ArrayBufferView&gt;::buffer::_{{closure}} (7 samples, 0.14%)</title><rect x="5.7799%" y="677" width="0.1386%" height="15" fill="rgb(226,226,68)" fg:x="292" fg:w="7"/><text x="6.0299%" y="687.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_length (10 samples, 0.20%)</title><rect x="5.9184%" y="709" width="0.1979%" height="15" fill="rgb(208,208,62)" fg:x="299" fg:w="10"/><text x="6.1684%" y="719.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_offset (8 samples, 0.16%)</title><rect x="6.1164%" y="709" width="0.1584%" height="15" fill="rgb(215,215,64)" fg:x="309" fg:w="8"/><text x="6.3664%" y="719.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::ArrayBufferView&gt;&gt;::try_from (15 samples, 0.30%)</title><rect x="6.2747%" y="709" width="0.2969%" height="15" fill="rgb(226,226,68)" fg:x="317" fg:w="15"/><text x="6.5247%" y="719.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_array_buffer_view (15 samples, 0.30%)</title><rect x="6.2747%" y="693" width="0.2969%" height="15" fill="rgb(196,196,57)" fg:x="317" fg:w="15"/><text x="6.5247%" y="703.50"></text></g><g><title>v8::external::&lt;impl v8::data::External&gt;::value (8 samples, 0.16%)</title><rect x="6.5717%" y="709" width="0.1584%" height="15" fill="rgb(221,221,66)" fg:x="332" fg:w="8"/><text x="6.8217%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (160 samples, 3.17%)</title><rect x="3.8994%" y="741" width="3.1671%" height="15" fill="rgb(196,196,57)" fg:x="197" fg:w="160"/><text x="4.1494%" y="751.50">cor..</text></g><g><title>runjs::op_encoding_encode_into_fast::v8_func (160 samples, 3.17%)</title><rect x="3.8994%" y="725" width="3.1671%" height="15" fill="rgb(200,200,59)" fg:x="197" fg:w="160"/><text x="4.1494%" y="735.50">run..</text></g><g><title>v8::function::FunctionCallbackArguments::get (17 samples, 0.34%)</title><rect x="6.7300%" y="709" width="0.3365%" height="15" fill="rgb(192,192,56)" fg:x="340" fg:w="17"/><text x="6.9800%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::CallbackScope&gt; (2 samples, 0.04%)</title><rect x="7.0665%" y="741" width="0.0396%" height="15" fill="rgb(208,208,62)" fg:x="357" fg:w="2"/><text x="7.3165%" y="751.50"></text></g><g><title>&lt;v8::scope::CallbackScope&lt;C&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="7.0665%" y="725" width="0.0396%" height="15" fill="rgb(218,218,65)" fg:x="357" fg:w="2"/><text x="7.3165%" y="735.50"></text></g><g><title>v8::function::ReturnValue::from_function_callback_info (5 samples, 0.10%)</title><rect x="7.1061%" y="741" width="0.0990%" height="15" fill="rgb(178,178,51)" fg:x="359" fg:w="5"/><text x="7.3561%" y="751.50"></text></g><g><title>v8::scope::data::ScopeData::get_current_mut (6 samples, 0.12%)</title><rect x="7.2051%" y="725" width="0.1188%" height="15" fill="rgb(177,177,50)" fg:x="364" fg:w="6"/><text x="7.4551%" y="735.50"></text></g><g><title>v8::isolate::Isolate::get_current_scope_data (6 samples, 0.12%)</title><rect x="7.2051%" y="709" width="0.1188%" height="15" fill="rgb(182,182,52)" fg:x="364" fg:w="6"/><text x="7.4551%" y="719.50"></text></g><g><title>v8::scope::data::ScopeData::new_callback_scope_data (4 samples, 0.08%)</title><rect x="7.3238%" y="725" width="0.0792%" height="15" fill="rgb(188,188,54)" fg:x="370" fg:w="4"/><text x="7.5738%" y="735.50"></text></g><g><title>v8::scope::data::ScopeData::new_scope_data_with (4 samples, 0.08%)</title><rect x="7.3238%" y="709" width="0.0792%" height="15" fill="rgb(198,198,58)" fg:x="370" fg:w="4"/><text x="7.5738%" y="719.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (4 samples, 0.08%)</title><rect x="7.3238%" y="693" width="0.0792%" height="15" fill="rgb(200,200,59)" fg:x="370" fg:w="4"/><text x="7.5738%" y="703.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (210 samples, 4.16%)</title><rect x="3.4244%" y="773" width="4.1568%" height="15" fill="rgb(186,186,54)" fg:x="173" fg:w="210"/><text x="3.6744%" y="783.50">&lt;exte..</text></g><g><title>v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}} (186 samples, 3.68%)</title><rect x="3.8994%" y="757" width="3.6817%" height="15" fill="rgb(206,206,61)" fg:x="197" fg:w="186"/><text x="4.1494%" y="767.50">v8::..</text></g><g><title>v8::scope::CallbackScope::new (19 samples, 0.38%)</title><rect x="7.2051%" y="741" width="0.3761%" height="15" fill="rgb(181,181,52)" fg:x="364" fg:w="19"/><text x="7.4551%" y="751.50"></text></g><g><title>v8::scope::param::NewCallbackScope::get_isolate_mut_and_maybe_current_context (9 samples, 0.18%)</title><rect x="7.4030%" y="725" width="0.1781%" height="15" fill="rgb(193,193,56)" fg:x="374" fg:w="9"/><text x="7.6530%" y="735.50"></text></g><g><title>&lt;&amp;v8::function::FunctionCallbackInfo as v8::scope::getter::GetIsolate&gt;::get_isolate_mut (9 samples, 0.18%)</title><rect x="7.4030%" y="709" width="0.1781%" height="15" fill="rgb(198,198,58)" fg:x="374" fg:w="9"/><text x="7.6530%" y="719.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (1 samples, 0.02%)</title><rect x="7.5812%" y="773" width="0.0198%" height="15" fill="rgb(216,73,73)" fg:x="383" fg:w="1"/><text x="7.8312%" y="783.50"></text></g><g><title>v8::ArrayBuffer::GetBackingStore (1 samples, 0.02%)</title><rect x="7.6010%" y="773" width="0.0198%" height="15" fill="rgb(206,206,61)" fg:x="384" fg:w="1"/><text x="7.8510%" y="783.50"></text></g><g><title>v8::ArrayBufferView::ByteLength (1 samples, 0.02%)</title><rect x="7.6207%" y="773" width="0.0198%" height="15" fill="rgb(186,186,54)" fg:x="385" fg:w="1"/><text x="7.8707%" y="783.50"></text></g><g><title>v8::String::WriteUtf8 (1 samples, 0.02%)</title><rect x="7.6405%" y="773" width="0.0198%" height="15" fill="rgb(219,219,66)" fg:x="386" fg:w="1"/><text x="7.8905%" y="783.50"></text></g><g><title>v8::internal::JSTypedArray::GetBuffer (6 samples, 0.12%)</title><rect x="7.6603%" y="773" width="0.1188%" height="15" fill="rgb(207,207,61)" fg:x="387" fg:w="6"/><text x="7.9103%" y="783.50"></text></g><g><title>v8__ArrayBufferView__Buffer (11 samples, 0.22%)</title><rect x="7.7791%" y="773" width="0.2177%" height="15" fill="rgb(233,98,98)" fg:x="393" fg:w="11"/><text x="8.0291%" y="783.50"></text></g><g><title>v8__ArrayBufferView__ByteOffset (6 samples, 0.12%)</title><rect x="7.9968%" y="773" width="0.1188%" height="15" fill="rgb(212,67,67)" fg:x="404" fg:w="6"/><text x="8.2468%" y="783.50"></text></g><g><title>[[stack]] (238 samples, 4.71%)</title><rect x="3.4244%" y="789" width="4.7110%" height="15" fill="rgb(253,127,127)" fg:x="173" fg:w="238"/><text x="3.6744%" y="799.50">[[sta..</text></g><g><title>v8__Isolate__GetData (1 samples, 0.02%)</title><rect x="8.1156%" y="773" width="0.0198%" height="15" fill="rgb(253,127,127)" fg:x="410" fg:w="1"/><text x="8.3656%" y="783.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (5 samples, 0.10%)</title><rect x="8.1354%" y="773" width="0.0990%" height="15" fill="rgb(213,213,64)" fg:x="411" fg:w="5"/><text x="8.3854%" y="783.50"></text></g><g><title>v8::BackingStore::IsShared (3 samples, 0.06%)</title><rect x="8.2344%" y="773" width="0.0594%" height="15" fill="rgb(197,197,58)" fg:x="416" fg:w="3"/><text x="8.4844%" y="783.50"></text></g><g><title>v8::internal::JSTypedArray::GetBuffer (6 samples, 0.12%)</title><rect x="8.2937%" y="773" width="0.1188%" height="15" fill="rgb(191,191,55)" fg:x="419" fg:w="6"/><text x="8.5437%" y="783.50"></text></g><g><title>[anon] (15 samples, 0.30%)</title><rect x="8.1354%" y="789" width="0.2969%" height="15" fill="rgb(220,80,80)" fg:x="411" fg:w="15"/><text x="8.3854%" y="799.50"></text></g><g><title>v8__BackingStore__ByteLength (1 samples, 0.02%)</title><rect x="8.4125%" y="773" width="0.0198%" height="15" fill="rgb(236,102,102)" fg:x="425" fg:w="1"/><text x="8.6625%" y="783.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="12.4505%" y="741" width="0.0198%" height="15" fill="rgb(251,125,125)" fg:x="629" fg:w="1"/><text x="12.7005%" y="751.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="12.4505%" y="725" width="0.0198%" height="15" fill="rgb(252,126,126)" fg:x="629" fg:w="1"/><text x="12.7005%" y="735.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="12.4505%" y="709" width="0.0198%" height="15" fill="rgb(231,96,96)" fg:x="629" fg:w="1"/><text x="12.7005%" y="719.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="12.4505%" y="693" width="0.0198%" height="15" fill="rgb(246,117,117)" fg:x="629" fg:w="1"/><text x="12.7005%" y="703.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="12.4505%" y="677" width="0.0198%" height="15" fill="rgb(230,94,94)" fg:x="629" fg:w="1"/><text x="12.7005%" y="687.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="12.4505%" y="661" width="0.0198%" height="15" fill="rgb(227,89,89)" fg:x="629" fg:w="1"/><text x="12.7005%" y="671.50"></text></g><g><title>idma64_irq (1 samples, 0.02%)</title><rect x="12.4505%" y="645" width="0.0198%" height="15" fill="rgb(253,127,127)" fg:x="629" fg:w="1"/><text x="12.7005%" y="655.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="12.4703%" y="741" width="0.0198%" height="15" fill="rgb(253,128,128)" fg:x="630" fg:w="1"/><text x="12.7203%" y="751.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="12.4703%" y="725" width="0.0198%" height="15" fill="rgb(226,87,87)" fg:x="630" fg:w="1"/><text x="12.7203%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (20 samples, 0.40%)</title><rect x="14.0934%" y="677" width="0.3959%" height="15" fill="rgb(224,224,68)" fg:x="712" fg:w="20"/><text x="14.3434%" y="687.50"></text></g><g><title>v8::BackingStore::ByteLength (14 samples, 0.28%)</title><rect x="14.5091%" y="661" width="0.2771%" height="15" fill="rgb(185,185,53)" fg:x="733" fg:w="14"/><text x="14.7591%" y="671.50"></text></g><g><title>v8::array_buffer::BackingStore::byte_length (16 samples, 0.32%)</title><rect x="14.4893%" y="677" width="0.3167%" height="15" fill="rgb(204,204,60)" fg:x="732" fg:w="16"/><text x="14.7393%" y="687.50"></text></g><g><title>v8__BackingStore__ByteLength (1 samples, 0.02%)</title><rect x="14.7862%" y="661" width="0.0198%" height="15" fill="rgb(246,117,117)" fg:x="747" fg:w="1"/><text x="15.0362%" y="671.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="14.7862%" y="645" width="0.0198%" height="15" fill="rgb(219,78,78)" fg:x="747" fg:w="1"/><text x="15.0362%" y="655.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="14.7862%" y="629" width="0.0198%" height="15" fill="rgb(215,72,72)" fg:x="747" fg:w="1"/><text x="15.0362%" y="639.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="14.7862%" y="613" width="0.0198%" height="15" fill="rgb(211,67,67)" fg:x="747" fg:w="1"/><text x="15.0362%" y="623.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="14.7862%" y="597" width="0.0198%" height="15" fill="rgb(207,61,61)" fg:x="747" fg:w="1"/><text x="15.0362%" y="607.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="14.7862%" y="581" width="0.0198%" height="15" fill="rgb(233,99,99)" fg:x="747" fg:w="1"/><text x="15.0362%" y="591.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="14.7862%" y="565" width="0.0198%" height="15" fill="rgb(238,105,105)" fg:x="747" fg:w="1"/><text x="15.0362%" y="575.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="14.7862%" y="549" width="0.0198%" height="15" fill="rgb(253,127,127)" fg:x="747" fg:w="1"/><text x="15.0362%" y="559.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="14.7862%" y="533" width="0.0198%" height="15" fill="rgb(252,125,125)" fg:x="747" fg:w="1"/><text x="15.0362%" y="543.50"></text></g><g><title>v8::BackingStore::Data (13 samples, 0.26%)</title><rect x="14.8060%" y="661" width="0.2573%" height="15" fill="rgb(217,217,65)" fg:x="748" fg:w="13"/><text x="15.0560%" y="671.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (65 samples, 1.29%)</title><rect x="13.9945%" y="693" width="1.2866%" height="15" fill="rgb(207,207,61)" fg:x="707" fg:w="65"/><text x="14.2445%" y="703.50"></text></g><g><title>v8::array_buffer::BackingStore::data (24 samples, 0.48%)</title><rect x="14.8060%" y="677" width="0.4751%" height="15" fill="rgb(222,222,67)" fg:x="748" fg:w="24"/><text x="15.0560%" y="687.50"></text></g><g><title>v8__BackingStore__Data (11 samples, 0.22%)</title><rect x="15.0633%" y="661" width="0.2177%" height="15" fill="rgb(253,127,127)" fg:x="761" fg:w="11"/><text x="15.3133%" y="671.50"></text></g><g><title>&lt;v8::support::SharedRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.26%)</title><rect x="15.2811%" y="693" width="0.2573%" height="15" fill="rgb(219,219,66)" fg:x="772" fg:w="13"/><text x="15.5311%" y="703.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::get (13 samples, 0.26%)</title><rect x="15.2811%" y="677" width="0.2573%" height="15" fill="rgb(223,223,67)" fg:x="772" fg:w="13"/><text x="15.5311%" y="687.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (13 samples, 0.26%)</title><rect x="15.2811%" y="661" width="0.2573%" height="15" fill="rgb(254,129,129)" fg:x="772" fg:w="13"/><text x="15.5311%" y="671.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="15.5186%" y="645" width="0.0198%" height="15" fill="rgb(241,110,110)" fg:x="784" fg:w="1"/><text x="15.7686%" y="655.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="15.5186%" y="629" width="0.0198%" height="15" fill="rgb(208,61,61)" fg:x="784" fg:w="1"/><text x="15.7686%" y="639.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="15.5186%" y="613" width="0.0198%" height="15" fill="rgb(213,70,70)" fg:x="784" fg:w="1"/><text x="15.7686%" y="623.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="15.5186%" y="597" width="0.0198%" height="15" fill="rgb(216,73,73)" fg:x="784" fg:w="1"/><text x="15.7686%" y="607.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="15.5186%" y="581" width="0.0198%" height="15" fill="rgb(254,129,129)" fg:x="784" fg:w="1"/><text x="15.7686%" y="591.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="15.5186%" y="565" width="0.0198%" height="15" fill="rgb(207,60,60)" fg:x="784" fg:w="1"/><text x="15.7686%" y="575.50"></text></g><g><title>idma64_irq (1 samples, 0.02%)</title><rect x="15.5186%" y="549" width="0.0198%" height="15" fill="rgb(238,105,105)" fg:x="784" fg:w="1"/><text x="15.7686%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="15.5978%" y="645" width="0.0198%" height="15" fill="rgb(212,212,63)" fg:x="788" fg:w="1"/><text x="15.8478%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="15.5978%" y="629" width="0.0198%" height="15" fill="rgb(175,175,50)" fg:x="788" fg:w="1"/><text x="15.8478%" y="639.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="15.5978%" y="613" width="0.0198%" height="15" fill="rgb(217,217,65)" fg:x="788" fg:w="1"/><text x="15.8478%" y="623.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="15.5978%" y="597" width="0.0198%" height="15" fill="rgb(180,180,52)" fg:x="788" fg:w="1"/><text x="15.8478%" y="607.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (7 samples, 0.14%)</title><rect x="15.5384%" y="693" width="0.1386%" height="15" fill="rgb(178,178,51)" fg:x="785" fg:w="7"/><text x="15.7884%" y="703.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (7 samples, 0.14%)</title><rect x="15.5384%" y="677" width="0.1386%" height="15" fill="rgb(227,227,69)" fg:x="785" fg:w="7"/><text x="15.7884%" y="687.50"></text></g><g><title>core::cell::BorrowRef::new (7 samples, 0.14%)</title><rect x="15.5384%" y="661" width="0.1386%" height="15" fill="rgb(222,222,67)" fg:x="785" fg:w="7"/><text x="15.7884%" y="671.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_add (3 samples, 0.06%)</title><rect x="15.6176%" y="645" width="0.0594%" height="15" fill="rgb(198,198,58)" fg:x="789" fg:w="3"/><text x="15.8676%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;deno_core::ops::OpState&gt;&gt; (6 samples, 0.12%)</title><rect x="15.6770%" y="693" width="0.1188%" height="15" fill="rgb(201,201,59)" fg:x="792" fg:w="6"/><text x="15.9270%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (6 samples, 0.12%)</title><rect x="15.6770%" y="677" width="0.1188%" height="15" fill="rgb(194,194,57)" fg:x="792" fg:w="6"/><text x="15.9270%" y="687.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (6 samples, 0.12%)</title><rect x="15.6770%" y="661" width="0.1188%" height="15" fill="rgb(210,210,63)" fg:x="792" fg:w="6"/><text x="15.9270%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.12%)</title><rect x="15.6770%" y="645" width="0.1188%" height="15" fill="rgb(183,183,53)" fg:x="792" fg:w="6"/><text x="15.9270%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.12%)</title><rect x="15.6770%" y="629" width="0.1188%" height="15" fill="rgb(194,194,56)" fg:x="792" fg:w="6"/><text x="15.9270%" y="639.50"></text></g><g><title>core::mem::replace (6 samples, 0.12%)</title><rect x="15.6770%" y="613" width="0.1188%" height="15" fill="rgb(228,228,69)" fg:x="792" fg:w="6"/><text x="15.9270%" y="623.50"></text></g><g><title>core::ptr::write (6 samples, 0.12%)</title><rect x="15.6770%" y="597" width="0.1188%" height="15" fill="rgb(207,207,61)" fg:x="792" fg:w="6"/><text x="15.9270%" y="607.50"></text></g><g><title>ret_from_intr (2 samples, 0.04%)</title><rect x="15.7561%" y="581" width="0.0396%" height="15" fill="rgb(207,61,61)" fg:x="796" fg:w="2"/><text x="16.0061%" y="591.50"></text></g><g><title>do_IRQ (2 samples, 0.04%)</title><rect x="15.7561%" y="565" width="0.0396%" height="15" fill="rgb(232,97,97)" fg:x="796" fg:w="2"/><text x="16.0061%" y="575.50"></text></g><g><title>handle_fasteoi_irq (2 samples, 0.04%)</title><rect x="15.7561%" y="549" width="0.0396%" height="15" fill="rgb(220,80,80)" fg:x="796" fg:w="2"/><text x="16.0061%" y="559.50"></text></g><g><title>handle_irq_event (2 samples, 0.04%)</title><rect x="15.7561%" y="533" width="0.0396%" height="15" fill="rgb(242,111,111)" fg:x="796" fg:w="2"/><text x="16.0061%" y="543.50"></text></g><g><title>handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="15.7561%" y="517" width="0.0396%" height="15" fill="rgb(215,72,72)" fg:x="796" fg:w="2"/><text x="16.0061%" y="527.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="15.7561%" y="501" width="0.0396%" height="15" fill="rgb(208,62,62)" fg:x="796" fg:w="2"/><text x="16.0061%" y="511.50"></text></g><g><title>i2c_dw_isr (2 samples, 0.04%)</title><rect x="15.7561%" y="485" width="0.0396%" height="15" fill="rgb(215,72,72)" fg:x="796" fg:w="2"/><text x="16.0061%" y="495.50"></text></g><g><title>dw_readl (2 samples, 0.04%)</title><rect x="15.7561%" y="469" width="0.0396%" height="15" fill="rgb(217,76,76)" fg:x="796" fg:w="2"/><text x="16.0061%" y="479.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="15.7957%" y="629" width="0.0198%" height="15" fill="rgb(221,80,80)" fg:x="798" fg:w="1"/><text x="16.0457%" y="639.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="15.7957%" y="613" width="0.0198%" height="15" fill="rgb(248,121,121)" fg:x="798" fg:w="1"/><text x="16.0457%" y="623.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="15.7957%" y="597" width="0.0198%" height="15" fill="rgb(218,77,77)" fg:x="798" fg:w="1"/><text x="16.0457%" y="607.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="15.7957%" y="581" width="0.0198%" height="15" fill="rgb(218,76,76)" fg:x="798" fg:w="1"/><text x="16.0457%" y="591.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="15.7957%" y="565" width="0.0198%" height="15" fill="rgb(233,98,98)" fg:x="798" fg:w="1"/><text x="16.0457%" y="575.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="15.7957%" y="549" width="0.0198%" height="15" fill="rgb(232,97,97)" fg:x="798" fg:w="1"/><text x="16.0457%" y="559.50"></text></g><g><title>idma64_irq (1 samples, 0.02%)</title><rect x="15.7957%" y="533" width="0.0198%" height="15" fill="rgb(206,59,59)" fg:x="798" fg:w="1"/><text x="16.0457%" y="543.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="22.6445%" y="565" width="0.0198%" height="15" fill="rgb(239,107,107)" fg:x="1144" fg:w="1"/><text x="22.8945%" y="575.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="22.6445%" y="549" width="0.0198%" height="15" fill="rgb(240,109,109)" fg:x="1144" fg:w="1"/><text x="22.8945%" y="559.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="22.6445%" y="533" width="0.0198%" height="15" fill="rgb(220,79,79)" fg:x="1144" fg:w="1"/><text x="22.8945%" y="543.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="22.6445%" y="517" width="0.0198%" height="15" fill="rgb(211,67,67)" fg:x="1144" fg:w="1"/><text x="22.8945%" y="527.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="22.6445%" y="501" width="0.0198%" height="15" fill="rgb(204,56,56)" fg:x="1144" fg:w="1"/><text x="22.8945%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedRef&lt;v8::array_buffer::BackingStore&gt;&gt; (348 samples, 6.89%)</title><rect x="15.7957%" y="693" width="6.8884%" height="15" fill="rgb(194,194,57)" fg:x="798" fg:w="348"/><text x="16.0457%" y="703.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;v8::support::SharedPtrBase&lt;v8::array_buffer::BackingStore&gt;&gt; (348 samples, 6.89%)</title><rect x="15.7957%" y="677" width="6.8884%" height="15" fill="rgb(222,222,67)" fg:x="798" fg:w="348"/><text x="16.0457%" y="687.50">core::ptr..</text></g><g><title>&lt;v8::support::SharedPtrBase&lt;T&gt; as core::ops::drop::Drop&gt;::drop (348 samples, 6.89%)</title><rect x="15.7957%" y="661" width="6.8884%" height="15" fill="rgb(220,220,66)" fg:x="798" fg:w="348"/><text x="16.0457%" y="671.50">&lt;v8::supp..</text></g><g><title>&lt;v8::array_buffer::BackingStore as v8::support::Shared&gt;::reset (348 samples, 6.89%)</title><rect x="15.7957%" y="645" width="6.8884%" height="15" fill="rgb(225,225,68)" fg:x="798" fg:w="348"/><text x="16.0457%" y="655.50">&lt;v8::arra..</text></g><g><title>std__shared_ptr__v8__BackingStore__reset (347 samples, 6.87%)</title><rect x="15.8155%" y="629" width="6.8686%" height="15" fill="rgb(238,106,106)" fg:x="799" fg:w="347"/><text x="16.0655%" y="639.50">std__shar..</text></g><g><title>ret_from_intr (2 samples, 0.04%)</title><rect x="22.6445%" y="613" width="0.0396%" height="15" fill="rgb(254,129,129)" fg:x="1144" fg:w="2"/><text x="22.8945%" y="623.50"></text></g><g><title>do_IRQ (2 samples, 0.04%)</title><rect x="22.6445%" y="597" width="0.0396%" height="15" fill="rgb(220,80,80)" fg:x="1144" fg:w="2"/><text x="22.8945%" y="607.50"></text></g><g><title>handle_fasteoi_irq (2 samples, 0.04%)</title><rect x="22.6445%" y="581" width="0.0396%" height="15" fill="rgb(210,65,65)" fg:x="1144" fg:w="2"/><text x="22.8945%" y="591.50"></text></g><g><title>mask_irq.part.36 (1 samples, 0.02%)</title><rect x="22.6643%" y="565" width="0.0198%" height="15" fill="rgb(242,111,111)" fg:x="1145" fg:w="1"/><text x="22.9143%" y="575.50"></text></g><g><title>mask_ioapic_irq (1 samples, 0.02%)</title><rect x="22.6643%" y="549" width="0.0198%" height="15" fill="rgb(242,112,112)" fg:x="1145" fg:w="1"/><text x="22.9143%" y="559.50"></text></g><g><title>io_apic_modify_irq (1 samples, 0.02%)</title><rect x="22.6643%" y="533" width="0.0198%" height="15" fill="rgb(252,126,126)" fg:x="1145" fg:w="1"/><text x="22.9143%" y="543.50"></text></g><g><title>io_apic_sync (1 samples, 0.02%)</title><rect x="22.6643%" y="517" width="0.0198%" height="15" fill="rgb(240,108,108)" fg:x="1145" fg:w="1"/><text x="22.9143%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (21 samples, 0.42%)</title><rect x="22.6841%" y="693" width="0.4157%" height="15" fill="rgb(179,179,51)" fg:x="1146" fg:w="21"/><text x="22.9341%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (21 samples, 0.42%)</title><rect x="22.6841%" y="677" width="0.4157%" height="15" fill="rgb(176,176,50)" fg:x="1146" fg:w="21"/><text x="22.9341%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16 samples, 0.32%)</title><rect x="22.7831%" y="661" width="0.3167%" height="15" fill="rgb(209,209,62)" fg:x="1151" fg:w="16"/><text x="23.0331%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (16 samples, 0.32%)</title><rect x="22.7831%" y="645" width="0.3167%" height="15" fill="rgb(206,206,61)" fg:x="1151" fg:w="16"/><text x="23.0331%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (16 samples, 0.32%)</title><rect x="22.7831%" y="629" width="0.3167%" height="15" fill="rgb(176,176,50)" fg:x="1151" fg:w="16"/><text x="23.0331%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;deno_core::ops_metrics::OpMetrics&gt;&gt; (25 samples, 0.49%)</title><rect x="23.5946%" y="677" width="0.4949%" height="15" fill="rgb(198,198,58)" fg:x="1192" fg:w="25"/><text x="23.8446%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (25 samples, 0.49%)</title><rect x="23.5946%" y="661" width="0.4949%" height="15" fill="rgb(175,175,50)" fg:x="1192" fg:w="25"/><text x="23.8446%" y="671.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (25 samples, 0.49%)</title><rect x="23.5946%" y="645" width="0.4949%" height="15" fill="rgb(225,225,68)" fg:x="1192" fg:w="25"/><text x="23.8446%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (25 samples, 0.49%)</title><rect x="23.5946%" y="629" width="0.4949%" height="15" fill="rgb(207,207,61)" fg:x="1192" fg:w="25"/><text x="23.8446%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (25 samples, 0.49%)</title><rect x="23.5946%" y="613" width="0.4949%" height="15" fill="rgb(207,207,61)" fg:x="1192" fg:w="25"/><text x="23.8446%" y="623.50"></text></g><g><title>core::mem::replace (25 samples, 0.49%)</title><rect x="23.5946%" y="597" width="0.4949%" height="15" fill="rgb(179,179,51)" fg:x="1192" fg:w="25"/><text x="23.8446%" y="607.50"></text></g><g><title>core::ptr::write (25 samples, 0.49%)</title><rect x="23.5946%" y="581" width="0.4949%" height="15" fill="rgb(219,219,66)" fg:x="1192" fg:w="25"/><text x="23.8446%" y="591.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="24.0895%" y="661" width="0.0396%" height="15" fill="rgb(227,227,69)" fg:x="1217" fg:w="2"/><text x="24.3395%" y="671.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="24.0895%" y="645" width="0.0396%" height="15" fill="rgb(218,218,65)" fg:x="1217" fg:w="2"/><text x="24.3395%" y="655.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="24.0895%" y="629" width="0.0396%" height="15" fill="rgb(188,188,54)" fg:x="1217" fg:w="2"/><text x="24.3395%" y="639.50"></text></g><g><title>deno_core::ops_metrics::OpsTracker::track_sync (65 samples, 1.29%)</title><rect x="23.0998%" y="693" width="1.2866%" height="15" fill="rgb(198,198,58)" fg:x="1167" fg:w="65"/><text x="23.3498%" y="703.50"></text></g><g><title>deno_core::ops_metrics::OpsTracker::metrics_mut (15 samples, 0.30%)</title><rect x="24.0895%" y="677" width="0.2969%" height="15" fill="rgb(225,225,68)" fg:x="1217" fg:w="15"/><text x="24.3395%" y="687.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (13 samples, 0.26%)</title><rect x="24.1291%" y="661" width="0.2573%" height="15" fill="rgb(176,176,50)" fg:x="1219" fg:w="13"/><text x="24.3791%" y="671.50"></text></g><g><title>deno_core::ops_metrics::OpsTracker::metrics_mut::_{{closure}} (13 samples, 0.26%)</title><rect x="24.1291%" y="645" width="0.2573%" height="15" fill="rgb(223,223,67)" fg:x="1219" fg:w="13"/><text x="24.3791%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (13 samples, 0.26%)</title><rect x="24.1291%" y="629" width="0.2573%" height="15" fill="rgb(224,224,67)" fg:x="1219" fg:w="13"/><text x="24.3791%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.26%)</title><rect x="24.1291%" y="613" width="0.2573%" height="15" fill="rgb(188,188,54)" fg:x="1219" fg:w="13"/><text x="24.3791%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.26%)</title><rect x="24.1291%" y="597" width="0.2573%" height="15" fill="rgb(219,219,66)" fg:x="1219" fg:w="13"/><text x="24.3791%" y="607.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="24.3864%" y="693" width="0.0198%" height="15" fill="rgb(226,88,88)" fg:x="1232" fg:w="1"/><text x="24.6364%" y="703.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="24.3864%" y="677" width="0.0198%" height="15" fill="rgb(235,101,101)" fg:x="1232" fg:w="1"/><text x="24.6364%" y="687.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="24.3864%" y="661" width="0.0198%" height="15" fill="rgb(249,121,121)" fg:x="1232" fg:w="1"/><text x="24.6364%" y="671.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="24.3864%" y="645" width="0.0198%" height="15" fill="rgb(236,103,103)" fg:x="1232" fg:w="1"/><text x="24.6364%" y="655.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="24.3864%" y="629" width="0.0198%" height="15" fill="rgb(236,103,103)" fg:x="1232" fg:w="1"/><text x="24.6364%" y="639.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="24.3864%" y="613" width="0.0198%" height="15" fill="rgb(233,98,98)" fg:x="1232" fg:w="1"/><text x="24.6364%" y="623.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="24.3864%" y="597" width="0.0198%" height="15" fill="rgb(215,72,72)" fg:x="1232" fg:w="1"/><text x="24.6364%" y="607.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="24.3864%" y="581" width="0.0198%" height="15" fill="rgb(211,66,66)" fg:x="1232" fg:w="1"/><text x="24.6364%" y="591.50"></text></g><g><title>v8::scope::data::ScopeData::get_isolate_mut (10 samples, 0.20%)</title><rect x="24.4260%" y="645" width="0.1979%" height="15" fill="rgb(192,192,56)" fg:x="1234" fg:w="10"/><text x="24.6760%" y="655.50"></text></g><g><title>&lt;v8::scope::HandleScope&lt;()&gt; as core::ops::deref::DerefMut&gt;::deref_mut (21 samples, 0.42%)</title><rect x="24.4260%" y="677" width="0.4157%" height="15" fill="rgb(185,185,53)" fg:x="1234" fg:w="21"/><text x="24.6760%" y="687.50"></text></g><g><title>&lt;v8::scope::HandleScope&lt;C&gt; as core::convert::AsMut&lt;v8::isolate::Isolate&gt;&gt;::as_mut (21 samples, 0.42%)</title><rect x="24.4260%" y="661" width="0.4157%" height="15" fill="rgb(210,210,63)" fg:x="1234" fg:w="21"/><text x="24.6760%" y="671.50"></text></g><g><title>v8::scope::data::ScopeData::get_mut (11 samples, 0.22%)</title><rect x="24.6239%" y="645" width="0.2177%" height="15" fill="rgb(181,181,52)" fg:x="1244" fg:w="11"/><text x="24.8739%" y="655.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (11 samples, 0.22%)</title><rect x="24.6239%" y="629" width="0.2177%" height="15" fill="rgb(206,206,61)" fg:x="1244" fg:w="11"/><text x="24.8739%" y="639.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::String&gt;&gt;::try_from (36 samples, 0.71%)</title><rect x="24.8416%" y="677" width="0.7126%" height="15" fill="rgb(191,191,55)" fg:x="1255" fg:w="36"/><text x="25.0916%" y="687.50"></text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_string (24 samples, 0.48%)</title><rect x="25.0792%" y="661" width="0.4751%" height="15" fill="rgb(191,191,55)" fg:x="1267" fg:w="24"/><text x="25.3292%" y="671.50"></text></g><g><title>v8__Value__IsString (23 samples, 0.46%)</title><rect x="25.0990%" y="645" width="0.4553%" height="15" fill="rgb(234,99,99)" fg:x="1268" fg:w="23"/><text x="25.3490%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (8 samples, 0.16%)</title><rect x="26.0095%" y="661" width="0.1584%" height="15" fill="rgb(181,181,52)" fg:x="1314" fg:w="8"/><text x="26.2595%" y="671.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="26.1481%" y="645" width="0.0198%" height="15" fill="rgb(228,91,91)" fg:x="1321" fg:w="1"/><text x="26.3981%" y="655.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="26.1481%" y="629" width="0.0198%" height="15" fill="rgb(223,84,84)" fg:x="1321" fg:w="1"/><text x="26.3981%" y="639.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="26.1481%" y="613" width="0.0198%" height="15" fill="rgb(206,59,59)" fg:x="1321" fg:w="1"/><text x="26.3981%" y="623.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="26.1481%" y="597" width="0.0198%" height="15" fill="rgb(234,99,99)" fg:x="1321" fg:w="1"/><text x="26.3981%" y="607.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="26.1481%" y="581" width="0.0198%" height="15" fill="rgb(220,79,79)" fg:x="1321" fg:w="1"/><text x="26.3981%" y="591.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="26.1481%" y="565" width="0.0198%" height="15" fill="rgb(220,79,79)" fg:x="1321" fg:w="1"/><text x="26.3981%" y="575.50"></text></g><g><title>idma64_irq (1 samples, 0.02%)</title><rect x="26.1481%" y="549" width="0.0198%" height="15" fill="rgb(249,121,121)" fg:x="1321" fg:w="1"/><text x="26.3981%" y="559.50"></text></g><g><title>[runjs] (8 samples, 0.16%)</title><rect x="36.2827%" y="645" width="0.1584%" height="15" fill="rgb(248,120,120)" fg:x="1833" fg:w="8"/><text x="36.5327%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (46 samples, 0.91%)</title><rect x="36.4410%" y="645" width="0.9105%" height="15" fill="rgb(214,70,70)" fg:x="1841" fg:w="46"/><text x="36.6910%" y="655.50"></text></g><g><title>ret_from_intr (2 samples, 0.04%)</title><rect x="37.3120%" y="629" width="0.0396%" height="15" fill="rgb(242,112,112)" fg:x="1885" fg:w="2"/><text x="37.5620%" y="639.50"></text></g><g><title>do_IRQ (2 samples, 0.04%)</title><rect x="37.3120%" y="613" width="0.0396%" height="15" fill="rgb(203,55,55)" fg:x="1885" fg:w="2"/><text x="37.5620%" y="623.50"></text></g><g><title>handle_fasteoi_irq (2 samples, 0.04%)</title><rect x="37.3120%" y="597" width="0.0396%" height="15" fill="rgb(206,59,59)" fg:x="1885" fg:w="2"/><text x="37.5620%" y="607.50"></text></g><g><title>handle_irq_event (2 samples, 0.04%)</title><rect x="37.3120%" y="581" width="0.0396%" height="15" fill="rgb(208,62,62)" fg:x="1885" fg:w="2"/><text x="37.5620%" y="591.50"></text></g><g><title>handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="37.3120%" y="565" width="0.0396%" height="15" fill="rgb(216,73,73)" fg:x="1885" fg:w="2"/><text x="37.5620%" y="575.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="37.3120%" y="549" width="0.0396%" height="15" fill="rgb(228,91,91)" fg:x="1885" fg:w="2"/><text x="37.5620%" y="559.50"></text></g><g><title>i2c_dw_isr (2 samples, 0.04%)</title><rect x="37.3120%" y="533" width="0.0396%" height="15" fill="rgb(223,84,84)" fg:x="1885" fg:w="2"/><text x="37.5620%" y="543.50"></text></g><g><title>dw_readl (2 samples, 0.04%)</title><rect x="37.3120%" y="517" width="0.0396%" height="15" fill="rgb(201,52,52)" fg:x="1885" fg:w="2"/><text x="37.5620%" y="527.50"></text></g><g><title>i2c_dw_isr (4 samples, 0.08%)</title><rect x="37.3515%" y="549" width="0.0792%" height="15" fill="rgb(223,84,84)" fg:x="1887" fg:w="4"/><text x="37.6015%" y="559.50"></text></g><g><title>dw_readl (4 samples, 0.08%)</title><rect x="37.3515%" y="533" width="0.0792%" height="15" fill="rgb(201,51,51)" fg:x="1887" fg:w="4"/><text x="37.6015%" y="543.50"></text></g><g><title>v8::String::WriteUtf8 (571 samples, 11.30%)</title><rect x="26.1679%" y="661" width="11.3025%" height="15" fill="rgb(220,220,66)" fg:x="1322" fg:w="571"/><text x="26.4179%" y="671.50">v8::String::Write..</text></g><g><title>ret_from_intr (6 samples, 0.12%)</title><rect x="37.3515%" y="645" width="0.1188%" height="15" fill="rgb(220,79,79)" fg:x="1887" fg:w="6"/><text x="37.6015%" y="655.50"></text></g><g><title>do_IRQ (6 samples, 0.12%)</title><rect x="37.3515%" y="629" width="0.1188%" height="15" fill="rgb(224,85,85)" fg:x="1887" fg:w="6"/><text x="37.6015%" y="639.50"></text></g><g><title>handle_fasteoi_irq (6 samples, 0.12%)</title><rect x="37.3515%" y="613" width="0.1188%" height="15" fill="rgb(240,108,108)" fg:x="1887" fg:w="6"/><text x="37.6015%" y="623.50"></text></g><g><title>handle_irq_event (6 samples, 0.12%)</title><rect x="37.3515%" y="597" width="0.1188%" height="15" fill="rgb(227,89,89)" fg:x="1887" fg:w="6"/><text x="37.6015%" y="607.50"></text></g><g><title>handle_irq_event_percpu (6 samples, 0.12%)</title><rect x="37.3515%" y="581" width="0.1188%" height="15" fill="rgb(244,114,114)" fg:x="1887" fg:w="6"/><text x="37.6015%" y="591.50"></text></g><g><title>__handle_irq_event_percpu (6 samples, 0.12%)</title><rect x="37.3515%" y="565" width="0.1188%" height="15" fill="rgb(222,83,83)" fg:x="1887" fg:w="6"/><text x="37.6015%" y="575.50"></text></g><g><title>idma64_irq (2 samples, 0.04%)</title><rect x="37.4307%" y="549" width="0.0396%" height="15" fill="rgb(245,115,115)" fg:x="1891" fg:w="2"/><text x="37.6807%" y="559.50"></text></g><g><title>v8::Value::IsArrayBufferView (1 samples, 0.02%)</title><rect x="37.4703%" y="661" width="0.0198%" height="15" fill="rgb(211,211,63)" fg:x="1893" fg:w="1"/><text x="37.7203%" y="671.50"></text></g><g><title>interrupt_entry (1 samples, 0.02%)</title><rect x="37.4703%" y="645" width="0.0198%" height="15" fill="rgb(205,57,57)" fg:x="1893" fg:w="1"/><text x="37.7203%" y="655.50"></text></g><g><title>runjs::op_encoding_encode_into_fast::call (669 samples, 13.24%)</title><rect x="24.4062%" y="693" width="13.2423%" height="15" fill="rgb(225,225,68)" fg:x="1233" fg:w="669"/><text x="24.6562%" y="703.50">runjs::op_encoding_e..</text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::write_utf8 (611 samples, 12.09%)</title><rect x="25.5542%" y="677" width="12.0942%" height="15" fill="rgb(208,208,62)" fg:x="1291" fg:w="611"/><text x="25.8042%" y="687.50">v8::string::&lt;impl ..</text></g><g><title>v8__String__WriteUtf8 (8 samples, 0.16%)</title><rect x="37.4901%" y="661" width="0.1584%" height="15" fill="rgb(222,83,83)" fg:x="1894" fg:w="8"/><text x="37.7401%" y="671.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="37.6485%" y="677" width="0.0198%" height="15" fill="rgb(242,112,112)" fg:x="1902" fg:w="1"/><text x="37.8985%" y="687.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="37.6485%" y="661" width="0.0198%" height="15" fill="rgb(239,106,106)" fg:x="1902" fg:w="1"/><text x="37.8985%" y="671.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="37.6485%" y="645" width="0.0198%" height="15" fill="rgb(208,62,62)" fg:x="1902" fg:w="1"/><text x="37.8985%" y="655.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="37.6485%" y="629" width="0.0198%" height="15" fill="rgb(239,107,107)" fg:x="1902" fg:w="1"/><text x="37.8985%" y="639.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="37.6485%" y="613" width="0.0198%" height="15" fill="rgb(249,121,121)" fg:x="1902" fg:w="1"/><text x="37.8985%" y="623.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="37.6485%" y="597" width="0.0198%" height="15" fill="rgb(228,90,90)" fg:x="1902" fg:w="1"/><text x="37.8985%" y="607.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="37.6485%" y="581" width="0.0198%" height="15" fill="rgb(225,87,87)" fg:x="1902" fg:w="1"/><text x="37.8985%" y="591.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="37.6485%" y="565" width="0.0198%" height="15" fill="rgb(233,98,98)" fg:x="1902" fg:w="1"/><text x="37.8985%" y="575.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="37.6485%" y="549" width="0.0198%" height="15" fill="rgb(220,79,79)" fg:x="1902" fg:w="1"/><text x="37.8985%" y="559.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="70.7047%" y="581" width="0.0198%" height="15" fill="rgb(245,115,115)" fg:x="3572" fg:w="1"/><text x="70.9547%" y="591.50"></text></g><g><title>tick_do_update_jiffies64.part.14 (1 samples, 0.02%)</title><rect x="70.7047%" y="565" width="0.0198%" height="15" fill="rgb(226,89,89)" fg:x="3572" fg:w="1"/><text x="70.9547%" y="575.50"></text></g><g><title>calc_global_load (1 samples, 0.02%)</title><rect x="70.7047%" y="549" width="0.0198%" height="15" fill="rgb(220,79,79)" fg:x="3572" fg:w="1"/><text x="70.9547%" y="559.50"></text></g><g><title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="70.7047%" y="661" width="0.0396%" height="15" fill="rgb(246,117,117)" fg:x="3572" fg:w="2"/><text x="70.9547%" y="671.50"></text></g><g><title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="70.7047%" y="645" width="0.0396%" height="15" fill="rgb(206,59,59)" fg:x="3572" fg:w="2"/><text x="70.9547%" y="655.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.04%)</title><rect x="70.7047%" y="629" width="0.0396%" height="15" fill="rgb(213,69,69)" fg:x="3572" fg:w="2"/><text x="70.9547%" y="639.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.04%)</title><rect x="70.7047%" y="613" width="0.0396%" height="15" fill="rgb(251,125,125)" fg:x="3572" fg:w="2"/><text x="70.9547%" y="623.50"></text></g><g><title>tick_sched_timer (2 samples, 0.04%)</title><rect x="70.7047%" y="597" width="0.0396%" height="15" fill="rgb(248,120,120)" fg:x="3572" fg:w="2"/><text x="70.9547%" y="607.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="70.7245%" y="581" width="0.0198%" height="15" fill="rgb(227,90,90)" fg:x="3573" fg:w="1"/><text x="70.9745%" y="591.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="70.7245%" y="565" width="0.0198%" height="15" fill="rgb(217,75,75)" fg:x="3573" fg:w="1"/><text x="70.9745%" y="575.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="70.7245%" y="549" width="0.0198%" height="15" fill="rgb(233,98,98)" fg:x="3573" fg:w="1"/><text x="70.9745%" y="559.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="70.7245%" y="533" width="0.0198%" height="15" fill="rgb(204,56,56)" fg:x="3573" fg:w="1"/><text x="70.9745%" y="543.50"></text></g><g><title>i2c_dw_isr (11 samples, 0.22%)</title><rect x="70.7443%" y="565" width="0.2177%" height="15" fill="rgb(247,119,119)" fg:x="3574" fg:w="11"/><text x="70.9943%" y="575.50"></text></g><g><title>dw_readl (11 samples, 0.22%)</title><rect x="70.7443%" y="549" width="0.2177%" height="15" fill="rgb(226,88,88)" fg:x="3574" fg:w="11"/><text x="70.9943%" y="559.50"></text></g><g><title>ret_from_intr (12 samples, 0.24%)</title><rect x="70.7443%" y="661" width="0.2375%" height="15" fill="rgb(229,92,92)" fg:x="3574" fg:w="12"/><text x="70.9943%" y="671.50"></text></g><g><title>do_IRQ (12 samples, 0.24%)</title><rect x="70.7443%" y="645" width="0.2375%" height="15" fill="rgb(221,81,81)" fg:x="3574" fg:w="12"/><text x="70.9943%" y="655.50"></text></g><g><title>handle_fasteoi_irq (12 samples, 0.24%)</title><rect x="70.7443%" y="629" width="0.2375%" height="15" fill="rgb(236,103,103)" fg:x="3574" fg:w="12"/><text x="70.9943%" y="639.50"></text></g><g><title>handle_irq_event (12 samples, 0.24%)</title><rect x="70.7443%" y="613" width="0.2375%" height="15" fill="rgb(235,101,101)" fg:x="3574" fg:w="12"/><text x="70.9943%" y="623.50"></text></g><g><title>handle_irq_event_percpu (12 samples, 0.24%)</title><rect x="70.7443%" y="597" width="0.2375%" height="15" fill="rgb(238,105,105)" fg:x="3574" fg:w="12"/><text x="70.9943%" y="607.50"></text></g><g><title>__handle_irq_event_percpu (12 samples, 0.24%)</title><rect x="70.7443%" y="581" width="0.2375%" height="15" fill="rgb(212,68,68)" fg:x="3574" fg:w="12"/><text x="70.9943%" y="591.50"></text></g><g><title>idma64_irq (1 samples, 0.02%)</title><rect x="70.9620%" y="565" width="0.0198%" height="15" fill="rgb(232,97,97)" fg:x="3585" fg:w="1"/><text x="71.2120%" y="575.50"></text></g><g><title>v8::ArrayBuffer::GetBackingStore (1,685 samples, 33.35%)</title><rect x="37.6683%" y="677" width="33.3531%" height="15" fill="rgb(194,194,56)" fg:x="1903" fg:w="1685"/><text x="37.9183%" y="687.50">v8::ArrayBuffer::GetBackingStore</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="70.9818%" y="661" width="0.0396%" height="15" fill="rgb(225,86,86)" fg:x="3586" fg:w="2"/><text x="71.2318%" y="671.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="70.9818%" y="645" width="0.0396%" height="15" fill="rgb(242,112,112)" fg:x="3586" fg:w="2"/><text x="71.2318%" y="655.50"></text></g><g><title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="71.0016%" y="629" width="0.0198%" height="15" fill="rgb(202,53,53)" fg:x="3587" fg:w="1"/><text x="71.2516%" y="639.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="71.0016%" y="613" width="0.0198%" height="15" fill="rgb(225,87,87)" fg:x="3587" fg:w="1"/><text x="71.2516%" y="623.50"></text></g><g><title>__sched_text_start (1 samples, 0.02%)</title><rect x="71.0016%" y="597" width="0.0198%" height="15" fill="rgb(252,126,126)" fg:x="3587" fg:w="1"/><text x="71.2516%" y="607.50"></text></g><g><title>v8::array_buffer::&lt;impl v8::data::ArrayBuffer&gt;::get_backing_store (1,687 samples, 33.39%)</title><rect x="37.6485%" y="693" width="33.3927%" height="15" fill="rgb(187,187,54)" fg:x="1902" fg:w="1687"/><text x="37.8985%" y="703.50">v8::array_buffer::&lt;impl v8::data::ArrayBuffer&gt;::get_ba..</text></g><g><title>v8__ArrayBuffer__GetBackingStore (1 samples, 0.02%)</title><rect x="71.0214%" y="677" width="0.0198%" height="15" fill="rgb(237,104,104)" fg:x="3588" fg:w="1"/><text x="71.2714%" y="687.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="71.0214%" y="661" width="0.0198%" height="15" fill="rgb(205,57,57)" fg:x="3588" fg:w="1"/><text x="71.2714%" y="671.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="71.0214%" y="645" width="0.0198%" height="15" fill="rgb(204,56,56)" fg:x="3588" fg:w="1"/><text x="71.2714%" y="655.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="71.0214%" y="629" width="0.0198%" height="15" fill="rgb(210,65,65)" fg:x="3588" fg:w="1"/><text x="71.2714%" y="639.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="71.0214%" y="613" width="0.0198%" height="15" fill="rgb(224,86,86)" fg:x="3588" fg:w="1"/><text x="71.2714%" y="623.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="71.0214%" y="597" width="0.0198%" height="15" fill="rgb(219,78,78)" fg:x="3588" fg:w="1"/><text x="71.2714%" y="607.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="71.0214%" y="581" width="0.0198%" height="15" fill="rgb(208,61,61)" fg:x="3588" fg:w="1"/><text x="71.2714%" y="591.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="71.0214%" y="565" width="0.0198%" height="15" fill="rgb(250,123,123)" fg:x="3588" fg:w="1"/><text x="71.2714%" y="575.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="71.0214%" y="549" width="0.0198%" height="15" fill="rgb(236,103,103)" fg:x="3588" fg:w="1"/><text x="71.2714%" y="559.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="71.4173%" y="661" width="0.0198%" height="15" fill="rgb(215,72,72)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="671.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="71.4173%" y="645" width="0.0198%" height="15" fill="rgb(238,106,106)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="655.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="71.4173%" y="629" width="0.0198%" height="15" fill="rgb(233,98,98)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="639.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="71.4173%" y="613" width="0.0198%" height="15" fill="rgb(254,129,129)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="623.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="71.4173%" y="597" width="0.0198%" height="15" fill="rgb(250,122,122)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="607.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="71.4173%" y="581" width="0.0198%" height="15" fill="rgb(239,107,107)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="591.50"></text></g><g><title>tick_do_update_jiffies64.part.14 (1 samples, 0.02%)</title><rect x="71.4173%" y="565" width="0.0198%" height="15" fill="rgb(203,55,55)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="575.50"></text></g><g><title>update_wall_time (1 samples, 0.02%)</title><rect x="71.4173%" y="549" width="0.0198%" height="15" fill="rgb(208,62,62)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="559.50"></text></g><g><title>timekeeping_advance (1 samples, 0.02%)</title><rect x="71.4173%" y="533" width="0.0198%" height="15" fill="rgb(243,113,113)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="543.50"></text></g><g><title>timekeeping_update (1 samples, 0.02%)</title><rect x="71.4173%" y="517" width="0.0198%" height="15" fill="rgb(209,63,63)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="527.50"></text></g><g><title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="71.4173%" y="501" width="0.0198%" height="15" fill="rgb(226,88,88)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="511.50"></text></g><g><title>pvclock_gtod_notify (1 samples, 0.02%)</title><rect x="71.4173%" y="485" width="0.0198%" height="15" fill="rgb(246,117,117)" fg:x="3608" fg:w="1"/><text x="71.6673%" y="495.50"></text></g><g><title>v8::BackingStore::IsShared (22 samples, 0.44%)</title><rect x="71.0412%" y="677" width="0.4355%" height="15" fill="rgb(200,200,59)" fg:x="3589" fg:w="22"/><text x="71.2912%" y="687.50"></text></g><g><title>ret_from_intr (2 samples, 0.04%)</title><rect x="71.4371%" y="661" width="0.0396%" height="15" fill="rgb(253,128,128)" fg:x="3609" fg:w="2"/><text x="71.6871%" y="671.50"></text></g><g><title>do_IRQ (2 samples, 0.04%)</title><rect x="71.4371%" y="645" width="0.0396%" height="15" fill="rgb(254,129,129)" fg:x="3609" fg:w="2"/><text x="71.6871%" y="655.50"></text></g><g><title>handle_fasteoi_irq (2 samples, 0.04%)</title><rect x="71.4371%" y="629" width="0.0396%" height="15" fill="rgb(247,118,118)" fg:x="3609" fg:w="2"/><text x="71.6871%" y="639.50"></text></g><g><title>handle_irq_event (2 samples, 0.04%)</title><rect x="71.4371%" y="613" width="0.0396%" height="15" fill="rgb(250,122,122)" fg:x="3609" fg:w="2"/><text x="71.6871%" y="623.50"></text></g><g><title>handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="71.4371%" y="597" width="0.0396%" height="15" fill="rgb(246,118,118)" fg:x="3609" fg:w="2"/><text x="71.6871%" y="607.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="71.4371%" y="581" width="0.0396%" height="15" fill="rgb(222,82,82)" fg:x="3609" fg:w="2"/><text x="71.6871%" y="591.50"></text></g><g><title>i2c_dw_isr (2 samples, 0.04%)</title><rect x="71.4371%" y="565" width="0.0396%" height="15" fill="rgb(209,64,64)" fg:x="3609" fg:w="2"/><text x="71.6871%" y="575.50"></text></g><g><title>dw_readl (2 samples, 0.04%)</title><rect x="71.4371%" y="549" width="0.0396%" height="15" fill="rgb(226,88,88)" fg:x="3609" fg:w="2"/><text x="71.6871%" y="559.50"></text></g><g><title>v8::array_buffer::BackingStore::is_shared (35 samples, 0.69%)</title><rect x="71.0412%" y="693" width="0.6928%" height="15" fill="rgb(210,210,62)" fg:x="3589" fg:w="35"/><text x="71.2912%" y="703.50"></text></g><g><title>v8__BackingStore__IsShared (13 samples, 0.26%)</title><rect x="71.4766%" y="677" width="0.2573%" height="15" fill="rgb(207,60,60)" fg:x="3611" fg:w="13"/><text x="71.7266%" y="687.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="71.8725%" y="645" width="0.0198%" height="15" fill="rgb(217,75,75)" fg:x="3631" fg:w="1"/><text x="72.1225%" y="655.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="71.8725%" y="629" width="0.0198%" height="15" fill="rgb(251,124,124)" fg:x="3631" fg:w="1"/><text x="72.1225%" y="639.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="71.8725%" y="613" width="0.0198%" height="15" fill="rgb(226,88,88)" fg:x="3631" fg:w="1"/><text x="72.1225%" y="623.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="71.8725%" y="597" width="0.0198%" height="15" fill="rgb(205,57,57)" fg:x="3631" fg:w="1"/><text x="72.1225%" y="607.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="71.8725%" y="581" width="0.0198%" height="15" fill="rgb(233,98,98)" fg:x="3631" fg:w="1"/><text x="72.1225%" y="591.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="71.8725%" y="565" width="0.0198%" height="15" fill="rgb(240,109,109)" fg:x="3631" fg:w="1"/><text x="72.1225%" y="575.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="71.8725%" y="549" width="0.0198%" height="15" fill="rgb(228,91,91)" fg:x="3631" fg:w="1"/><text x="72.1225%" y="559.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="71.8725%" y="533" width="0.0198%" height="15" fill="rgb(220,79,79)" fg:x="3631" fg:w="1"/><text x="72.1225%" y="543.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.12%)</title><rect x="74.4260%" y="629" width="0.1188%" height="15" fill="rgb(209,63,63)" fg:x="3760" fg:w="6"/><text x="74.6760%" y="639.50"></text></g><g><title>prepare_exit_to_usermode (6 samples, 0.12%)</title><rect x="74.4260%" y="613" width="0.1188%" height="15" fill="rgb(228,91,91)" fg:x="3760" fg:w="6"/><text x="74.6760%" y="623.50"></text></g><g><title>exit_to_usermode_loop (6 samples, 0.12%)</title><rect x="74.4260%" y="597" width="0.1188%" height="15" fill="rgb(239,107,107)" fg:x="3760" fg:w="6"/><text x="74.6760%" y="607.50"></text></g><g><title>schedule (6 samples, 0.12%)</title><rect x="74.4260%" y="581" width="0.1188%" height="15" fill="rgb(227,89,89)" fg:x="3760" fg:w="6"/><text x="74.6760%" y="591.50"></text></g><g><title>__sched_text_start (6 samples, 0.12%)</title><rect x="74.4260%" y="565" width="0.1188%" height="15" fill="rgb(201,52,52)" fg:x="3760" fg:w="6"/><text x="74.6760%" y="575.50"></text></g><g><title>finish_task_switch (6 samples, 0.12%)</title><rect x="74.4260%" y="549" width="0.1188%" height="15" fill="rgb(207,61,61)" fg:x="3760" fg:w="6"/><text x="74.6760%" y="559.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.12%)</title><rect x="74.4260%" y="533" width="0.1188%" height="15" fill="rgb(221,81,81)" fg:x="3760" fg:w="6"/><text x="74.6760%" y="543.50"></text></g><g><title>x86_pmu_enable (6 samples, 0.12%)</title><rect x="74.4260%" y="517" width="0.1188%" height="15" fill="rgb(249,122,122)" fg:x="3760" fg:w="6"/><text x="74.6760%" y="527.50"></text></g><g><title>intel_tfa_pmu_enable_all (6 samples, 0.12%)</title><rect x="74.4260%" y="501" width="0.1188%" height="15" fill="rgb(237,104,104)" fg:x="3760" fg:w="6"/><text x="74.6760%" y="511.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (6 samples, 0.12%)</title><rect x="74.4260%" y="485" width="0.1188%" height="15" fill="rgb(246,117,117)" fg:x="3760" fg:w="6"/><text x="74.6760%" y="495.50"></text></g><g><title>native_write_msr (5 samples, 0.10%)</title><rect x="74.4458%" y="469" width="0.0990%" height="15" fill="rgb(226,88,88)" fg:x="3761" fg:w="5"/><text x="74.6958%" y="479.50"></text></g><g><title>i2c_dw_isr (2 samples, 0.04%)</title><rect x="78.8599%" y="517" width="0.0396%" height="15" fill="rgb(216,74,74)" fg:x="3984" fg:w="2"/><text x="79.1099%" y="527.50"></text></g><g><title>dw_readl (2 samples, 0.04%)</title><rect x="78.8599%" y="501" width="0.0396%" height="15" fill="rgb(206,59,59)" fg:x="3984" fg:w="2"/><text x="79.1099%" y="511.50"></text></g><g><title>v8::ArrayBufferView::Buffer (355 samples, 7.03%)</title><rect x="71.8923%" y="645" width="7.0269%" height="15" fill="rgb(200,200,59)" fg:x="3632" fg:w="355"/><text x="72.1423%" y="655.50">v8::Array..</text></g><g><title>v8::internal::JSTypedArray::GetBuffer (221 samples, 4.37%)</title><rect x="74.5447%" y="629" width="4.3745%" height="15" fill="rgb(228,228,69)" fg:x="3766" fg:w="221"/><text x="74.7947%" y="639.50">v8::i..</text></g><g><title>ret_from_intr (3 samples, 0.06%)</title><rect x="78.8599%" y="613" width="0.0594%" height="15" fill="rgb(242,112,112)" fg:x="3984" fg:w="3"/><text x="79.1099%" y="623.50"></text></g><g><title>do_IRQ (3 samples, 0.06%)</title><rect x="78.8599%" y="597" width="0.0594%" height="15" fill="rgb(205,58,58)" fg:x="3984" fg:w="3"/><text x="79.1099%" y="607.50"></text></g><g><title>handle_fasteoi_irq (3 samples, 0.06%)</title><rect x="78.8599%" y="581" width="0.0594%" height="15" fill="rgb(211,66,66)" fg:x="3984" fg:w="3"/><text x="79.1099%" y="591.50"></text></g><g><title>handle_irq_event (3 samples, 0.06%)</title><rect x="78.8599%" y="565" width="0.0594%" height="15" fill="rgb(246,118,118)" fg:x="3984" fg:w="3"/><text x="79.1099%" y="575.50"></text></g><g><title>handle_irq_event_percpu (3 samples, 0.06%)</title><rect x="78.8599%" y="549" width="0.0594%" height="15" fill="rgb(236,103,103)" fg:x="3984" fg:w="3"/><text x="79.1099%" y="559.50"></text></g><g><title>__handle_irq_event_percpu (3 samples, 0.06%)</title><rect x="78.8599%" y="533" width="0.0594%" height="15" fill="rgb(235,102,102)" fg:x="3984" fg:w="3"/><text x="79.1099%" y="543.50"></text></g><g><title>idma64_irq (1 samples, 0.02%)</title><rect x="78.8994%" y="517" width="0.0198%" height="15" fill="rgb(248,120,120)" fg:x="3986" fg:w="1"/><text x="79.1494%" y="527.50"></text></g><g><title>v8::array_buffer_view::_&lt;impl v8::data::ArrayBufferView&gt;::buffer::_{{closure}} (371 samples, 7.34%)</title><rect x="71.7340%" y="661" width="7.3436%" height="15" fill="rgb(210,210,62)" fg:x="3624" fg:w="371"/><text x="71.9840%" y="671.50">v8::array_..</text></g><g><title>v8__ArrayBufferView__Buffer (8 samples, 0.16%)</title><rect x="78.9192%" y="645" width="0.1584%" height="15" fill="rgb(231,95,95)" fg:x="3987" fg:w="8"/><text x="79.1692%" y="655.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="79.0578%" y="629" width="0.0198%" height="15" fill="rgb(220,79,79)" fg:x="3994" fg:w="1"/><text x="79.3078%" y="639.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="79.0578%" y="613" width="0.0198%" height="15" fill="rgb(254,129,129)" fg:x="3994" fg:w="1"/><text x="79.3078%" y="623.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="79.0578%" y="597" width="0.0198%" height="15" fill="rgb(241,111,111)" fg:x="3994" fg:w="1"/><text x="79.3078%" y="607.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="79.0578%" y="581" width="0.0198%" height="15" fill="rgb(240,108,108)" fg:x="3994" fg:w="1"/><text x="79.3078%" y="591.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="79.0578%" y="565" width="0.0198%" height="15" fill="rgb(240,109,109)" fg:x="3994" fg:w="1"/><text x="79.3078%" y="575.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="79.0578%" y="549" width="0.0198%" height="15" fill="rgb(233,99,99)" fg:x="3994" fg:w="1"/><text x="79.3078%" y="559.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="79.0578%" y="533" width="0.0198%" height="15" fill="rgb(244,115,115)" fg:x="3994" fg:w="1"/><text x="79.3078%" y="543.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="79.0578%" y="517" width="0.0198%" height="15" fill="rgb(215,73,73)" fg:x="3994" fg:w="1"/><text x="79.3078%" y="527.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::buffer (383 samples, 7.58%)</title><rect x="71.7340%" y="693" width="7.5812%" height="15" fill="rgb(226,226,68)" fg:x="3624" fg:w="383"/><text x="71.9840%" y="703.50">v8::array_..</text></g><g><title>v8::scope::HandleScope&lt;()&gt;::cast_local (383 samples, 7.58%)</title><rect x="71.7340%" y="677" width="7.5812%" height="15" fill="rgb(220,220,66)" fg:x="3624" fg:w="383"/><text x="71.9840%" y="687.50">v8::scope:..</text></g><g><title>v8::scope::data::ScopeData::get_mut (12 samples, 0.24%)</title><rect x="79.0776%" y="661" width="0.2375%" height="15" fill="rgb(194,194,56)" fg:x="3995" fg:w="12"/><text x="79.3276%" y="671.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (12 samples, 0.24%)</title><rect x="79.0776%" y="645" width="0.2375%" height="15" fill="rgb(177,177,50)" fg:x="3995" fg:w="12"/><text x="79.3276%" y="655.50"></text></g><g><title>v8::ArrayBufferView::ByteLength (35 samples, 0.69%)</title><rect x="79.3745%" y="677" width="0.6928%" height="15" fill="rgb(220,220,66)" fg:x="4010" fg:w="35"/><text x="79.6245%" y="687.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_length (57 samples, 1.13%)</title><rect x="79.3151%" y="693" width="1.1283%" height="15" fill="rgb(183,183,53)" fg:x="4007" fg:w="57"/><text x="79.5651%" y="703.50"></text></g><g><title>v8__ArrayBufferView__ByteLength (19 samples, 0.38%)</title><rect x="80.0673%" y="677" width="0.3761%" height="15" fill="rgb(202,53,53)" fg:x="4045" fg:w="19"/><text x="80.3173%" y="687.50"></text></g><g><title>ret_from_intr (2 samples, 0.04%)</title><rect x="80.4038%" y="661" width="0.0396%" height="15" fill="rgb(225,86,86)" fg:x="4062" fg:w="2"/><text x="80.6538%" y="671.50"></text></g><g><title>do_IRQ (2 samples, 0.04%)</title><rect x="80.4038%" y="645" width="0.0396%" height="15" fill="rgb(234,99,99)" fg:x="4062" fg:w="2"/><text x="80.6538%" y="655.50"></text></g><g><title>handle_fasteoi_irq (2 samples, 0.04%)</title><rect x="80.4038%" y="629" width="0.0396%" height="15" fill="rgb(203,54,54)" fg:x="4062" fg:w="2"/><text x="80.6538%" y="639.50"></text></g><g><title>handle_irq_event (2 samples, 0.04%)</title><rect x="80.4038%" y="613" width="0.0396%" height="15" fill="rgb(225,87,87)" fg:x="4062" fg:w="2"/><text x="80.6538%" y="623.50"></text></g><g><title>handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="80.4038%" y="597" width="0.0396%" height="15" fill="rgb(232,97,97)" fg:x="4062" fg:w="2"/><text x="80.6538%" y="607.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="80.4038%" y="581" width="0.0396%" height="15" fill="rgb(249,121,121)" fg:x="4062" fg:w="2"/><text x="80.6538%" y="591.50"></text></g><g><title>i2c_dw_isr (2 samples, 0.04%)</title><rect x="80.4038%" y="565" width="0.0396%" height="15" fill="rgb(219,77,77)" fg:x="4062" fg:w="2"/><text x="80.6538%" y="575.50"></text></g><g><title>dw_readl (2 samples, 0.04%)</title><rect x="80.4038%" y="549" width="0.0396%" height="15" fill="rgb(238,105,105)" fg:x="4062" fg:w="2"/><text x="80.6538%" y="559.50"></text></g><g><title>v8::ArrayBufferView::ByteOffset (32 samples, 0.63%)</title><rect x="80.4434%" y="677" width="0.6334%" height="15" fill="rgb(178,178,51)" fg:x="4064" fg:w="32"/><text x="80.6934%" y="687.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="81.0570%" y="661" width="0.0198%" height="15" fill="rgb(229,92,92)" fg:x="4095" fg:w="1"/><text x="81.3070%" y="671.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="81.0570%" y="645" width="0.0198%" height="15" fill="rgb(235,100,100)" fg:x="4095" fg:w="1"/><text x="81.3070%" y="655.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="81.0570%" y="629" width="0.0198%" height="15" fill="rgb(242,111,111)" fg:x="4095" fg:w="1"/><text x="81.3070%" y="639.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="81.0570%" y="613" width="0.0198%" height="15" fill="rgb(242,112,112)" fg:x="4095" fg:w="1"/><text x="81.3070%" y="623.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="81.0570%" y="597" width="0.0198%" height="15" fill="rgb(216,74,74)" fg:x="4095" fg:w="1"/><text x="81.3070%" y="607.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="81.0570%" y="581" width="0.0198%" height="15" fill="rgb(232,97,97)" fg:x="4095" fg:w="1"/><text x="81.3070%" y="591.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="81.0570%" y="565" width="0.0198%" height="15" fill="rgb(216,73,73)" fg:x="4095" fg:w="1"/><text x="81.3070%" y="575.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="81.0570%" y="549" width="0.0198%" height="15" fill="rgb(245,116,116)" fg:x="4095" fg:w="1"/><text x="81.3070%" y="559.50"></text></g><g><title>v8::array_buffer_view::&lt;impl v8::data::ArrayBufferView&gt;::byte_offset (44 samples, 0.87%)</title><rect x="80.4434%" y="693" width="0.8709%" height="15" fill="rgb(210,210,62)" fg:x="4064" fg:w="44"/><text x="80.6934%" y="703.50"></text></g><g><title>v8__ArrayBufferView__ByteOffset (12 samples, 0.24%)</title><rect x="81.0768%" y="677" width="0.2375%" height="15" fill="rgb(207,60,60)" fg:x="4096" fg:w="12"/><text x="81.3268%" y="687.50"></text></g><g><title>v8::Value::IsArrayBufferView (158 samples, 3.13%)</title><rect x="81.3143%" y="661" width="3.1275%" height="15" fill="rgb(220,220,66)" fg:x="4108" fg:w="158"/><text x="81.5643%" y="671.50">v8:..</text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="84.4220%" y="645" width="0.0198%" height="15" fill="rgb(208,62,62)" fg:x="4265" fg:w="1"/><text x="84.6720%" y="655.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="84.4220%" y="629" width="0.0198%" height="15" fill="rgb(221,81,81)" fg:x="4265" fg:w="1"/><text x="84.6720%" y="639.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="84.4220%" y="613" width="0.0198%" height="15" fill="rgb(215,72,72)" fg:x="4265" fg:w="1"/><text x="84.6720%" y="623.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="84.4220%" y="597" width="0.0198%" height="15" fill="rgb(203,54,54)" fg:x="4265" fg:w="1"/><text x="84.6720%" y="607.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="84.4220%" y="581" width="0.0198%" height="15" fill="rgb(216,73,73)" fg:x="4265" fg:w="1"/><text x="84.6720%" y="591.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="84.4220%" y="565" width="0.0198%" height="15" fill="rgb(235,101,101)" fg:x="4265" fg:w="1"/><text x="84.6720%" y="575.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="84.4220%" y="549" width="0.0198%" height="15" fill="rgb(207,61,61)" fg:x="4265" fg:w="1"/><text x="84.6720%" y="559.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="84.4220%" y="533" width="0.0198%" height="15" fill="rgb(249,122,122)" fg:x="4265" fg:w="1"/><text x="84.6720%" y="543.50"></text></g><g><title>v8::data::&lt;impl core::convert::TryFrom&lt;v8::handle::Local&lt;v8::data::Value&gt;&gt; for v8::handle::Local&lt;v8::data::ArrayBufferView&gt;&gt;::try_from (169 samples, 3.35%)</title><rect x="81.3143%" y="693" width="3.3452%" height="15" fill="rgb(188,188,54)" fg:x="4108" fg:w="169"/><text x="81.5643%" y="703.50">v8:..</text></g><g><title>v8::value::&lt;impl v8::data::Value&gt;::is_array_buffer_view (169 samples, 3.35%)</title><rect x="81.3143%" y="677" width="3.3452%" height="15" fill="rgb(193,193,56)" fg:x="4108" fg:w="169"/><text x="81.5643%" y="687.50">v8:..</text></g><g><title>v8__Value__IsArrayBufferView (11 samples, 0.22%)</title><rect x="84.4418%" y="661" width="0.2177%" height="15" fill="rgb(205,57,57)" fg:x="4266" fg:w="11"/><text x="84.6918%" y="671.50"></text></g><g><title>v8::External::Value (11 samples, 0.22%)</title><rect x="84.7783%" y="677" width="0.2177%" height="15" fill="rgb(177,177,50)" fg:x="4283" fg:w="11"/><text x="85.0283%" y="687.50"></text></g><g><title>v8::external::&lt;impl v8::data::External&gt;::value (21 samples, 0.42%)</title><rect x="84.6595%" y="693" width="0.4157%" height="15" fill="rgb(199,199,58)" fg:x="4277" fg:w="21"/><text x="84.9095%" y="703.50"></text></g><g><title>v8__External__Value (4 samples, 0.08%)</title><rect x="84.9960%" y="677" width="0.0792%" height="15" fill="rgb(206,59,59)" fg:x="4294" fg:w="4"/><text x="85.2460%" y="687.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="85.1742%" y="677" width="0.0198%" height="15" fill="rgb(239,107,107)" fg:x="4303" fg:w="1"/><text x="85.4242%" y="687.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="85.1742%" y="661" width="0.0198%" height="15" fill="rgb(248,120,120)" fg:x="4303" fg:w="1"/><text x="85.4242%" y="671.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="85.1742%" y="645" width="0.0198%" height="15" fill="rgb(251,125,125)" fg:x="4303" fg:w="1"/><text x="85.4242%" y="655.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="85.1742%" y="629" width="0.0198%" height="15" fill="rgb(207,61,61)" fg:x="4303" fg:w="1"/><text x="85.4242%" y="639.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="85.1742%" y="613" width="0.0198%" height="15" fill="rgb(230,94,94)" fg:x="4303" fg:w="1"/><text x="85.4242%" y="623.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="85.1742%" y="597" width="0.0198%" height="15" fill="rgb(232,97,97)" fg:x="4303" fg:w="1"/><text x="85.4242%" y="607.50"></text></g><g><title>idma64_irq (1 samples, 0.02%)</title><rect x="85.1742%" y="581" width="0.0198%" height="15" fill="rgb(216,74,74)" fg:x="4303" fg:w="1"/><text x="85.4242%" y="591.50"></text></g><g><title>v8::function::FunctionCallbackArguments::data (14 samples, 0.28%)</title><rect x="85.0752%" y="693" width="0.2771%" height="15" fill="rgb(193,193,56)" fg:x="4298" fg:w="14"/><text x="85.3252%" y="703.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (8 samples, 0.16%)</title><rect x="85.1940%" y="677" width="0.1584%" height="15" fill="rgb(215,72,72)" fg:x="4304" fg:w="8"/><text x="85.4440%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="85.7482%" y="677" width="0.0198%" height="15" fill="rgb(213,213,64)" fg:x="4332" fg:w="1"/><text x="85.9982%" y="687.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="85.7680%" y="677" width="0.0198%" height="15" fill="rgb(238,105,105)" fg:x="4333" fg:w="1"/><text x="86.0180%" y="687.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="85.7680%" y="661" width="0.0198%" height="15" fill="rgb(239,108,108)" fg:x="4333" fg:w="1"/><text x="86.0180%" y="671.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="85.7680%" y="645" width="0.0198%" height="15" fill="rgb(252,126,126)" fg:x="4333" fg:w="1"/><text x="86.0180%" y="655.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="85.7680%" y="629" width="0.0198%" height="15" fill="rgb(250,122,122)" fg:x="4333" fg:w="1"/><text x="86.0180%" y="639.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="85.7680%" y="613" width="0.0198%" height="15" fill="rgb(210,65,65)" fg:x="4333" fg:w="1"/><text x="86.0180%" y="623.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="85.7680%" y="597" width="0.0198%" height="15" fill="rgb(238,105,105)" fg:x="4333" fg:w="1"/><text x="86.0180%" y="607.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="85.7680%" y="581" width="0.0198%" height="15" fill="rgb(218,77,77)" fg:x="4333" fg:w="1"/><text x="86.0180%" y="591.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="85.7680%" y="565" width="0.0198%" height="15" fill="rgb(216,74,74)" fg:x="4333" fg:w="1"/><text x="86.0180%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (3,737 samples, 73.97%)</title><rect x="12.5891%" y="725" width="73.9707%" height="15" fill="rgb(195,195,57)" fg:x="636" fg:w="3737"/><text x="12.8391%" y="735.50">core::ops::function::Fn::call</text></g><g><title>runjs::op_encoding_encode_into_fast::v8_func (3,737 samples, 73.97%)</title><rect x="12.5891%" y="709" width="73.9707%" height="15" fill="rgb(202,202,59)" fg:x="636" fg:w="3737"/><text x="12.8391%" y="719.50">runjs::op_encoding_encode_into_fast::v8_func</text></g><g><title>v8::function::FunctionCallbackArguments::get (61 samples, 1.21%)</title><rect x="85.3523%" y="693" width="1.2074%" height="15" fill="rgb(189,189,55)" fg:x="4312" fg:w="61"/><text x="85.6023%" y="703.50"></text></g><g><title>v8__FunctionCallbackInfo__GetArgument (39 samples, 0.77%)</title><rect x="85.7878%" y="677" width="0.7720%" height="15" fill="rgb(212,68,68)" fg:x="4334" fg:w="39"/><text x="86.0378%" y="687.50"></text></g><g><title>v8::scope::data::ScopeData::get_mut (5 samples, 0.10%)</title><rect x="86.6587%" y="693" width="0.0990%" height="15" fill="rgb(188,188,55)" fg:x="4378" fg:w="5"/><text x="86.9087%" y="703.50"></text></g><g><title>v8::scope::data::ScopeData::try_activate_scope (5 samples, 0.10%)</title><rect x="86.6587%" y="677" width="0.0990%" height="15" fill="rgb(202,202,60)" fg:x="4378" fg:w="5"/><text x="86.9087%" y="687.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="86.8765%" y="677" width="0.0198%" height="15" fill="rgb(236,103,103)" fg:x="4389" fg:w="1"/><text x="87.1265%" y="687.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="86.8765%" y="661" width="0.0198%" height="15" fill="rgb(211,66,66)" fg:x="4389" fg:w="1"/><text x="87.1265%" y="671.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="86.8765%" y="645" width="0.0198%" height="15" fill="rgb(224,85,85)" fg:x="4389" fg:w="1"/><text x="87.1265%" y="655.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="86.8765%" y="629" width="0.0198%" height="15" fill="rgb(207,60,60)" fg:x="4389" fg:w="1"/><text x="87.1265%" y="639.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="86.8765%" y="613" width="0.0198%" height="15" fill="rgb(228,90,90)" fg:x="4389" fg:w="1"/><text x="87.1265%" y="623.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="86.8765%" y="597" width="0.0198%" height="15" fill="rgb(204,57,57)" fg:x="4389" fg:w="1"/><text x="87.1265%" y="607.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="86.8765%" y="581" width="0.0198%" height="15" fill="rgb(231,96,96)" fg:x="4389" fg:w="1"/><text x="87.1265%" y="591.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="86.8765%" y="565" width="0.0198%" height="15" fill="rgb(201,52,52)" fg:x="4389" fg:w="1"/><text x="87.1265%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.12%)</title><rect x="87.1140%" y="661" width="0.1188%" height="15" fill="rgb(175,175,50)" fg:x="4401" fg:w="6"/><text x="87.3640%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.12%)</title><rect x="87.1140%" y="645" width="0.1188%" height="15" fill="rgb(195,195,57)" fg:x="4401" fg:w="6"/><text x="87.3640%" y="655.50"></text></g><g><title>core::mem::replace (6 samples, 0.12%)</title><rect x="87.1140%" y="629" width="0.1188%" height="15" fill="rgb(201,201,59)" fg:x="4401" fg:w="6"/><text x="87.3640%" y="639.50"></text></g><g><title>core::ptr::write (6 samples, 0.12%)</title><rect x="87.1140%" y="613" width="0.1188%" height="15" fill="rgb(186,186,54)" fg:x="4401" fg:w="6"/><text x="87.3640%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="87.2328%" y="661" width="0.0198%" height="15" fill="rgb(213,213,63)" fg:x="4407" fg:w="1"/><text x="87.4828%" y="671.50"></text></g><g><title>&lt;v8::scope::data::ScopeTypeSpecificData as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="87.4703%" y="645" width="0.0396%" height="15" fill="rgb(225,225,68)" fg:x="4419" fg:w="2"/><text x="87.7203%" y="655.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="87.5099%" y="549" width="0.0198%" height="15" fill="rgb(214,70,70)" fg:x="4421" fg:w="1"/><text x="87.7599%" y="559.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="87.5099%" y="533" width="0.0198%" height="15" fill="rgb(219,78,78)" fg:x="4421" fg:w="1"/><text x="87.7599%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (15 samples, 0.30%)</title><rect x="87.2526%" y="661" width="0.2969%" height="15" fill="rgb(214,214,64)" fg:x="4408" fg:w="15"/><text x="87.5026%" y="671.50"></text></g><g><title>ret_from_intr (2 samples, 0.04%)</title><rect x="87.5099%" y="645" width="0.0396%" height="15" fill="rgb(211,66,66)" fg:x="4421" fg:w="2"/><text x="87.7599%" y="655.50"></text></g><g><title>do_IRQ (2 samples, 0.04%)</title><rect x="87.5099%" y="629" width="0.0396%" height="15" fill="rgb(230,95,95)" fg:x="4421" fg:w="2"/><text x="87.7599%" y="639.50"></text></g><g><title>handle_fasteoi_irq (2 samples, 0.04%)</title><rect x="87.5099%" y="613" width="0.0396%" height="15" fill="rgb(245,115,115)" fg:x="4421" fg:w="2"/><text x="87.7599%" y="623.50"></text></g><g><title>handle_irq_event (2 samples, 0.04%)</title><rect x="87.5099%" y="597" width="0.0396%" height="15" fill="rgb(233,99,99)" fg:x="4421" fg:w="2"/><text x="87.7599%" y="607.50"></text></g><g><title>handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="87.5099%" y="581" width="0.0396%" height="15" fill="rgb(205,58,58)" fg:x="4421" fg:w="2"/><text x="87.7599%" y="591.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="87.5099%" y="565" width="0.0396%" height="15" fill="rgb(202,54,54)" fg:x="4421" fg:w="2"/><text x="87.7599%" y="575.50"></text></g><g><title>idma64_irq (1 samples, 0.02%)</title><rect x="87.5297%" y="549" width="0.0198%" height="15" fill="rgb(254,128,128)" fg:x="4422" fg:w="1"/><text x="87.7797%" y="559.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (12 samples, 0.24%)</title><rect x="87.5495%" y="661" width="0.2375%" height="15" fill="rgb(204,204,60)" fg:x="4423" fg:w="12"/><text x="87.7995%" y="671.50"></text></g><g><title>v8__Isolate__SetData (10 samples, 0.20%)</title><rect x="87.5891%" y="645" width="0.1979%" height="15" fill="rgb(216,73,73)" fg:x="4425" fg:w="10"/><text x="87.8391%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::scope::CallbackScope&gt; (68 samples, 1.35%)</title><rect x="86.5598%" y="725" width="1.3460%" height="15" fill="rgb(205,205,60)" fg:x="4373" fg:w="68"/><text x="86.8098%" y="735.50"></text></g><g><title>&lt;v8::scope::CallbackScope&lt;C&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 1.35%)</title><rect x="86.5598%" y="709" width="1.3460%" height="15" fill="rgb(198,198,58)" fg:x="4373" fg:w="68"/><text x="86.8098%" y="719.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (58 samples, 1.15%)</title><rect x="86.7577%" y="693" width="1.1481%" height="15" fill="rgb(199,199,58)" fg:x="4383" fg:w="58"/><text x="87.0077%" y="703.50"></text></g><g><title>v8::scope::data::ScopeData::exit_scope (51 samples, 1.01%)</title><rect x="86.8963%" y="677" width="1.0095%" height="15" fill="rgb(199,199,59)" fg:x="4390" fg:w="51"/><text x="87.1463%" y="687.50"></text></g><g><title>v8::scope::data::ScopeData::get_isolate_mut (6 samples, 0.12%)</title><rect x="87.7870%" y="661" width="0.1188%" height="15" fill="rgb(221,221,66)" fg:x="4435" fg:w="6"/><text x="88.0370%" y="671.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="88.1235%" y="629" width="0.0198%" height="15" fill="rgb(252,125,125)" fg:x="4452" fg:w="1"/><text x="88.3735%" y="639.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="88.1433%" y="597" width="0.0198%" height="15" fill="rgb(234,100,100)" fg:x="4453" fg:w="1"/><text x="88.3933%" y="607.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="88.1433%" y="581" width="0.0198%" height="15" fill="rgb(202,54,54)" fg:x="4453" fg:w="1"/><text x="88.3933%" y="591.50"></text></g><g><title>v8::function::ReturnValue::from_function_callback_info (14 samples, 0.28%)</title><rect x="87.9058%" y="725" width="0.2771%" height="15" fill="rgb(195,195,57)" fg:x="4441" fg:w="14"/><text x="88.1558%" y="735.50"></text></g><g><title>v8__FunctionCallbackInfo__GetReturnValue (13 samples, 0.26%)</title><rect x="87.9256%" y="709" width="0.2573%" height="15" fill="rgb(223,84,84)" fg:x="4442" fg:w="13"/><text x="88.1756%" y="719.50"></text></g><g><title>ret_from_intr (3 samples, 0.06%)</title><rect x="88.1235%" y="693" width="0.0594%" height="15" fill="rgb(223,84,84)" fg:x="4452" fg:w="3"/><text x="88.3735%" y="703.50"></text></g><g><title>do_IRQ (3 samples, 0.06%)</title><rect x="88.1235%" y="677" width="0.0594%" height="15" fill="rgb(240,108,108)" fg:x="4452" fg:w="3"/><text x="88.3735%" y="687.50"></text></g><g><title>handle_fasteoi_irq (3 samples, 0.06%)</title><rect x="88.1235%" y="661" width="0.0594%" height="15" fill="rgb(209,63,63)" fg:x="4452" fg:w="3"/><text x="88.3735%" y="671.50"></text></g><g><title>handle_irq_event (3 samples, 0.06%)</title><rect x="88.1235%" y="645" width="0.0594%" height="15" fill="rgb(243,113,113)" fg:x="4452" fg:w="3"/><text x="88.3735%" y="655.50"></text></g><g><title>handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="88.1433%" y="629" width="0.0396%" height="15" fill="rgb(242,112,112)" fg:x="4453" fg:w="2"/><text x="88.3933%" y="639.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="88.1433%" y="613" width="0.0396%" height="15" fill="rgb(233,98,98)" fg:x="4453" fg:w="2"/><text x="88.3933%" y="623.50"></text></g><g><title>idma64_irq (1 samples, 0.02%)</title><rect x="88.1631%" y="597" width="0.0198%" height="15" fill="rgb(248,120,120)" fg:x="4454" fg:w="1"/><text x="88.4131%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.14%)</title><rect x="88.3610%" y="693" width="0.1386%" height="15" fill="rgb(186,186,54)" fg:x="4464" fg:w="7"/><text x="88.6110%" y="703.50"></text></g><g><title>v8::scope::data::ScopeData::get_current_mut (22 samples, 0.44%)</title><rect x="88.1829%" y="709" width="0.4355%" height="15" fill="rgb(180,180,52)" fg:x="4455" fg:w="22"/><text x="88.4329%" y="719.50"></text></g><g><title>v8::isolate::Isolate::get_current_scope_data (6 samples, 0.12%)</title><rect x="88.4996%" y="693" width="0.1188%" height="15" fill="rgb(177,177,50)" fg:x="4471" fg:w="6"/><text x="88.7496%" y="703.50"></text></g><g><title>v8__Isolate__GetData (3 samples, 0.06%)</title><rect x="88.5590%" y="677" width="0.0594%" height="15" fill="rgb(241,109,109)" fg:x="4474" fg:w="3"/><text x="88.8090%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (19 samples, 0.38%)</title><rect x="89.4497%" y="677" width="0.3761%" height="15" fill="rgb(216,216,64)" fg:x="4519" fg:w="19"/><text x="89.6997%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (19 samples, 0.38%)</title><rect x="89.4497%" y="661" width="0.3761%" height="15" fill="rgb(192,192,56)" fg:x="4519" fg:w="19"/><text x="89.6997%" y="671.50"></text></g><g><title>core::mem::replace (19 samples, 0.38%)</title><rect x="89.4497%" y="645" width="0.3761%" height="15" fill="rgb(216,216,65)" fg:x="4519" fg:w="19"/><text x="89.6997%" y="655.50"></text></g><g><title>core::ptr::write (19 samples, 0.38%)</title><rect x="89.4497%" y="629" width="0.3761%" height="15" fill="rgb(196,196,57)" fg:x="4519" fg:w="19"/><text x="89.6997%" y="639.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (40 samples, 0.79%)</title><rect x="89.8258%" y="677" width="0.7918%" height="15" fill="rgb(224,224,68)" fg:x="4538" fg:w="40"/><text x="90.0758%" y="687.50"></text></g><g><title>v8__Isolate__SetData (38 samples, 0.75%)</title><rect x="89.8654%" y="661" width="0.7522%" height="15" fill="rgb(210,65,65)" fg:x="4540" fg:w="38"/><text x="90.1154%" y="671.50"></text></g><g><title>v8::scope::data::ScopeData::allocate_or_reuse_scope_data (6 samples, 0.12%)</title><rect x="90.6176%" y="677" width="0.1188%" height="15" fill="rgb(178,178,51)" fg:x="4578" fg:w="6"/><text x="90.8676%" y="687.50"></text></g><g><title>v8::scope::data::ScopeData::get_isolate_mut (2 samples, 0.04%)</title><rect x="90.7363%" y="677" width="0.0396%" height="15" fill="rgb(222,222,67)" fg:x="4584" fg:w="2"/><text x="90.9863%" y="687.50"></text></g><g><title>v8::scope::data::ScopeData::new_callback_scope_data (113 samples, 2.24%)</title><rect x="88.6184%" y="709" width="2.2367%" height="15" fill="rgb(196,196,57)" fg:x="4477" fg:w="113"/><text x="88.8684%" y="719.50">v..</text></g><g><title>v8::scope::data::ScopeData::new_scope_data_with (113 samples, 2.24%)</title><rect x="88.6184%" y="693" width="2.2367%" height="15" fill="rgb(218,218,65)" fg:x="4477" fg:w="113"/><text x="88.8684%" y="703.50">v..</text></g><g><title>v8::scope::data::ScopeData::new_callback_scope_data::_{{closure}} (4 samples, 0.08%)</title><rect x="90.7759%" y="677" width="0.0792%" height="15" fill="rgb(209,209,62)" fg:x="4586" fg:w="4"/><text x="91.0259%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.08%)</title><rect x="90.7759%" y="661" width="0.0792%" height="15" fill="rgb(190,190,55)" fg:x="4586" fg:w="4"/><text x="91.0259%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.08%)</title><rect x="90.7759%" y="645" width="0.0792%" height="15" fill="rgb(201,201,59)" fg:x="4586" fg:w="4"/><text x="91.0259%" y="655.50"></text></g><g><title>core::mem::replace (4 samples, 0.08%)</title><rect x="90.7759%" y="629" width="0.0792%" height="15" fill="rgb(203,203,60)" fg:x="4586" fg:w="4"/><text x="91.0259%" y="639.50"></text></g><g><title>core::ptr::write (4 samples, 0.08%)</title><rect x="90.7759%" y="613" width="0.0792%" height="15" fill="rgb(181,181,52)" fg:x="4586" fg:w="4"/><text x="91.0259%" y="623.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3,971 samples, 78.60%)</title><rect x="12.4505%" y="757" width="78.6025%" height="15" fill="rgb(197,197,58)" fg:x="629" fg:w="3971"/><text x="12.7005%" y="767.50">&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn</text></g><g><title>v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}} (3,969 samples, 78.56%)</title><rect x="12.4901%" y="741" width="78.5629%" height="15" fill="rgb(225,225,68)" fg:x="631" fg:w="3969"/><text x="12.7401%" y="751.50">v8::function::_&lt;impl v8::support::MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const v8::function::FunctionCallbackInfo)&gt;::mapping::_{{closure}}</text></g><g><title>v8::scope::CallbackScope::new (145 samples, 2.87%)</title><rect x="88.1829%" y="725" width="2.8702%" height="15" fill="rgb(191,191,56)" fg:x="4455" fg:w="145"/><text x="88.4329%" y="735.50">v8..</text></g><g><title>v8::scope::param::NewCallbackScope::get_isolate_mut_and_maybe_current_context (10 samples, 0.20%)</title><rect x="90.8551%" y="709" width="0.1979%" height="15" fill="rgb(209,209,62)" fg:x="4590" fg:w="10"/><text x="91.1051%" y="719.50"></text></g><g><title>&lt;&amp;v8::function::FunctionCallbackInfo as v8::scope::getter::GetIsolate&gt;::get_isolate_mut (10 samples, 0.20%)</title><rect x="90.8551%" y="693" width="0.1979%" height="15" fill="rgb(202,202,60)" fg:x="4590" fg:w="10"/><text x="91.1051%" y="703.50"></text></g><g><title>v8__FunctionCallbackInfo__GetIsolate (10 samples, 0.20%)</title><rect x="90.8551%" y="677" width="0.1979%" height="15" fill="rgb(201,51,51)" fg:x="4590" fg:w="10"/><text x="91.1051%" y="687.50"></text></g><g><title>Builtins_CallApiCallback (4,075 samples, 80.66%)</title><rect x="10.4117%" y="773" width="80.6611%" height="15" fill="rgb(238,105,105)" fg:x="526" fg:w="4075"/><text x="10.6617%" y="783.50">Builtins_CallApiCallback</text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="91.0530%" y="757" width="0.0198%" height="15" fill="rgb(217,74,74)" fg:x="4600" fg:w="1"/><text x="91.3030%" y="767.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="91.0530%" y="741" width="0.0198%" height="15" fill="rgb(228,91,91)" fg:x="4600" fg:w="1"/><text x="91.3030%" y="751.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="91.0530%" y="725" width="0.0198%" height="15" fill="rgb(220,79,79)" fg:x="4600" fg:w="1"/><text x="91.3030%" y="735.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="91.0530%" y="709" width="0.0198%" height="15" fill="rgb(200,51,51)" fg:x="4600" fg:w="1"/><text x="91.3030%" y="719.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="91.0530%" y="693" width="0.0198%" height="15" fill="rgb(237,103,103)" fg:x="4600" fg:w="1"/><text x="91.3030%" y="703.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="91.0530%" y="677" width="0.0198%" height="15" fill="rgb(206,59,59)" fg:x="4600" fg:w="1"/><text x="91.3030%" y="687.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="91.0530%" y="661" width="0.0198%" height="15" fill="rgb(222,82,82)" fg:x="4600" fg:w="1"/><text x="91.3030%" y="671.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="91.0530%" y="645" width="0.0198%" height="15" fill="rgb(227,89,89)" fg:x="4600" fg:w="1"/><text x="91.3030%" y="655.50"></text></g><g><title>Builtins_LoadIC (127 samples, 2.51%)</title><rect x="91.0728%" y="773" width="2.5139%" height="15" fill="rgb(200,50,50)" fg:x="4601" fg:w="127"/><text x="91.3228%" y="783.50">Bu..</text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="93.5867%" y="773" width="0.0198%" height="15" fill="rgb(249,122,122)" fg:x="4728" fg:w="1"/><text x="93.8367%" y="783.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="93.5867%" y="757" width="0.0198%" height="15" fill="rgb(250,123,123)" fg:x="4728" fg:w="1"/><text x="93.8367%" y="767.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="93.5867%" y="741" width="0.0198%" height="15" fill="rgb(220,79,79)" fg:x="4728" fg:w="1"/><text x="93.8367%" y="751.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="93.5867%" y="725" width="0.0198%" height="15" fill="rgb(239,107,107)" fg:x="4728" fg:w="1"/><text x="93.8367%" y="735.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="93.5867%" y="709" width="0.0198%" height="15" fill="rgb(244,114,114)" fg:x="4728" fg:w="1"/><text x="93.8367%" y="719.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="93.5867%" y="693" width="0.0198%" height="15" fill="rgb(214,71,71)" fg:x="4728" fg:w="1"/><text x="93.8367%" y="703.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="93.5867%" y="677" width="0.0198%" height="15" fill="rgb(218,76,76)" fg:x="4728" fg:w="1"/><text x="93.8367%" y="687.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="93.5867%" y="661" width="0.0198%" height="15" fill="rgb(225,86,86)" fg:x="4728" fg:w="1"/><text x="93.8367%" y="671.50"></text></g><g><title>v8__FunctionCallbackInfo__GetIsolate (1 samples, 0.02%)</title><rect x="93.6065%" y="773" width="0.0198%" height="15" fill="rgb(247,118,118)" fg:x="4729" fg:w="1"/><text x="93.8565%" y="783.50"></text></g><g><title>[perf-868.map] (4,309 samples, 85.29%)</title><rect x="8.4323%" y="789" width="85.2930%" height="15" fill="rgb(236,103,103)" fg:x="426" fg:w="4309"/><text x="8.6823%" y="799.50">[perf-868.map]</text></g><g><title>v8__Isolate__GetData (5 samples, 0.10%)</title><rect x="93.6263%" y="773" width="0.0990%" height="15" fill="rgb(227,89,89)" fg:x="4730" fg:w="5"/><text x="93.8763%" y="783.50"></text></g><g><title>&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (4 samples, 0.08%)</title><rect x="93.7253%" y="773" width="0.0792%" height="15" fill="rgb(209,209,62)" fg:x="4735" fg:w="4"/><text x="93.9753%" y="783.50"></text></g><g><title>v8::array_buffer::BackingStore::byte_length (11 samples, 0.22%)</title><rect x="93.9034%" y="757" width="0.2177%" height="15" fill="rgb(201,201,59)" fg:x="4744" fg:w="11"/><text x="94.1534%" y="767.50"></text></g><g><title>&lt;v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (25 samples, 0.49%)</title><rect x="93.8044%" y="773" width="0.4949%" height="15" fill="rgb(198,198,58)" fg:x="4739" fg:w="25"/><text x="94.0544%" y="783.50"></text></g><g><title>v8::array_buffer::BackingStore::data (9 samples, 0.18%)</title><rect x="94.1211%" y="757" width="0.1781%" height="15" fill="rgb(217,217,65)" fg:x="4755" fg:w="9"/><text x="94.3711%" y="767.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__get (21 samples, 0.42%)</title><rect x="94.2993%" y="773" width="0.4157%" height="15" fill="rgb(217,75,75)" fg:x="4764" fg:w="21"/><text x="94.5493%" y="783.50"></text></g><g><title>std__shared_ptr__v8__BackingStore__reset (11 samples, 0.22%)</title><rect x="94.7150%" y="773" width="0.2177%" height="15" fill="rgb(216,73,73)" fg:x="4785" fg:w="11"/><text x="94.9650%" y="783.50"></text></g><g><title>v8::ArrayBuffer::GetBackingStore (13 samples, 0.26%)</title><rect x="94.9327%" y="773" width="0.2573%" height="15" fill="rgb(197,197,58)" fg:x="4796" fg:w="13"/><text x="95.1827%" y="783.50"></text></g><g><title>v8::ArrayBufferView::ByteOffset (11 samples, 0.22%)</title><rect x="95.1900%" y="773" width="0.2177%" height="15" fill="rgb(210,210,63)" fg:x="4809" fg:w="11"/><text x="95.4400%" y="783.50"></text></g><g><title>v8::BackingStore::Data (1 samples, 0.02%)</title><rect x="95.4078%" y="773" width="0.0198%" height="15" fill="rgb(188,188,54)" fg:x="4820" fg:w="1"/><text x="95.6578%" y="783.50"></text></g><g><title>v8::BackingStore::IsShared (15 samples, 0.30%)</title><rect x="95.4276%" y="773" width="0.2969%" height="15" fill="rgb(218,218,65)" fg:x="4821" fg:w="15"/><text x="95.6776%" y="783.50"></text></g><g><title>v8::External::Value (2 samples, 0.04%)</title><rect x="95.7245%" y="773" width="0.0396%" height="15" fill="rgb(215,215,64)" fg:x="4836" fg:w="2"/><text x="95.9745%" y="783.50"></text></g><g><title>v8::String::WriteUtf8 (1 samples, 0.02%)</title><rect x="95.7641%" y="773" width="0.0198%" height="15" fill="rgb(192,192,56)" fg:x="4838" fg:w="1"/><text x="96.0141%" y="783.50"></text></g><g><title>v8::base::ThreadEntry (1 samples, 0.02%)</title><rect x="95.7838%" y="773" width="0.0198%" height="15" fill="rgb(223,223,67)" fg:x="4839" fg:w="1"/><text x="96.0338%" y="783.50"></text></g><g><title>v8::scope::data::ScopeData::notify_scope_dropped (19 samples, 0.38%)</title><rect x="95.8036%" y="773" width="0.3761%" height="15" fill="rgb(222,222,67)" fg:x="4840" fg:w="19"/><text x="96.0536%" y="783.50"></text></g><g><title>v8::scope::data::ScopeData::exit_scope (10 samples, 0.20%)</title><rect x="95.9818%" y="757" width="0.1979%" height="15" fill="rgb(198,198,58)" fg:x="4849" fg:w="10"/><text x="96.2318%" y="767.50"></text></g><g><title>v8::isolate::Isolate::set_current_scope_data (7 samples, 0.14%)</title><rect x="96.0412%" y="741" width="0.1386%" height="15" fill="rgb(204,204,60)" fg:x="4852" fg:w="7"/><text x="96.2912%" y="751.50"></text></g><g><title>v8__ArrayBufferView__ByteOffset (4 samples, 0.08%)</title><rect x="96.1797%" y="773" width="0.0792%" height="15" fill="rgb(244,114,114)" fg:x="4859" fg:w="4"/><text x="96.4297%" y="783.50"></text></g><g><title>v8__ArrayBuffer__GetBackingStore (12 samples, 0.24%)</title><rect x="96.2589%" y="773" width="0.2375%" height="15" fill="rgb(232,97,97)" fg:x="4863" fg:w="12"/><text x="96.5089%" y="783.50"></text></g><g><title>v8__BackingStore__ByteLength (12 samples, 0.24%)</title><rect x="96.4964%" y="773" width="0.2375%" height="15" fill="rgb(251,124,124)" fg:x="4875" fg:w="12"/><text x="96.7464%" y="783.50"></text></g><g><title>v8__BackingStore__Data (8 samples, 0.16%)</title><rect x="96.7340%" y="773" width="0.1584%" height="15" fill="rgb(227,90,90)" fg:x="4887" fg:w="8"/><text x="96.9840%" y="783.50"></text></g><g><title>v8__BackingStore__IsShared (1 samples, 0.02%)</title><rect x="96.8923%" y="773" width="0.0198%" height="15" fill="rgb(254,128,128)" fg:x="4895" fg:w="1"/><text x="97.1423%" y="783.50"></text></g><g><title>v8__FunctionCallbackInfo__Data (1 samples, 0.02%)</title><rect x="96.9121%" y="773" width="0.0198%" height="15" fill="rgb(230,93,93)" fg:x="4896" fg:w="1"/><text x="97.1621%" y="783.50"></text></g><g><title>v8__FunctionCallbackInfo__GetArgument (11 samples, 0.22%)</title><rect x="96.9319%" y="773" width="0.2177%" height="15" fill="rgb(215,73,73)" fg:x="4897" fg:w="11"/><text x="97.1819%" y="783.50"></text></g><g><title>v8__FunctionCallbackInfo__GetIsolate (1 samples, 0.02%)</title><rect x="97.1496%" y="773" width="0.0198%" height="15" fill="rgb(223,83,83)" fg:x="4908" fg:w="1"/><text x="97.3996%" y="783.50"></text></g><g><title>v8__FunctionCallbackInfo__GetReturnValue (1 samples, 0.02%)</title><rect x="97.1694%" y="773" width="0.0198%" height="15" fill="rgb(251,124,124)" fg:x="4909" fg:w="1"/><text x="97.4194%" y="783.50"></text></g><g><title>v8__Isolate__GetData (1 samples, 0.02%)</title><rect x="97.1892%" y="773" width="0.0198%" height="15" fill="rgb(240,109,109)" fg:x="4910" fg:w="1"/><text x="97.4392%" y="783.50"></text></g><g><title>v8__Isolate__SetData (2 samples, 0.04%)</title><rect x="97.2090%" y="773" width="0.0396%" height="15" fill="rgb(207,61,61)" fg:x="4911" fg:w="2"/><text x="97.4590%" y="783.50"></text></g><g><title>[unknown] (179 samples, 3.54%)</title><rect x="93.7253%" y="789" width="3.5432%" height="15" fill="rgb(241,110,110)" fg:x="4735" fg:w="179"/><text x="93.9753%" y="799.50">[unk..</text></g><g><title>v8__Value__IsArrayBufferView (1 samples, 0.02%)</title><rect x="97.2486%" y="773" width="0.0198%" height="15" fill="rgb(208,62,62)" fg:x="4913" fg:w="1"/><text x="97.4986%" y="783.50"></text></g><g><title>ret_from_fork (34 samples, 0.67%)</title><rect x="97.2684%" y="773" width="0.6730%" height="15" fill="rgb(202,53,53)" fg:x="4914" fg:w="34"/><text x="97.5184%" y="783.50"></text></g><g><title>schedule_tail (34 samples, 0.67%)</title><rect x="97.2684%" y="757" width="0.6730%" height="15" fill="rgb(252,126,126)" fg:x="4914" fg:w="34"/><text x="97.5184%" y="767.50"></text></g><g><title>finish_task_switch (34 samples, 0.67%)</title><rect x="97.2684%" y="741" width="0.6730%" height="15" fill="rgb(228,91,91)" fg:x="4914" fg:w="34"/><text x="97.5184%" y="751.50"></text></g><g><title>__perf_event_task_sched_in (34 samples, 0.67%)</title><rect x="97.2684%" y="725" width="0.6730%" height="15" fill="rgb(223,84,84)" fg:x="4914" fg:w="34"/><text x="97.5184%" y="735.50"></text></g><g><title>x86_pmu_enable (34 samples, 0.67%)</title><rect x="97.2684%" y="709" width="0.6730%" height="15" fill="rgb(214,70,70)" fg:x="4914" fg:w="34"/><text x="97.5184%" y="719.50"></text></g><g><title>intel_tfa_pmu_enable_all (34 samples, 0.67%)</title><rect x="97.2684%" y="693" width="0.6730%" height="15" fill="rgb(222,82,82)" fg:x="4914" fg:w="34"/><text x="97.5184%" y="703.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (34 samples, 0.67%)</title><rect x="97.2684%" y="677" width="0.6730%" height="15" fill="rgb(219,78,78)" fg:x="4914" fg:w="34"/><text x="97.5184%" y="687.50"></text></g><g><title>native_write_msr (34 samples, 0.67%)</title><rect x="97.2684%" y="661" width="0.6730%" height="15" fill="rgb(228,91,91)" fg:x="4914" fg:w="34"/><text x="97.5184%" y="671.50"></text></g><g><title>__GI___ctype_init (1 samples, 0.02%)</title><rect x="97.9414%" y="757" width="0.0198%" height="15" fill="rgb(211,67,67)" fg:x="4948" fg:w="1"/><text x="98.1914%" y="767.50"></text></g><g><title>__set_task_comm (1 samples, 0.02%)</title><rect x="97.9612%" y="677" width="0.0198%" height="15" fill="rgb(251,125,125)" fg:x="4949" fg:w="1"/><text x="98.2112%" y="687.50"></text></g><g><title>perf_event_comm (1 samples, 0.02%)</title><rect x="97.9612%" y="661" width="0.0198%" height="15" fill="rgb(206,59,59)" fg:x="4949" fg:w="1"/><text x="98.2112%" y="671.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="97.9612%" y="645" width="0.0198%" height="15" fill="rgb(211,67,67)" fg:x="4949" fg:w="1"/><text x="98.2112%" y="655.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="97.9612%" y="629" width="0.0198%" height="15" fill="rgb(238,106,106)" fg:x="4949" fg:w="1"/><text x="98.2112%" y="639.50"></text></g><g><title>perf_event_comm_output (1 samples, 0.02%)</title><rect x="97.9612%" y="613" width="0.0198%" height="15" fill="rgb(216,73,73)" fg:x="4949" fg:w="1"/><text x="98.2112%" y="623.50"></text></g><g><title>__perf_event_header__init_id (1 samples, 0.02%)</title><rect x="97.9612%" y="597" width="0.0198%" height="15" fill="rgb(243,113,113)" fg:x="4949" fg:w="1"/><text x="98.2112%" y="607.50"></text></g><g><title>perf_event_pid_type (1 samples, 0.02%)</title><rect x="97.9612%" y="581" width="0.0198%" height="15" fill="rgb(229,93,93)" fg:x="4949" fg:w="1"/><text x="98.2112%" y="591.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="97.9810%" y="677" width="0.0198%" height="15" fill="rgb(248,120,120)" fg:x="4950" fg:w="1"/><text x="98.2310%" y="687.50"></text></g><g><title>__GI___clone (38 samples, 0.75%)</title><rect x="97.2684%" y="789" width="0.7522%" height="15" fill="rgb(233,98,98)" fg:x="4914" fg:w="38"/><text x="97.5184%" y="799.50"></text></g><g><title>start_thread (4 samples, 0.08%)</title><rect x="97.9414%" y="773" width="0.0792%" height="15" fill="rgb(237,104,104)" fg:x="4948" fg:w="4"/><text x="98.1914%" y="783.50"></text></g><g><title>v8::base::ThreadEntry (3 samples, 0.06%)</title><rect x="97.9612%" y="757" width="0.0594%" height="15" fill="rgb(225,225,68)" fg:x="4949" fg:w="3"/><text x="98.2112%" y="767.50"></text></g><g><title>__GI___prctl (3 samples, 0.06%)</title><rect x="97.9612%" y="741" width="0.0594%" height="15" fill="rgb(227,90,90)" fg:x="4949" fg:w="3"/><text x="98.2112%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="97.9612%" y="725" width="0.0594%" height="15" fill="rgb(202,53,53)" fg:x="4949" fg:w="3"/><text x="98.2112%" y="735.50"></text></g><g><title>do_syscall_64 (3 samples, 0.06%)</title><rect x="97.9612%" y="709" width="0.0594%" height="15" fill="rgb(217,75,75)" fg:x="4949" fg:w="3"/><text x="98.2112%" y="719.50"></text></g><g><title>__x64_sys_prctl (3 samples, 0.06%)</title><rect x="97.9612%" y="693" width="0.0594%" height="15" fill="rgb(238,105,105)" fg:x="4949" fg:w="3"/><text x="98.2112%" y="703.50"></text></g><g><title>security_task_prctl (1 samples, 0.02%)</title><rect x="98.0008%" y="677" width="0.0198%" height="15" fill="rgb(209,63,63)" fg:x="4951" fg:w="1"/><text x="98.2508%" y="687.50"></text></g><g><title>v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;::RecordSlot&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="98.0206%" y="133" width="0.0198%" height="15" fill="rgb(221,221,66)" fg:x="4952" fg:w="1"/><text x="98.2706%" y="143.50"></text></g><g><title>&lt;v8::isolate::OwnedIsolate as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.0206%" y="357" width="0.0396%" height="15" fill="rgb(179,179,51)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="367.50"></text></g><g><title>v8::isolate::Isolate::dispose (2 samples, 0.04%)</title><rect x="98.0206%" y="341" width="0.0396%" height="15" fill="rgb(195,195,57)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="351.50"></text></g><g><title>v8::isolate::Isolate::low_memory_notification (2 samples, 0.04%)</title><rect x="98.0206%" y="325" width="0.0396%" height="15" fill="rgb(190,190,55)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="335.50"></text></g><g><title>v8::Isolate::LowMemoryNotification (2 samples, 0.04%)</title><rect x="98.0206%" y="309" width="0.0396%" height="15" fill="rgb(188,188,54)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="319.50"></text></g><g><title>v8::internal::Heap::CollectAllAvailableGarbage (2 samples, 0.04%)</title><rect x="98.0206%" y="293" width="0.0396%" height="15" fill="rgb(198,198,58)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="303.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (2 samples, 0.04%)</title><rect x="98.0206%" y="277" width="0.0396%" height="15" fill="rgb(185,185,53)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="287.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (2 samples, 0.04%)</title><rect x="98.0206%" y="261" width="0.0396%" height="15" fill="rgb(223,223,67)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="271.50"></text></g><g><title>v8::internal::Heap::MarkCompact (2 samples, 0.04%)</title><rect x="98.0206%" y="245" width="0.0396%" height="15" fill="rgb(183,183,52)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="255.50"></text></g><g><title>v8::internal::MarkCompactCollector::CollectGarbage (2 samples, 0.04%)</title><rect x="98.0206%" y="229" width="0.0396%" height="15" fill="rgb(182,182,52)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="239.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkLiveObjects (2 samples, 0.04%)</title><rect x="98.0206%" y="213" width="0.0396%" height="15" fill="rgb(222,222,67)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="223.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkTransitiveClosureUntilFixpoint (2 samples, 0.04%)</title><rect x="98.0206%" y="197" width="0.0396%" height="15" fill="rgb(180,180,51)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="207.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessEphemerons (2 samples, 0.04%)</title><rect x="98.0206%" y="181" width="0.0396%" height="15" fill="rgb(175,175,50)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="191.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessMarkingWorklist (2 samples, 0.04%)</title><rect x="98.0206%" y="165" width="0.0396%" height="15" fill="rgb(180,180,52)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="175.50"></text></g><g><title>v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;::VisitLeftTrimmableArray&lt;v8::internal::FixedArray&gt; (2 samples, 0.04%)</title><rect x="98.0206%" y="149" width="0.0396%" height="15" fill="rgb(196,196,57)" fg:x="4952" fg:w="2"/><text x="98.2706%" y="159.50"></text></g><g><title>v8::internal::MarkingVisitorBase&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;, v8::internal::MarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="98.0404%" y="133" width="0.0198%" height="15" fill="rgb(205,205,61)" fg:x="4953" fg:w="1"/><text x="98.2904%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;deno_core::runtime::JsRuntime&gt; (3 samples, 0.06%)</title><rect x="98.0206%" y="405" width="0.0594%" height="15" fill="rgb(209,209,62)" fg:x="4952" fg:w="3"/><text x="98.2706%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;v8::isolate::OwnedIsolate&gt;&gt; (3 samples, 0.06%)</title><rect x="98.0206%" y="389" width="0.0594%" height="15" fill="rgb(203,203,60)" fg:x="4952" fg:w="3"/><text x="98.2706%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;v8::isolate::OwnedIsolate&gt; (3 samples, 0.06%)</title><rect x="98.0206%" y="373" width="0.0594%" height="15" fill="rgb(196,196,57)" fg:x="4952" fg:w="3"/><text x="98.2706%" y="383.50"></text></g><g><title>v8::internal::Isolate::Delete (1 samples, 0.02%)</title><rect x="98.0602%" y="357" width="0.0198%" height="15" fill="rgb(214,214,64)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="367.50"></text></g><g><title>v8::internal::Isolate::Deinit (1 samples, 0.02%)</title><rect x="98.0602%" y="341" width="0.0198%" height="15" fill="rgb(190,190,55)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="351.50"></text></g><g><title>v8::internal::Heap::TearDown (1 samples, 0.02%)</title><rect x="98.0602%" y="325" width="0.0198%" height="15" fill="rgb(198,198,58)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="335.50"></text></g><g><title>v8::internal::CodeSpace::~CodeSpace (1 samples, 0.02%)</title><rect x="98.0602%" y="309" width="0.0198%" height="15" fill="rgb(205,205,60)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="319.50"></text></g><g><title>v8::internal::PagedSpace::~PagedSpace (1 samples, 0.02%)</title><rect x="98.0602%" y="293" width="0.0198%" height="15" fill="rgb(216,216,65)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="303.50"></text></g><g><title>v8::internal::PagedSpaceBase::TearDown (1 samples, 0.02%)</title><rect x="98.0602%" y="277" width="0.0198%" height="15" fill="rgb(176,176,50)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="287.50"></text></g><g><title>v8::internal::MemoryAllocator::Free (1 samples, 0.02%)</title><rect x="98.0602%" y="261" width="0.0198%" height="15" fill="rgb(186,186,54)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="271.50"></text></g><g><title>v8::internal::VirtualMemory::Free (1 samples, 0.02%)</title><rect x="98.0602%" y="245" width="0.0198%" height="15" fill="rgb(226,226,68)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="255.50"></text></g><g><title>v8::base::BoundedPageAllocator::FreePages (1 samples, 0.02%)</title><rect x="98.0602%" y="229" width="0.0198%" height="15" fill="rgb(200,200,59)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="239.50"></text></g><g><title>v8::base::OS::SetPermissions (1 samples, 0.02%)</title><rect x="98.0602%" y="213" width="0.0198%" height="15" fill="rgb(213,213,63)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="223.50"></text></g><g><title>__GI___mprotect (1 samples, 0.02%)</title><rect x="98.0602%" y="197" width="0.0198%" height="15" fill="rgb(249,122,122)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="98.0602%" y="181" width="0.0198%" height="15" fill="rgb(209,63,63)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="191.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="98.0602%" y="165" width="0.0198%" height="15" fill="rgb(213,69,69)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="175.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="98.0602%" y="149" width="0.0198%" height="15" fill="rgb(248,119,119)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="159.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="98.0602%" y="133" width="0.0198%" height="15" fill="rgb(224,85,85)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="143.50"></text></g><g><title>mprotect_fixup (1 samples, 0.02%)</title><rect x="98.0602%" y="117" width="0.0198%" height="15" fill="rgb(250,122,122)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="127.50"></text></g><g><title>change_protection (1 samples, 0.02%)</title><rect x="98.0602%" y="101" width="0.0198%" height="15" fill="rgb(225,86,86)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="111.50"></text></g><g><title>change_protection_range (1 samples, 0.02%)</title><rect x="98.0602%" y="85" width="0.0198%" height="15" fill="rgb(217,75,75)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="95.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="98.0602%" y="69" width="0.0198%" height="15" fill="rgb(252,125,125)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="79.50"></text></g><g><title>flush_tlb_func_common.constprop.9 (1 samples, 0.02%)</title><rect x="98.0602%" y="53" width="0.0198%" height="15" fill="rgb(239,107,107)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="63.50"></text></g><g><title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="98.0602%" y="37" width="0.0198%" height="15" fill="rgb(221,81,81)" fg:x="4954" fg:w="1"/><text x="98.3102%" y="47.50"></text></g><g><title>Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="98.0800%" y="229" width="0.0198%" height="15" fill="rgb(231,95,95)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="239.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="98.0800%" y="213" width="0.0198%" height="15" fill="rgb(247,118,118)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="223.50"></text></g><g><title>v8::internal::Runtime_CompileLazy (1 samples, 0.02%)</title><rect x="98.0800%" y="197" width="0.0198%" height="15" fill="rgb(209,209,62)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="207.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="98.0800%" y="181" width="0.0198%" height="15" fill="rgb(201,201,59)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="191.50"></text></g><g><title>v8::internal::Compiler::Compile (1 samples, 0.02%)</title><rect x="98.0800%" y="165" width="0.0198%" height="15" fill="rgb(204,204,60)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="175.50"></text></g><g><title>v8::internal::parsing::ParseFunction (1 samples, 0.02%)</title><rect x="98.0800%" y="149" width="0.0198%" height="15" fill="rgb(186,186,54)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="159.50"></text></g><g><title>v8::internal::Parser::ParseFunction (1 samples, 0.02%)</title><rect x="98.0800%" y="133" width="0.0198%" height="15" fill="rgb(219,219,66)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="143.50"></text></g><g><title>v8::internal::Parser::DoParseFunction (1 samples, 0.02%)</title><rect x="98.0800%" y="117" width="0.0198%" height="15" fill="rgb(175,175,50)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="127.50"></text></g><g><title>v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseArrowFunctionLiteral (1 samples, 0.02%)</title><rect x="98.0800%" y="101" width="0.0198%" height="15" fill="rgb(202,202,60)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="111.50"></text></g><g><title>v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseFunctionBody (1 samples, 0.02%)</title><rect x="98.0800%" y="85" width="0.0198%" height="15" fill="rgb(197,197,58)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="95.50"></text></g><g><title>v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseAssignmentExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="98.0800%" y="69" width="0.0198%" height="15" fill="rgb(186,186,54)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="79.50"></text></g><g><title>v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseLogicalExpression (1 samples, 0.02%)</title><rect x="98.0800%" y="53" width="0.0198%" height="15" fill="rgb(202,202,59)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="63.50"></text></g><g><title>v8::internal::GetCurrentStackPosition (1 samples, 0.02%)</title><rect x="98.0800%" y="37" width="0.0198%" height="15" fill="rgb(205,205,61)" fg:x="4955" fg:w="1"/><text x="98.3300%" y="47.50"></text></g><g><title>Builtins_CallApiCallback (31 samples, 0.61%)</title><rect x="98.0998%" y="213" width="0.6136%" height="15" fill="rgb(238,106,106)" fg:x="4956" fg:w="31"/><text x="98.3498%" y="223.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="98.6936%" y="197" width="0.0198%" height="15" fill="rgb(203,54,54)" fg:x="4986" fg:w="1"/><text x="98.9436%" y="207.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="98.6936%" y="181" width="0.0198%" height="15" fill="rgb(252,127,127)" fg:x="4986" fg:w="1"/><text x="98.9436%" y="191.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="98.6936%" y="165" width="0.0198%" height="15" fill="rgb(249,122,122)" fg:x="4986" fg:w="1"/><text x="98.9436%" y="175.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="98.6936%" y="149" width="0.0198%" height="15" fill="rgb(242,111,111)" fg:x="4986" fg:w="1"/><text x="98.9436%" y="159.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="98.6936%" y="133" width="0.0198%" height="15" fill="rgb(212,68,68)" fg:x="4986" fg:w="1"/><text x="98.9436%" y="143.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="98.6936%" y="117" width="0.0198%" height="15" fill="rgb(233,98,98)" fg:x="4986" fg:w="1"/><text x="98.9436%" y="127.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="98.6936%" y="101" width="0.0198%" height="15" fill="rgb(205,57,57)" fg:x="4986" fg:w="1"/><text x="98.9436%" y="111.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="98.6936%" y="85" width="0.0198%" height="15" fill="rgb(214,71,71)" fg:x="4986" fg:w="1"/><text x="98.9436%" y="95.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="99.5051%" y="197" width="0.0198%" height="15" fill="rgb(254,128,128)" fg:x="5027" fg:w="1"/><text x="99.7551%" y="207.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="99.5051%" y="181" width="0.0198%" height="15" fill="rgb(252,126,126)" fg:x="5027" fg:w="1"/><text x="99.7551%" y="191.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="99.5051%" y="165" width="0.0198%" height="15" fill="rgb(241,110,110)" fg:x="5027" fg:w="1"/><text x="99.7551%" y="175.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="99.5051%" y="149" width="0.0198%" height="15" fill="rgb(219,78,78)" fg:x="5027" fg:w="1"/><text x="99.7551%" y="159.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="99.5051%" y="133" width="0.0198%" height="15" fill="rgb(246,118,118)" fg:x="5027" fg:w="1"/><text x="99.7551%" y="143.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="99.5051%" y="117" width="0.0198%" height="15" fill="rgb(245,116,116)" fg:x="5027" fg:w="1"/><text x="99.7551%" y="127.50"></text></g><g><title>i2c_dw_isr (1 samples, 0.02%)</title><rect x="99.5051%" y="101" width="0.0198%" height="15" fill="rgb(229,93,93)" fg:x="5027" fg:w="1"/><text x="99.7551%" y="111.50"></text></g><g><title>dw_readl (1 samples, 0.02%)</title><rect x="99.5051%" y="85" width="0.0198%" height="15" fill="rgb(207,61,61)" fg:x="5027" fg:w="1"/><text x="99.7551%" y="95.50"></text></g><g><title>v8::internal::Isolate::FireCallCompletedCallbackInternal (74 samples, 1.46%)</title><rect x="98.0800%" y="373" width="1.4648%" height="15" fill="rgb(225,225,68)" fg:x="4955" fg:w="74"/><text x="98.3300%" y="383.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (74 samples, 1.46%)</title><rect x="98.0800%" y="357" width="1.4648%" height="15" fill="rgb(177,177,50)" fg:x="4955" fg:w="74"/><text x="98.3300%" y="367.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (74 samples, 1.46%)</title><rect x="98.0800%" y="341" width="1.4648%" height="15" fill="rgb(198,198,58)" fg:x="4955" fg:w="74"/><text x="98.3300%" y="351.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (74 samples, 1.46%)</title><rect x="98.0800%" y="325" width="1.4648%" height="15" fill="rgb(197,197,58)" fg:x="4955" fg:w="74"/><text x="98.3300%" y="335.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (74 samples, 1.46%)</title><rect x="98.0800%" y="309" width="1.4648%" height="15" fill="rgb(201,201,59)" fg:x="4955" fg:w="74"/><text x="98.3300%" y="319.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (74 samples, 1.46%)</title><rect x="98.0800%" y="293" width="1.4648%" height="15" fill="rgb(220,220,66)" fg:x="4955" fg:w="74"/><text x="98.3300%" y="303.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (74 samples, 1.46%)</title><rect x="98.0800%" y="277" width="1.4648%" height="15" fill="rgb(241,109,109)" fg:x="4955" fg:w="74"/><text x="98.3300%" y="287.50"></text></g><g><title>Builtins_RunMicrotasks (74 samples, 1.46%)</title><rect x="98.0800%" y="261" width="1.4648%" height="15" fill="rgb(214,71,71)" fg:x="4955" fg:w="74"/><text x="98.3300%" y="271.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (74 samples, 1.46%)</title><rect x="98.0800%" y="245" width="1.4648%" height="15" fill="rgb(227,89,89)" fg:x="4955" fg:w="74"/><text x="98.3300%" y="255.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (73 samples, 1.44%)</title><rect x="98.0998%" y="229" width="1.4450%" height="15" fill="rgb(228,91,91)" fg:x="4956" fg:w="73"/><text x="98.3498%" y="239.50"></text></g><g><title>Builtins_LoadIC (42 samples, 0.83%)</title><rect x="98.7134%" y="213" width="0.8314%" height="15" fill="rgb(228,91,91)" fg:x="4987" fg:w="42"/><text x="98.9634%" y="223.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="99.5249%" y="197" width="0.0198%" height="15" fill="rgb(242,111,111)" fg:x="5028" fg:w="1"/><text x="99.7749%" y="207.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="99.5249%" y="181" width="0.0198%" height="15" fill="rgb(250,122,122)" fg:x="5028" fg:w="1"/><text x="99.7749%" y="191.50"></text></g><g><title>Builtins_CallApiCallback (8 samples, 0.16%)</title><rect x="99.5447%" y="197" width="0.1584%" height="15" fill="rgb(215,72,72)" fg:x="5029" fg:w="8"/><text x="99.7947%" y="207.50"></text></g><g><title>deno_core::runtime::JsRuntime::mod_evaluate (92 samples, 1.82%)</title><rect x="98.0800%" y="405" width="1.8211%" height="15" fill="rgb(228,228,69)" fg:x="4955" fg:w="92"/><text x="98.3300%" y="415.50">d..</text></g><g><title>v8::Module::Evaluate (92 samples, 1.82%)</title><rect x="98.0800%" y="389" width="1.8211%" height="15" fill="rgb(207,207,61)" fg:x="4955" fg:w="92"/><text x="98.3300%" y="399.50">v..</text></g><g><title>v8::internal::SourceTextModule::Evaluate (18 samples, 0.36%)</title><rect x="99.5447%" y="373" width="0.3563%" height="15" fill="rgb(199,199,58)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="383.50"></text></g><g><title>v8::internal::SourceTextModule::InnerModuleEvaluation (18 samples, 0.36%)</title><rect x="99.5447%" y="357" width="0.3563%" height="15" fill="rgb(200,200,59)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="367.50"></text></g><g><title>v8::internal::SourceTextModule::ExecuteModule (18 samples, 0.36%)</title><rect x="99.5447%" y="341" width="0.3563%" height="15" fill="rgb(199,199,58)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="351.50"></text></g><g><title>v8::internal::Execution::TryCall (18 samples, 0.36%)</title><rect x="99.5447%" y="325" width="0.3563%" height="15" fill="rgb(210,210,62)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="335.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (18 samples, 0.36%)</title><rect x="99.5447%" y="309" width="0.3563%" height="15" fill="rgb(177,177,50)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="319.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (18 samples, 0.36%)</title><rect x="99.5447%" y="293" width="0.3563%" height="15" fill="rgb(207,207,61)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="303.50"></text></g><g><title>Builtins_JSEntry (18 samples, 0.36%)</title><rect x="99.5447%" y="277" width="0.3563%" height="15" fill="rgb(246,117,117)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="287.50"></text></g><g><title>Builtins_JSEntryTrampoline (18 samples, 0.36%)</title><rect x="99.5447%" y="261" width="0.3563%" height="15" fill="rgb(231,96,96)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="271.50"></text></g><g><title>Builtins_GeneratorPrototypeNext (18 samples, 0.36%)</title><rect x="99.5447%" y="245" width="0.3563%" height="15" fill="rgb(223,84,84)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="255.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (18 samples, 0.36%)</title><rect x="99.5447%" y="229" width="0.3563%" height="15" fill="rgb(244,114,114)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="239.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (18 samples, 0.36%)</title><rect x="99.5447%" y="213" width="0.3563%" height="15" fill="rgb(233,98,98)" fg:x="5029" fg:w="18"/><text x="99.7947%" y="223.50"></text></g><g><title>Builtins_LoadIC (10 samples, 0.20%)</title><rect x="99.7031%" y="197" width="0.1979%" height="15" fill="rgb(251,124,124)" fg:x="5037" fg:w="10"/><text x="99.9531%" y="207.50"></text></g><g><title>__libc_start_main (96 samples, 1.90%)</title><rect x="98.0206%" y="773" width="1.9002%" height="15" fill="rgb(222,82,82)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="783.50">_..</text></g><g><title>main (96 samples, 1.90%)</title><rect x="98.0206%" y="757" width="1.9002%" height="15" fill="rgb(243,113,113)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="767.50">m..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (96 samples, 1.90%)</title><rect x="98.0206%" y="741" width="1.9002%" height="15" fill="rgb(219,219,66)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="751.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (96 samples, 1.90%)</title><rect x="98.0206%" y="725" width="1.9002%" height="15" fill="rgb(227,227,68)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="735.50">c..</text></g><g><title>runjs::main (96 samples, 1.90%)</title><rect x="98.0206%" y="709" width="1.9002%" height="15" fill="rgb(217,217,65)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="719.50">r..</text></g><g><title>tokio::runtime::Runtime::block_on (96 samples, 1.90%)</title><rect x="98.0206%" y="693" width="1.9002%" height="15" fill="rgb(177,177,50)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="703.50">t..</text></g><g><title>tokio::runtime::basic_scheduler::BasicScheduler::block_on (96 samples, 1.90%)</title><rect x="98.0206%" y="677" width="1.9002%" height="15" fill="rgb(187,187,54)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="687.50">t..</text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::block_on (96 samples, 1.90%)</title><rect x="98.0206%" y="661" width="1.9002%" height="15" fill="rgb(205,205,60)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="671.50">t..</text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::enter (96 samples, 1.90%)</title><rect x="98.0206%" y="645" width="1.9002%" height="15" fill="rgb(223,223,67)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="655.50">t..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (96 samples, 1.90%)</title><rect x="98.0206%" y="629" width="1.9002%" height="15" fill="rgb(221,221,66)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="639.50">t..</text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::enter::_{{closure}} (96 samples, 1.90%)</title><rect x="98.0206%" y="613" width="1.9002%" height="15" fill="rgb(204,204,60)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="623.50">t..</text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::block_on::_{{closure}} (96 samples, 1.90%)</title><rect x="98.0206%" y="597" width="1.9002%" height="15" fill="rgb(222,222,67)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="607.50">t..</text></g><g><title>tokio::runtime::basic_scheduler::Context::enter (96 samples, 1.90%)</title><rect x="98.0206%" y="581" width="1.9002%" height="15" fill="rgb(189,189,55)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="591.50">t..</text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::block_on::_{{closure}}::_{{closure}} (96 samples, 1.90%)</title><rect x="98.0206%" y="565" width="1.9002%" height="15" fill="rgb(183,183,53)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="575.50">t..</text></g><g><title>tokio::coop::budget (96 samples, 1.90%)</title><rect x="98.0206%" y="549" width="1.9002%" height="15" fill="rgb(190,190,55)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="559.50">t..</text></g><g><title>tokio::coop::with_budget (96 samples, 1.90%)</title><rect x="98.0206%" y="533" width="1.9002%" height="15" fill="rgb(212,212,63)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="543.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (96 samples, 1.90%)</title><rect x="98.0206%" y="517" width="1.9002%" height="15" fill="rgb(175,175,50)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="527.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (96 samples, 1.90%)</title><rect x="98.0206%" y="501" width="1.9002%" height="15" fill="rgb(209,209,62)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="511.50">s..</text></g><g><title>tokio::coop::with_budget::_{{closure}} (96 samples, 1.90%)</title><rect x="98.0206%" y="485" width="1.9002%" height="15" fill="rgb(181,181,52)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="495.50">t..</text></g><g><title>tokio::runtime::basic_scheduler::CoreGuard::block_on::_{{closure}}::_{{closure}}::_{{closure}} (96 samples, 1.90%)</title><rect x="98.0206%" y="469" width="1.9002%" height="15" fill="rgb(211,211,63)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="479.50">t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (96 samples, 1.90%)</title><rect x="98.0206%" y="453" width="1.9002%" height="15" fill="rgb(193,193,56)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="463.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (96 samples, 1.90%)</title><rect x="98.0206%" y="437" width="1.9002%" height="15" fill="rgb(176,176,50)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="447.50">&lt;..</text></g><g><title>runjs::run_js::_{{closure}} (96 samples, 1.90%)</title><rect x="98.0206%" y="421" width="1.9002%" height="15" fill="rgb(229,229,69)" fg:x="4952" fg:w="96"/><text x="98.2706%" y="431.50">r..</text></g><g><title>deno_core::runtime::JsRuntime::new (1 samples, 0.02%)</title><rect x="99.9010%" y="405" width="0.0198%" height="15" fill="rgb(224,224,68)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="415.50"></text></g><g><title>v8::isolate::Isolate::new (1 samples, 0.02%)</title><rect x="99.9010%" y="389" width="0.0198%" height="15" fill="rgb(202,202,60)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="399.50"></text></g><g><title>v8::Isolate::New (1 samples, 0.02%)</title><rect x="99.9010%" y="373" width="0.0198%" height="15" fill="rgb(220,220,66)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="383.50"></text></g><g><title>v8::Isolate::Initialize (1 samples, 0.02%)</title><rect x="99.9010%" y="357" width="0.0198%" height="15" fill="rgb(229,229,69)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="367.50"></text></g><g><title>v8::internal::Snapshot::Initialize (1 samples, 0.02%)</title><rect x="99.9010%" y="341" width="0.0198%" height="15" fill="rgb(194,194,57)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="351.50"></text></g><g><title>v8::internal::Isolate::InitWithSnapshot (1 samples, 0.02%)</title><rect x="99.9010%" y="325" width="0.0198%" height="15" fill="rgb(229,229,69)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="335.50"></text></g><g><title>v8::internal::Isolate::Init (1 samples, 0.02%)</title><rect x="99.9010%" y="309" width="0.0198%" height="15" fill="rgb(221,221,66)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="319.50"></text></g><g><title>v8::internal::StartupDeserializer::DeserializeIntoIsolate (1 samples, 0.02%)</title><rect x="99.9010%" y="293" width="0.0198%" height="15" fill="rgb(223,223,67)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="303.50"></text></g><g><title>v8::internal::Heap::IterateRoots (1 samples, 0.02%)</title><rect x="99.9010%" y="277" width="0.0198%" height="15" fill="rgb(205,205,61)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="287.50"></text></g><g><title>v8::internal::Heap::IterateBuiltins (1 samples, 0.02%)</title><rect x="99.9010%" y="261" width="0.0198%" height="15" fill="rgb(223,223,67)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="271.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::VisitRootPointers (1 samples, 0.02%)</title><rect x="99.9010%" y="245" width="0.0198%" height="15" fill="rgb(200,200,59)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="255.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (1 samples, 0.02%)</title><rect x="99.9010%" y="229" width="0.0198%" height="15" fill="rgb(177,177,50)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="239.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="99.9010%" y="213" width="0.0198%" height="15" fill="rgb(226,226,68)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="223.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="99.9010%" y="197" width="0.0198%" height="15" fill="rgb(222,222,67)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="207.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.02%)</title><rect x="99.9010%" y="181" width="0.0198%" height="15" fill="rgb(195,195,57)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="191.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.02%)</title><rect x="99.9010%" y="165" width="0.0198%" height="15" fill="rgb(200,200,59)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="175.50"></text></g><g><title>v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadData (1 samples, 0.02%)</title><rect x="99.9010%" y="149" width="0.0198%" height="15" fill="rgb(225,225,68)" fg:x="5047" fg:w="1"/><text x="100.1510%" y="159.50"></text></g><g><title>_start (97 samples, 1.92%)</title><rect x="98.0206%" y="789" width="1.9200%" height="15" fill="rgb(203,54,54)" fg:x="4952" fg:w="97"/><text x="98.2706%" y="799.50">_..</text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="99.9208%" y="773" width="0.0198%" height="15" fill="rgb(214,71,71)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="783.50"></text></g><g><title>_dl_start_final (1 samples, 0.02%)</title><rect x="99.9208%" y="757" width="0.0198%" height="15" fill="rgb(241,109,109)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="767.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="99.9208%" y="741" width="0.0198%" height="15" fill="rgb(248,120,120)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="751.50"></text></g><g><title>dl_main (1 samples, 0.02%)</title><rect x="99.9208%" y="725" width="0.0198%" height="15" fill="rgb(249,122,122)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="735.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="99.9208%" y="709" width="0.0198%" height="15" fill="rgb(207,61,61)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="719.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="99.9208%" y="693" width="0.0198%" height="15" fill="rgb(203,55,55)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="703.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="99.9208%" y="677" width="0.0198%" height="15" fill="rgb(251,125,125)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="687.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="99.9208%" y="661" width="0.0198%" height="15" fill="rgb(252,126,126)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="671.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.02%)</title><rect x="99.9208%" y="645" width="0.0198%" height="15" fill="rgb(239,107,107)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="655.50"></text></g><g><title>_dl_map_segments (1 samples, 0.02%)</title><rect x="99.9208%" y="629" width="0.0198%" height="15" fill="rgb(231,96,96)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="639.50"></text></g><g><title>__mmap64 (1 samples, 0.02%)</title><rect x="99.9208%" y="613" width="0.0198%" height="15" fill="rgb(213,69,69)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.9208%" y="597" width="0.0198%" height="15" fill="rgb(241,110,110)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.9208%" y="581" width="0.0198%" height="15" fill="rgb(245,116,116)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="591.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="99.9208%" y="565" width="0.0198%" height="15" fill="rgb(224,85,85)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="575.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.9208%" y="549" width="0.0198%" height="15" fill="rgb(245,116,116)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="559.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.9208%" y="533" width="0.0198%" height="15" fill="rgb(254,129,129)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="543.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="99.9208%" y="517" width="0.0198%" height="15" fill="rgb(208,62,62)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="527.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="99.9208%" y="501" width="0.0198%" height="15" fill="rgb(225,87,87)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="511.50"></text></g><g><title>vma_link (1 samples, 0.02%)</title><rect x="99.9208%" y="485" width="0.0198%" height="15" fill="rgb(221,81,81)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="495.50"></text></g><g><title>__vma_link_file (1 samples, 0.02%)</title><rect x="99.9208%" y="469" width="0.0198%" height="15" fill="rgb(202,53,53)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="479.50"></text></g><g><title>vma_interval_tree_insert (1 samples, 0.02%)</title><rect x="99.9208%" y="453" width="0.0198%" height="15" fill="rgb(232,97,97)" fg:x="5048" fg:w="1"/><text x="100.1708%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.9406%" y="789" width="0.0198%" height="15" fill="rgb(252,126,126)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="799.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.9406%" y="773" width="0.0198%" height="15" fill="rgb(223,83,83)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="783.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.9406%" y="757" width="0.0198%" height="15" fill="rgb(254,129,129)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="767.50"></text></g><g><title>__do_execve_file.isra.39 (1 samples, 0.02%)</title><rect x="99.9406%" y="741" width="0.0198%" height="15" fill="rgb(215,72,72)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="751.50"></text></g><g><title>search_binary_handler (1 samples, 0.02%)</title><rect x="99.9406%" y="725" width="0.0198%" height="15" fill="rgb(232,96,96)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="735.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.9406%" y="709" width="0.0198%" height="15" fill="rgb(242,111,111)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="719.50"></text></g><g><title>setup_arg_pages (1 samples, 0.02%)</title><rect x="99.9406%" y="693" width="0.0198%" height="15" fill="rgb(238,105,105)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="703.50"></text></g><g><title>mprotect_fixup (1 samples, 0.02%)</title><rect x="99.9406%" y="677" width="0.0198%" height="15" fill="rgb(220,79,79)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="687.50"></text></g><g><title>change_protection (1 samples, 0.02%)</title><rect x="99.9406%" y="661" width="0.0198%" height="15" fill="rgb(230,93,93)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="671.50"></text></g><g><title>change_protection_range (1 samples, 0.02%)</title><rect x="99.9406%" y="645" width="0.0198%" height="15" fill="rgb(213,69,69)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="655.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="99.9406%" y="629" width="0.0198%" height="15" fill="rgb(248,120,120)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="639.50"></text></g><g><title>flush_tlb_func_common.constprop.9 (1 samples, 0.02%)</title><rect x="99.9406%" y="613" width="0.0198%" height="15" fill="rgb(214,70,70)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="623.50"></text></g><g><title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="99.9406%" y="597" width="0.0198%" height="15" fill="rgb(246,117,117)" fg:x="5049" fg:w="1"/><text x="100.1906%" y="607.50"></text></g><g><title>irq_entries_start (1 samples, 0.02%)</title><rect x="99.9604%" y="789" width="0.0198%" height="15" fill="rgb(203,55,55)" fg:x="5050" fg:w="1"/><text x="100.2104%" y="799.50"></text></g><g><title>all (5,052 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(200,51,51)" fg:x="0" fg:w="5052"/><text x="0.2500%" y="831.50"></text></g><g><title>runjs (4,964 samples, 98.26%)</title><rect x="1.7419%" y="805" width="98.2581%" height="15" fill="rgb(230,94,94)" fg:x="88" fg:w="4964"/><text x="1.9919%" y="815.50">runjs</text></g><g><title>ret_from_fork (1 samples, 0.02%)</title><rect x="99.9802%" y="789" width="0.0198%" height="15" fill="rgb(251,125,125)" fg:x="5051" fg:w="1"/><text x="100.2302%" y="799.50"></text></g><g><title>schedule_tail (1 samples, 0.02%)</title><rect x="99.9802%" y="773" width="0.0198%" height="15" fill="rgb(211,66,66)" fg:x="5051" fg:w="1"/><text x="100.2302%" y="783.50"></text></g><g><title>finish_task_switch (1 samples, 0.02%)</title><rect x="99.9802%" y="757" width="0.0198%" height="15" fill="rgb(243,113,113)" fg:x="5051" fg:w="1"/><text x="100.2302%" y="767.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.02%)</title><rect x="99.9802%" y="741" width="0.0198%" height="15" fill="rgb(252,125,125)" fg:x="5051" fg:w="1"/><text x="100.2302%" y="751.50"></text></g><g><title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="99.9802%" y="725" width="0.0198%" height="15" fill="rgb(214,71,71)" fg:x="5051" fg:w="1"/><text x="100.2302%" y="735.50"></text></g><g><title>intel_tfa_pmu_enable_all (1 samples, 0.02%)</title><rect x="99.9802%" y="709" width="0.0198%" height="15" fill="rgb(250,123,123)" fg:x="5051" fg:w="1"/><text x="100.2302%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.31 (1 samples, 0.02%)</title><rect x="99.9802%" y="693" width="0.0198%" height="15" fill="rgb(218,77,77)" fg:x="5051" fg:w="1"/><text x="100.2302%" y="703.50"></text></g><g><title>native_write_msr (1 samples, 0.02%)</title><rect x="99.9802%" y="677" width="0.0198%" height="15" fill="rgb(224,84,84)" fg:x="5051" fg:w="1"/><text x="100.2302%" y="687.50"></text></g></svg></svg>